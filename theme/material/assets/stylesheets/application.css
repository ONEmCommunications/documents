@charset "UTF-8";html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}html{-webkit-text-size-adjust:none;-moz-text-size-adjust:none;-ms-text-size-adjust:none;text-size-adjust:none}body{margin:0}hr{overflow:visible;box-sizing:content-box}a{-webkit-text-decoration-skip:objects}a,button,input,label{-webkit-tap-highlight-color:transparent}a{color:inherit;text-decoration:none}small,sub,sup{font-size:80%}sub,sup{position:relative;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}table{border-collapse:separate;border-spacing:0}td,th{font-weight:400;vertical-align:top}button{margin:0;padding:0;border:0;outline-style:none;background:transparent;font-size:inherit}input{border:0;outline:0}.md-clipboard:before,.md-icon,.md-nav__button,.md-nav__link:after,.md-nav__title:before,.md-search-result__article--document:before,.md-source-file:before,.md-typeset .admonition>.admonition-title:before,.md-typeset .admonition>summary:before,.md-typeset .critic.comment:before,.md-typeset .footnote-backref,.md-typeset .task-list-control .task-list-indicator:before,.md-typeset details>.admonition-title:before,.md-typeset details>summary:before,.md-typeset summary:after{font-family:Material Icons;font-style:normal;font-variant:normal;font-weight:400;line-height:1;text-transform:none;white-space:nowrap;speak:none;word-wrap:normal;direction:ltr}.md-content__icon,.md-footer-nav__button,.md-header-nav__button,.md-nav__button,.md-nav__title:before,.md-search-result__article--document:before{display:inline-block;margin:.2rem;padding:.4rem;font-size:1.2rem;cursor:pointer}.md-icon--arrow-back:before{content:""}.md-icon--arrow-forward:before{content:""}.md-icon--menu:before{content:""}.md-icon--search:before{content:""}[dir=rtl] .md-icon--arrow-back:before{content:""}[dir=rtl] .md-icon--arrow-forward:before{content:""}body{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}body,input{color:rgba(0,0,0,.87);-webkit-font-feature-settings:"kern","liga";font-feature-settings:"kern","liga";font-family:Helvetica Neue,Helvetica,Arial,sans-serif}code,kbd,pre{color:rgba(0,0,0,.87);-webkit-font-feature-settings:"kern";font-feature-settings:"kern";font-family:Courier New,Courier,monospace}.md-typeset{font-size:.8rem;line-height:1.6;-webkit-print-color-adjust:exact}.md-typeset blockquote,.md-typeset ol,.md-typeset p,.md-typeset ul{margin:1em 0}.md-typeset h1{margin:0 0 2rem;color:rgba(0,0,0,.54);font-size:1.5625rem;line-height:1.3}.md-typeset h1,.md-typeset h2{font-weight:300;letter-spacing:-.01em}.md-typeset h2{margin:2rem 0 .8rem;font-size:1.25rem;line-height:1.4}.md-typeset h3{margin:1.6rem 0 .8rem;font-size:1rem;font-weight:400;letter-spacing:-.01em;line-height:1.5}.md-typeset h2+h3{margin-top:.8rem}.md-typeset h4{font-size:.8rem}.md-typeset h4,.md-typeset h5,.md-typeset h6{margin:.8rem 0;font-weight:700;letter-spacing:-.01em}.md-typeset h5,.md-typeset h6{color:rgba(0,0,0,.54);font-size:.64rem}.md-typeset h5{text-transform:uppercase}.md-typeset hr{margin:1.5em 0;border-bottom:.05rem dotted rgba(0,0,0,.26)}.md-typeset a{color:#0d47a1;word-break:break-word}.md-typeset a,.md-typeset a:before{transition:color .125s}.md-typeset a:active,.md-typeset a:hover{color:#82b1ff}.md-typeset code,.md-typeset pre{background-color:hsla(0,0%,92.5%,.5);color:#37474f;font-size:85%;direction:ltr}.md-typeset code{margin:0 .29412em;padding:.07353em 0;border-radius:.1rem;box-shadow:.29412em 0 0 hsla(0,0%,92.5%,.5),-.29412em 0 0 hsla(0,0%,92.5%,.5);word-break:break-word;-webkit-box-decoration-break:clone;box-decoration-break:clone}.md-typeset h1 code,.md-typeset h2 code,.md-typeset h3 code,.md-typeset h4 code,.md-typeset h5 code,.md-typeset h6 code{margin:0;background-color:transparent;box-shadow:none}.md-typeset a>code{margin:inherit;padding:inherit;border-radius:initial;background-color:inherit;color:inherit;box-shadow:none}.md-typeset pre{position:relative;margin:1em 0;border-radius:.1rem;line-height:1.4;-webkit-overflow-scrolling:touch}.md-typeset pre>code{display:block;margin:0;padding:.525rem .6rem;background-color:transparent;font-size:inherit;box-shadow:none;-webkit-box-decoration-break:slice;box-decoration-break:slice;overflow:auto}.md-typeset pre>code::-webkit-scrollbar{width:.2rem;height:.2rem}.md-typeset pre>code::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.26)}.md-typeset pre>code::-webkit-scrollbar-thumb:hover{background-color:#82b1ff}.md-typeset kbd{padding:0 .29412em;border-radius:.15rem;border:.05rem solid #c9c9c9;border-bottom-color:#bcbcbc;background-color:#fcfcfc;color:#555;font-size:85%;box-shadow:0 .05rem 0 #b0b0b0;word-break:break-word}.md-typeset mark{margin:0 .25em;padding:.0625em 0;border-radius:.1rem;background-color:rgba(255,235,59,.5);box-shadow:.25em 0 0 rgba(255,235,59,.5),-.25em 0 0 rgba(255,235,59,.5);word-break:break-word;-webkit-box-decoration-break:clone;box-decoration-break:clone}.md-typeset abbr{border-bottom:.05rem dotted rgba(0,0,0,.54);text-decoration:none;cursor:help}.md-typeset small{opacity:.75}.md-typeset sub,.md-typeset sup{margin-left:.07812em}[dir=rtl] .md-typeset sub,[dir=rtl] .md-typeset sup{margin-right:.07812em;margin-left:0}.md-typeset blockquote{padding-left:.6rem;border-left:.2rem solid rgba(0,0,0,.26);color:rgba(0,0,0,.54)}[dir=rtl] .md-typeset blockquote{padding-right:.6rem;padding-left:0;border-right:.2rem solid rgba(0,0,0,.26);border-left:initial}.md-typeset ul{list-style-type:disc}.md-typeset ol,.md-typeset ul{margin-left:.625em;padding:0}[dir=rtl] .md-typeset ol,[dir=rtl] .md-typeset ul{margin-right:.625em;margin-left:0}.md-typeset ol ol,.md-typeset ul ol{list-style-type:lower-alpha}.md-typeset ol ol ol,.md-typeset ul ol ol{list-style-type:lower-roman}.md-typeset ol li,.md-typeset ul li{margin-bottom:.5em;margin-left:1.25em}[dir=rtl] .md-typeset ol li,[dir=rtl] .md-typeset ul li{margin-right:1.25em;margin-left:0}.md-typeset ol li blockquote,.md-typeset ol li p,.md-typeset ul li blockquote,.md-typeset ul li p{margin:.5em 0}.md-typeset ol li:last-child,.md-typeset ul li:last-child{margin-bottom:0}.md-typeset ol li ol,.md-typeset ol li ul,.md-typeset ul li ol,.md-typeset ul li ul{margin:.5em 0 .5em .625em}[dir=rtl] .md-typeset ol li ol,[dir=rtl] .md-typeset ol li ul,[dir=rtl] .md-typeset ul li ol,[dir=rtl] .md-typeset ul li ul{margin-right:.625em;margin-left:0}.md-typeset dd{margin:1em 0 1em 1.875em}[dir=rtl] .md-typeset dd{margin-right:1.875em;margin-left:0}.md-typeset iframe,.md-typeset img,.md-typeset svg{max-width:100%}.md-typeset table:not([class]){box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12),0 3px 1px -2px rgba(0,0,0,.2);display:inline-block;max-width:100%;border-radius:.1rem;font-size:.64rem;overflow:auto;-webkit-overflow-scrolling:touch}.md-typeset table:not([class])+*{margin-top:1.5em}.md-typeset table:not([class]) td:not([align]),.md-typeset table:not([class]) th:not([align]){text-align:left}[dir=rtl] .md-typeset table:not([class]) td:not([align]),[dir=rtl] .md-typeset table:not([class]) th:not([align]){text-align:right}.md-typeset table:not([class]) th{min-width:5rem;padding:.6rem .8rem;background-color:rgba(0,0,0,.54);color:#fff;vertical-align:top}.md-typeset table:not([class]) td{padding:.6rem .8rem;border-top:.05rem solid rgba(0,0,0,.07);vertical-align:top}.md-typeset table:not([class]) tr{transition:background-color .125s}.md-typeset table:not([class]) tr:hover{background-color:rgba(0,0,0,.035);box-shadow:inset 0 .05rem 0 #fff}.md-typeset table:not([class]) tr:first-child td{border-top:0}.md-typeset table:not([class]) a{word-break:normal}.md-typeset__scrollwrap{margin:1em -.8rem;overflow-x:auto;-webkit-overflow-scrolling:touch}.md-typeset .md-typeset__table{display:inline-block;margin-bottom:.5em;padding:0 .8rem}.md-typeset .md-typeset__table table{display:table;width:100%;margin:0;overflow:hidden}html{font-size:125%;overflow-x:hidden}body,html{height:100%}body{position:relative;font-size:.5rem}hr{display:block;height:.05rem;padding:0;border:0}.md-svg{display:none}.md-grid{max-width:61rem;margin-right:auto;margin-left:auto}.md-container,.md-main{overflow:auto}.md-container{display:table;width:100%;height:100%;padding-top:2.4rem;table-layout:fixed}.md-main{display:table-row;height:100%}.md-main__inner{height:100%;padding-top:1.5rem;padding-bottom:.05rem}.md-toggle{display:none}.md-overlay{position:fixed;top:0;width:0;height:0;transition:width 0s .25s,height 0s .25s,opacity .25s;background-color:rgba(0,0,0,.54);opacity:0;z-index:3}.md-flex{display:table}.md-flex__cell{display:table-cell;position:relative;vertical-align:top}.md-flex__cell--shrink{width:0}.md-flex__cell--stretch{display:table;width:100%;table-layout:fixed}.md-flex__ellipsis{display:table-cell;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.md-skip{position:fixed;width:.05rem;height:.05rem;margin:.5rem;padding:.3rem .5rem;-webkit-transform:translateY(.4rem);transform:translateY(.4rem);border-radius:.1rem;background-color:rgba(0,0,0,.87);color:#fff;font-size:.64rem;opacity:0;overflow:hidden}.md-skip:focus{width:auto;height:auto;clip:auto;-webkit-transform:translateX(0);transform:translateX(0);transition:opacity .175s 75ms,-webkit-transform .25s cubic-bezier(.4,0,.2,1);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity .175s 75ms;transition:transform .25s cubic-bezier(.4,0,.2,1),opacity .175s 75ms,-webkit-transform .25s cubic-bezier(.4,0,.2,1);opacity:1;z-index:10}@page{margin:25mm}.md-clipboard{position:absolute;top:.3rem;right:.3rem;width:1.4rem;height:1.4rem;border-radius:.1rem;font-size:.8rem;cursor:pointer;z-index:1;-webkit-backface-visibility:hidden;backface-visibility:hidden}.md-clipboard:before{transition:color .25s,opacity .25s;color:rgba(0,0,0,.07);content:"\E14D"}.codehilite:hover .md-clipboard:before,.md-typeset .highlight:hover .md-clipboard:before,pre:hover .md-clipboard:before{color:rgba(0,0,0,.54)}.md-clipboard:focus:before,.md-clipboard:hover:before{color:#82b1ff}.md-clipboard__message{display:block;position:absolute;top:0;right:1.7rem;padding:.3rem .5rem;-webkit-transform:translateX(.4rem);transform:translateX(.4rem);transition:opacity .175s,-webkit-transform .25s cubic-bezier(.9,.1,.9,0);transition:transform .25s cubic-bezier(.9,.1,.9,0),opacity .175s;transition:transform .25s cubic-bezier(.9,.1,.9,0),opacity .175s,-webkit-transform .25s cubic-bezier(.9,.1,.9,0);border-radius:.1rem;background-color:rgba(0,0,0,.54);color:#fff;font-size:.64rem;white-space:nowrap;opacity:0;pointer-events:none}.md-clipboard__message--active{-webkit-transform:translateX(0);transform:translateX(0);transition:opacity .175s 75ms,-webkit-transform .25s cubic-bezier(.4,0,.2,1);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity .175s 75ms;transition:transform .25s cubic-bezier(.4,0,.2,1),opacity .175s 75ms,-webkit-transform .25s cubic-bezier(.4,0,.2,1);opacity:1;pointer-events:auto}.md-clipboard__message:before{content:attr(aria-label)}.md-clipboard__message:after{display:block;position:absolute;top:50%;right:-.2rem;width:0;margin-top:-.2rem;border-color:transparent rgba(0,0,0,.54);border-style:solid;border-width:.2rem 0 .2rem .2rem;content:""}.md-content__inner{margin:0 .8rem 1.2rem;padding-top:.6rem}.md-content__inner:before{display:block;height:.4rem;content:""}.md-content__inner>:last-child{margin-bottom:0}.md-content__icon{position:relative;margin:.4rem 0;padding:0;float:right}.md-typeset .md-content__icon{color:rgba(0,0,0,.26)}.md-header{position:fixed;top:0;right:0;left:0;height:2.4rem;transition:background-color .25s,color .25s;background-color:#0d47a1;color:#fff;box-shadow:none;z-index:2;-webkit-backface-visibility:hidden;backface-visibility:hidden}.no-js .md-header{transition:none;box-shadow:none}.md-header[data-md-state=shadow]{transition:background-color .25s,color .25s,box-shadow .25s;box-shadow:0 0 .2rem rgba(0,0,0,.1),0 .2rem .4rem rgba(0,0,0,.2)}.md-header-nav{padding:0 .2rem}.md-header-nav__button{position:relative;transition:opacity .25s;z-index:1}.md-header-nav__button:hover{opacity:.7}.md-header-nav__button.md-logo *{display:block}.no-js .md-header-nav__button.md-icon--search{display:none}.md-header-nav__topic{display:block;position:absolute;transition:opacity .15s,-webkit-transform .4s cubic-bezier(.1,.7,.1,1);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s,-webkit-transform .4s cubic-bezier(.1,.7,.1,1);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.md-header-nav__topic+.md-header-nav__topic{-webkit-transform:translateX(1.25rem);transform:translateX(1.25rem);transition:opacity .15s,-webkit-transform .4s cubic-bezier(1,.7,.1,.1);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s,-webkit-transform .4s cubic-bezier(1,.7,.1,.1);opacity:0;z-index:-1;pointer-events:none}[dir=rtl] .md-header-nav__topic+.md-header-nav__topic{-webkit-transform:translateX(-1.25rem);transform:translateX(-1.25rem)}.no-js .md-header-nav__topic{position:static}.no-js .md-header-nav__topic+.md-header-nav__topic{display:none}.md-header-nav__title{padding:0 1rem;font-size:.9rem;line-height:2.4rem}.md-header-nav__title[data-md-state=active] .md-header-nav__topic{-webkit-transform:translateX(-1.25rem);transform:translateX(-1.25rem);transition:opacity .15s,-webkit-transform .4s cubic-bezier(1,.7,.1,.1);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s,-webkit-transform .4s cubic-bezier(1,.7,.1,.1);opacity:0;z-index:-1;pointer-events:none}[dir=rtl] .md-header-nav__title[data-md-state=active] .md-header-nav__topic{-webkit-transform:translateX(1.25rem);transform:translateX(1.25rem)}.md-header-nav__title[data-md-state=active] .md-header-nav__topic+.md-header-nav__topic{-webkit-transform:translateX(0);transform:translateX(0);transition:opacity .15s,-webkit-transform .4s cubic-bezier(.1,.7,.1,1);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s,-webkit-transform .4s cubic-bezier(.1,.7,.1,1);opacity:1;z-index:0;pointer-events:auto}.md-header-nav__source{display:none}.md-hero{transition:background .25s;background-color:#0d47a1;color:#fff;font-size:1rem;overflow:hidden}.md-hero__inner{margin-top:1rem;padding:.8rem .8rem .4rem;transition:opacity .25s,-webkit-transform .4s cubic-bezier(.1,.7,.1,1);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .25s;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .25s,-webkit-transform .4s cubic-bezier(.1,.7,.1,1);transition-delay:.1s}[data-md-state=hidden] .md-hero__inner{pointer-events:none;-webkit-transform:translateY(.625rem);transform:translateY(.625rem);transition:opacity .1s 0s,-webkit-transform 0s .4s;transition:transform 0s .4s,opacity .1s 0s;transition:transform 0s .4s,opacity .1s 0s,-webkit-transform 0s .4s;opacity:0}.md-hero--expand .md-hero__inner{margin-bottom:1.2rem}.md-footer-nav{background-color:rgba(0,0,0,.87);color:#fff}.md-footer-nav__inner{padding:.2rem;overflow:auto}.md-footer-nav__link{padding-top:1.4rem;padding-bottom:.4rem;transition:opacity .25s}.md-footer-nav__link:hover{opacity:.7}.md-footer-nav__link--prev{width:25%;float:left}[dir=rtl] .md-footer-nav__link--prev{float:right}.md-footer-nav__link--next{width:75%;float:right;text-align:right}[dir=rtl] .md-footer-nav__link--next{float:left;text-align:left}.md-footer-nav__button{transition:background .25s}.md-footer-nav__title{position:relative;padding:0 1rem;font-size:.9rem;line-height:2.4rem}.md-footer-nav__direction{position:absolute;right:0;left:0;margin-top:-1rem;padding:0 1rem;color:hsla(0,0%,100%,.7);font-size:.75rem}.md-footer-meta{background-color:rgba(0,0,0,.895)}.md-footer-meta__inner{padding:.2rem;overflow:auto}html .md-footer-meta.md-typeset a{color:hsla(0,0%,100%,.7)}html .md-footer-meta.md-typeset a:focus,html .md-footer-meta.md-typeset a:hover{color:#fff}.md-footer-copyright{margin:0 .6rem;padding:.4rem 0;color:hsla(0,0%,100%,.3);font-size:.64rem}.md-footer-copyright__highlight{color:hsla(0,0%,100%,.7)}.md-footer-social{margin:0 .4rem;padding:.2rem 0 .6rem}.md-footer-social__link{display:inline-block;width:1.6rem;height:1.6rem;font-size:.8rem;text-align:center}.md-footer-social__link:before{line-height:1.9}.md-nav{font-size:.7rem;line-height:1.3}.md-nav__title{display:block;padding:0 .6rem;font-weight:700;text-overflow:ellipsis;overflow:hidden}.md-nav__title:before{display:none;content:"\E5C4"}[dir=rtl] .md-nav__title:before{content:"\E5C8"}.md-nav__title .md-nav__button{display:none}.md-nav__list{margin:0;padding:0;list-style:none}.md-nav__item{padding:0 .6rem}.md-nav__item:last-child{padding-bottom:.6rem}.md-nav__item .md-nav__item{padding-right:0}[dir=rtl] .md-nav__item .md-nav__item{padding-right:.6rem;padding-left:0}.md-nav__item .md-nav__item:last-child{padding-bottom:0}.md-nav__button img{width:100%;height:auto}.md-nav__link{display:block;margin-top:.625em;transition:color .125s;text-overflow:ellipsis;cursor:pointer;overflow:hidden}.md-nav__item--nested>.md-nav__link:after{content:"\E313"}html .md-nav__link[for=__toc],html .md-nav__link[for=__toc]+.md-nav__link:after,html .md-nav__link[for=__toc]~.md-nav{display:none}.md-nav__link[data-md-state=blur]{color:rgba(0,0,0,.54)}.md-nav__link--active,.md-nav__link:active{color:#0d47a1}.md-nav__item--nested>.md-nav__link{color:inherit}.md-nav__link:focus,.md-nav__link:hover{color:#82b1ff}.md-nav__source,.no-js .md-search{display:none}.md-search__overlay{opacity:0;z-index:1}.md-search__form{position:relative}.md-search__input{position:relative;padding:0 2.2rem 0 3.6rem;text-overflow:ellipsis;z-index:2}[dir=rtl] .md-search__input{padding:0 3.6rem 0 2.2rem}.md-search__input::-webkit-input-placeholder{transition:color .25s cubic-bezier(.1,.7,.1,1)}.md-search__input::-moz-placeholder{transition:color .25s cubic-bezier(.1,.7,.1,1)}.md-search__input:-ms-input-placeholder{transition:color .25s cubic-bezier(.1,.7,.1,1)}.md-search__input::-ms-input-placeholder{transition:color .25s cubic-bezier(.1,.7,.1,1)}.md-search__input::placeholder{transition:color .25s cubic-bezier(.1,.7,.1,1)}.md-search__input::-webkit-input-placeholder,.md-search__input~.md-search__icon{color:rgba(0,0,0,.54)}.md-search__input::-moz-placeholder,.md-search__input~.md-search__icon{color:rgba(0,0,0,.54)}.md-search__input:-ms-input-placeholder,.md-search__input~.md-search__icon{color:rgba(0,0,0,.54)}.md-search__input::-ms-input-placeholder,.md-search__input~.md-search__icon{color:rgba(0,0,0,.54)}.md-search__input::placeholder,.md-search__input~.md-search__icon{color:rgba(0,0,0,.54)}.md-search__input::-ms-clear{display:none}.md-search__icon{position:absolute;transition:color .25s cubic-bezier(.1,.7,.1,1),opacity .25s;font-size:1.2rem;cursor:pointer;z-index:2}.md-search__icon:hover{opacity:.7}.md-search__icon[for=__search]{top:.3rem;left:.5rem}[dir=rtl] .md-search__icon[for=__search]{right:.5rem;left:auto}.md-search__icon[for=__search]:before{content:"\E8B6"}.md-search__icon[type=reset]{top:.3rem;right:.5rem;-webkit-transform:scale(.125);transform:scale(.125);transition:opacity .15s,-webkit-transform .15s cubic-bezier(.1,.7,.1,1);transition:transform .15s cubic-bezier(.1,.7,.1,1),opacity .15s;transition:transform .15s cubic-bezier(.1,.7,.1,1),opacity .15s,-webkit-transform .15s cubic-bezier(.1,.7,.1,1);opacity:0}[dir=rtl] .md-search__icon[type=reset]{right:auto;left:.5rem}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__icon[type=reset]{-webkit-transform:scale(1);transform:scale(1);opacity:1}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__icon[type=reset]:hover{opacity:.7}.md-search__output{position:absolute;width:100%;border-radius:0 0 .1rem .1rem;overflow:hidden;z-index:1}.md-search__scrollwrap{height:100%;background-color:#fff;box-shadow:inset 0 .05rem 0 rgba(0,0,0,.07);overflow-y:auto;-webkit-overflow-scrolling:touch}.md-search-result{color:rgba(0,0,0,.87);word-break:break-word}.md-search-result__meta{padding:0 .8rem;background-color:rgba(0,0,0,.07);color:rgba(0,0,0,.54);font-size:.64rem;line-height:1.8rem}.md-search-result__list{margin:0;padding:0;border-top:.05rem solid rgba(0,0,0,.07);list-style:none}.md-search-result__item{box-shadow:0 -.05rem 0 rgba(0,0,0,.07)}.md-search-result__link{display:block;transition:background .25s;outline:0;overflow:hidden}.md-search-result__link:hover,.md-search-result__link[data-md-state=active]{background-color:rgba(130,177,255,.1)}.md-search-result__link:hover .md-search-result__article:before,.md-search-result__link[data-md-state=active] .md-search-result__article:before{opacity:.7}.md-search-result__link:last-child .md-search-result__teaser{margin-bottom:.6rem}.md-search-result__article{position:relative;padding:0 .8rem;overflow:auto}.md-search-result__article--document:before{position:absolute;left:0;margin:.1rem;transition:opacity .25s;color:rgba(0,0,0,.54);content:"\E880"}[dir=rtl] .md-search-result__article--document:before{right:0;left:auto}.md-search-result__article--document .md-search-result__title{margin:.55rem 0;font-size:.8rem;font-weight:400;line-height:1.4}.md-search-result__title{margin:.5em 0;font-size:.64rem;font-weight:700;line-height:1.4}.md-search-result__teaser{display:-webkit-box;max-height:1.65rem;margin:.5em 0;color:rgba(0,0,0,.54);font-size:.64rem;line-height:1.4;text-overflow:ellipsis;overflow:hidden;-webkit-line-clamp:2}.md-search-result em{font-style:normal;font-weight:700;text-decoration:underline}.md-sidebar{position:absolute;width:12.1rem;padding:1.2rem 0;overflow:hidden}.md-sidebar[data-md-state=lock]{position:fixed;top:2.4rem}.md-sidebar--secondary{display:none}.md-sidebar__scrollwrap{max-height:100%;margin:0 .2rem;overflow-y:auto;-webkit-backface-visibility:hidden;backface-visibility:hidden}.md-sidebar__scrollwrap::-webkit-scrollbar{width:.2rem;height:.2rem}.md-sidebar__scrollwrap::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.26)}.md-sidebar__scrollwrap::-webkit-scrollbar-thumb:hover{background-color:#82b1ff}@-webkit-keyframes md-source__facts--done{0%{height:0}to{height:.65rem}}@keyframes md-source__facts--done{0%{height:0}to{height:.65rem}}@-webkit-keyframes md-source__fact--done{0%{-webkit-transform:translateY(100%);transform:translateY(100%);opacity:0}50%{opacity:0}to{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}}@keyframes md-source__fact--done{0%{-webkit-transform:translateY(100%);transform:translateY(100%);opacity:0}50%{opacity:0}to{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}}.md-source{display:block;padding-right:.6rem;transition:opacity .25s;font-size:.65rem;line-height:1.2;white-space:nowrap}[dir=rtl] .md-source{padding-right:0;padding-left:.6rem}.md-source:hover{opacity:.7}.md-source:after,.md-source__icon{display:inline-block;height:2.4rem;content:"";vertical-align:middle}.md-source__icon{width:2.4rem}.md-source__icon svg{width:1.2rem;height:1.2rem;margin-top:.6rem;margin-left:.6rem}[dir=rtl] .md-source__icon svg{margin-right:.6rem;margin-left:0}.md-source__icon+.md-source__repository{margin-left:-2rem;padding-left:2rem}[dir=rtl] .md-source__icon+.md-source__repository{margin-right:-2rem;margin-left:0;padding-right:2rem;padding-left:0}.md-source__repository{display:inline-block;max-width:100%;margin-left:.6rem;font-weight:700;text-overflow:ellipsis;overflow:hidden;vertical-align:middle}.md-source__facts{margin:0;padding:0;font-size:.55rem;font-weight:700;list-style-type:none;opacity:.75;overflow:hidden}[data-md-state=done] .md-source__facts{-webkit-animation:md-source__facts--done .25s ease-in;animation:md-source__facts--done .25s ease-in}.md-source__fact{float:left}[dir=rtl] .md-source__fact{float:right}[data-md-state=done] .md-source__fact{-webkit-animation:md-source__fact--done .4s ease-out;animation:md-source__fact--done .4s ease-out}.md-source__fact:before{margin:0 .1rem;content:"\00B7"}.md-source__fact:first-child:before{display:none}.md-source-file{display:inline-block;margin:1em .5em 1em 0;padding-right:.25rem;border-radius:.1rem;background-color:rgba(0,0,0,.07);font-size:.64rem;list-style-type:none;cursor:pointer;overflow:hidden}.md-source-file:before{display:inline-block;margin-right:.25rem;padding:.25rem;background-color:rgba(0,0,0,.26);color:#fff;font-size:.8rem;content:"\E86F";vertical-align:middle}html .md-source-file{transition:background .4s,color .4s,box-shadow .4s cubic-bezier(.4,0,.2,1)}html .md-source-file:before{transition:inherit}html body .md-typeset .md-source-file{color:rgba(0,0,0,.54)}.md-source-file:hover{box-shadow:0 0 8px rgba(0,0,0,.18),0 8px 16px rgba(0,0,0,.36)}.md-source-file:hover:before{background-color:#82b1ff}.md-tabs{width:100%;transition:background .25s;background-color:#0d47a1;color:#fff;overflow:auto}.md-tabs__list{margin:0 0 0 .2rem;padding:0;list-style:none;white-space:nowrap}.md-tabs__item{display:inline-block;height:2.4rem;padding-right:.6rem;padding-left:.6rem}.md-tabs__link{display:block;margin-top:.8rem;transition:opacity .25s,-webkit-transform .4s cubic-bezier(.1,.7,.1,1);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .25s;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .25s,-webkit-transform .4s cubic-bezier(.1,.7,.1,1);font-size:.7rem;opacity:.7}.md-tabs__link--active,.md-tabs__link:hover{color:inherit;opacity:1}.md-tabs__item:nth-child(2) .md-tabs__link{transition-delay:.02s}.md-tabs__item:nth-child(3) .md-tabs__link{transition-delay:.04s}.md-tabs__item:nth-child(4) .md-tabs__link{transition-delay:.06s}.md-tabs__item:nth-child(5) .md-tabs__link{transition-delay:.08s}.md-tabs__item:nth-child(6) .md-tabs__link{transition-delay:.1s}.md-tabs__item:nth-child(7) .md-tabs__link{transition-delay:.12s}.md-tabs__item:nth-child(8) .md-tabs__link{transition-delay:.14s}.md-tabs__item:nth-child(9) .md-tabs__link{transition-delay:.16s}.md-tabs__item:nth-child(10) .md-tabs__link{transition-delay:.18s}.md-tabs__item:nth-child(11) .md-tabs__link{transition-delay:.2s}.md-tabs__item:nth-child(12) .md-tabs__link{transition-delay:.22s}.md-tabs__item:nth-child(13) .md-tabs__link{transition-delay:.24s}.md-tabs__item:nth-child(14) .md-tabs__link{transition-delay:.26s}.md-tabs__item:nth-child(15) .md-tabs__link{transition-delay:.28s}.md-tabs__item:nth-child(16) .md-tabs__link{transition-delay:.3s}.md-tabs[data-md-state=hidden]{pointer-events:none}.md-tabs[data-md-state=hidden] .md-tabs__link{-webkit-transform:translateY(50%);transform:translateY(50%);transition:color .25s,opacity .1s,-webkit-transform 0s .4s;transition:color .25s,transform 0s .4s,opacity .1s;transition:color .25s,transform 0s .4s,opacity .1s,-webkit-transform 0s .4s;opacity:0}.md-typeset .admonition,.md-typeset details{box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12),0 3px 1px -2px rgba(0,0,0,.2);position:relative;margin:1.5625em 0;padding:0 .6rem;border-left:.2rem solid #448aff;border-radius:.1rem;font-size:.64rem;overflow:auto}[dir=rtl] .md-typeset .admonition,[dir=rtl] .md-typeset details{border-right:.2rem solid #448aff;border-left:none}html .md-typeset .admonition>:last-child,html .md-typeset details>:last-child{margin-bottom:.6rem}.md-typeset .admonition .admonition,.md-typeset .admonition details,.md-typeset details .admonition,.md-typeset details details{margin:1em 0}.md-typeset .admonition>.admonition-title,.md-typeset .admonition>summary,.md-typeset details>.admonition-title,.md-typeset details>summary{margin:0 -.6rem;padding:.4rem .6rem .4rem 2rem;border-bottom:.05rem solid rgba(68,138,255,.1);background-color:rgba(68,138,255,.1);font-weight:700}[dir=rtl] .md-typeset .admonition>.admonition-title,[dir=rtl] .md-typeset .admonition>summary,[dir=rtl] .md-typeset details>.admonition-title,[dir=rtl] .md-typeset details>summary{padding:.4rem 2rem .4rem .6rem}.md-typeset .admonition>.admonition-title:last-child,.md-typeset .admonition>summary:last-child,.md-typeset details>.admonition-title:last-child,.md-typeset details>summary:last-child{margin-bottom:0}.md-typeset .admonition>.admonition-title:before,.md-typeset .admonition>summary:before,.md-typeset details>.admonition-title:before,.md-typeset details>summary:before{position:absolute;left:.6rem;color:#448aff;font-size:1rem;content:"\E3C9"}[dir=rtl] .md-typeset .admonition>.admonition-title:before,[dir=rtl] .md-typeset .admonition>summary:before,[dir=rtl] .md-typeset details>.admonition-title:before,[dir=rtl] .md-typeset details>summary:before{right:.6rem;left:auto}.md-typeset .admonition.abstract,.md-typeset .admonition.summary,.md-typeset .admonition.tldr,.md-typeset details.abstract,.md-typeset details.summary,.md-typeset details.tldr{border-left-color:#00b0ff}[dir=rtl] .md-typeset .admonition.abstract,[dir=rtl] .md-typeset .admonition.summary,[dir=rtl] .md-typeset .admonition.tldr,[dir=rtl] .md-typeset details.abstract,[dir=rtl] .md-typeset details.summary,[dir=rtl] .md-typeset details.tldr{border-right-color:#00b0ff}.md-typeset .admonition.abstract>.admonition-title,.md-typeset .admonition.abstract>summary,.md-typeset .admonition.summary>.admonition-title,.md-typeset .admonition.summary>summary,.md-typeset .admonition.tldr>.admonition-title,.md-typeset .admonition.tldr>summary,.md-typeset details.abstract>.admonition-title,.md-typeset details.abstract>summary,.md-typeset details.summary>.admonition-title,.md-typeset details.summary>summary,.md-typeset details.tldr>.admonition-title,.md-typeset details.tldr>summary{border-bottom-color:rgba(0,176,255,.1);background-color:rgba(0,176,255,.1)}.md-typeset .admonition.abstract>.admonition-title:before,.md-typeset .admonition.abstract>summary:before,.md-typeset .admonition.summary>.admonition-title:before,.md-typeset .admonition.summary>summary:before,.md-typeset .admonition.tldr>.admonition-title:before,.md-typeset .admonition.tldr>summary:before,.md-typeset details.abstract>.admonition-title:before,.md-typeset details.abstract>summary:before,.md-typeset details.summary>.admonition-title:before,.md-typeset details.summary>summary:before,.md-typeset details.tldr>.admonition-title:before,.md-typeset details.tldr>summary:before{color:#00b0ff;content:""}.md-typeset .admonition.info,.md-typeset .admonition.todo,.md-typeset details.info,.md-typeset details.todo{border-left-color:#00b8d4}[dir=rtl] .md-typeset .admonition.info,[dir=rtl] .md-typeset .admonition.todo,[dir=rtl] .md-typeset details.info,[dir=rtl] .md-typeset details.todo{border-right-color:#00b8d4}.md-typeset .admonition.info>.admonition-title,.md-typeset .admonition.info>summary,.md-typeset .admonition.todo>.admonition-title,.md-typeset .admonition.todo>summary,.md-typeset details.info>.admonition-title,.md-typeset details.info>summary,.md-typeset details.todo>.admonition-title,.md-typeset details.todo>summary{border-bottom-color:rgba(0,184,212,.1);background-color:rgba(0,184,212,.1)}.md-typeset .admonition.info>.admonition-title:before,.md-typeset .admonition.info>summary:before,.md-typeset .admonition.todo>.admonition-title:before,.md-typeset .admonition.todo>summary:before,.md-typeset details.info>.admonition-title:before,.md-typeset details.info>summary:before,.md-typeset details.todo>.admonition-title:before,.md-typeset details.todo>summary:before{color:#00b8d4;content:""}.md-typeset .admonition.hint,.md-typeset .admonition.important,.md-typeset .admonition.tip,.md-typeset details.hint,.md-typeset details.important,.md-typeset details.tip{border-left-color:#00bfa5}[dir=rtl] .md-typeset .admonition.hint,[dir=rtl] .md-typeset .admonition.important,[dir=rtl] .md-typeset .admonition.tip,[dir=rtl] .md-typeset details.hint,[dir=rtl] .md-typeset details.important,[dir=rtl] .md-typeset details.tip{border-right-color:#00bfa5}.md-typeset .admonition.hint>.admonition-title,.md-typeset .admonition.hint>summary,.md-typeset .admonition.important>.admonition-title,.md-typeset .admonition.important>summary,.md-typeset .admonition.tip>.admonition-title,.md-typeset .admonition.tip>summary,.md-typeset details.hint>.admonition-title,.md-typeset details.hint>summary,.md-typeset details.important>.admonition-title,.md-typeset details.important>summary,.md-typeset details.tip>.admonition-title,.md-typeset details.tip>summary{border-bottom-color:rgba(0,191,165,.1);background-color:rgba(0,191,165,.1)}.md-typeset .admonition.hint>.admonition-title:before,.md-typeset .admonition.hint>summary:before,.md-typeset .admonition.important>.admonition-title:before,.md-typeset .admonition.important>summary:before,.md-typeset .admonition.tip>.admonition-title:before,.md-typeset .admonition.tip>summary:before,.md-typeset details.hint>.admonition-title:before,.md-typeset details.hint>summary:before,.md-typeset details.important>.admonition-title:before,.md-typeset details.important>summary:before,.md-typeset details.tip>.admonition-title:before,.md-typeset details.tip>summary:before{color:#00bfa5;content:""}.md-typeset .admonition.check,.md-typeset .admonition.done,.md-typeset .admonition.success,.md-typeset details.check,.md-typeset details.done,.md-typeset details.success{border-left-color:#00c853}[dir=rtl] .md-typeset .admonition.check,[dir=rtl] .md-typeset .admonition.done,[dir=rtl] .md-typeset .admonition.success,[dir=rtl] .md-typeset details.check,[dir=rtl] .md-typeset details.done,[dir=rtl] .md-typeset details.success{border-right-color:#00c853}.md-typeset .admonition.check>.admonition-title,.md-typeset .admonition.check>summary,.md-typeset .admonition.done>.admonition-title,.md-typeset .admonition.done>summary,.md-typeset .admonition.success>.admonition-title,.md-typeset .admonition.success>summary,.md-typeset details.check>.admonition-title,.md-typeset details.check>summary,.md-typeset details.done>.admonition-title,.md-typeset details.done>summary,.md-typeset details.success>.admonition-title,.md-typeset details.success>summary{border-bottom-color:rgba(0,200,83,.1);background-color:rgba(0,200,83,.1)}.md-typeset .admonition.check>.admonition-title:before,.md-typeset .admonition.check>summary:before,.md-typeset .admonition.done>.admonition-title:before,.md-typeset .admonition.done>summary:before,.md-typeset .admonition.success>.admonition-title:before,.md-typeset .admonition.success>summary:before,.md-typeset details.check>.admonition-title:before,.md-typeset details.check>summary:before,.md-typeset details.done>.admonition-title:before,.md-typeset details.done>summary:before,.md-typeset details.success>.admonition-title:before,.md-typeset details.success>summary:before{color:#00c853;content:""}.md-typeset .admonition.faq,.md-typeset .admonition.help,.md-typeset .admonition.question,.md-typeset details.faq,.md-typeset details.help,.md-typeset details.question{border-left-color:#64dd17}[dir=rtl] .md-typeset .admonition.faq,[dir=rtl] .md-typeset .admonition.help,[dir=rtl] .md-typeset .admonition.question,[dir=rtl] .md-typeset details.faq,[dir=rtl] .md-typeset details.help,[dir=rtl] .md-typeset details.question{border-right-color:#64dd17}.md-typeset .admonition.faq>.admonition-title,.md-typeset .admonition.faq>summary,.md-typeset .admonition.help>.admonition-title,.md-typeset .admonition.help>summary,.md-typeset .admonition.question>.admonition-title,.md-typeset .admonition.question>summary,.md-typeset details.faq>.admonition-title,.md-typeset details.faq>summary,.md-typeset details.help>.admonition-title,.md-typeset details.help>summary,.md-typeset details.question>.admonition-title,.md-typeset details.question>summary{border-bottom-color:rgba(100,221,23,.1);background-color:rgba(100,221,23,.1)}.md-typeset .admonition.faq>.admonition-title:before,.md-typeset .admonition.faq>summary:before,.md-typeset .admonition.help>.admonition-title:before,.md-typeset .admonition.help>summary:before,.md-typeset .admonition.question>.admonition-title:before,.md-typeset .admonition.question>summary:before,.md-typeset details.faq>.admonition-title:before,.md-typeset details.faq>summary:before,.md-typeset details.help>.admonition-title:before,.md-typeset details.help>summary:before,.md-typeset details.question>.admonition-title:before,.md-typeset details.question>summary:before{color:#64dd17;content:""}.md-typeset .admonition.attention,.md-typeset .admonition.caution,.md-typeset .admonition.warning,.md-typeset details.attention,.md-typeset details.caution,.md-typeset details.warning{border-left-color:#ff9100}[dir=rtl] .md-typeset .admonition.attention,[dir=rtl] .md-typeset .admonition.caution,[dir=rtl] .md-typeset .admonition.warning,[dir=rtl] .md-typeset details.attention,[dir=rtl] .md-typeset details.caution,[dir=rtl] .md-typeset details.warning{border-right-color:#ff9100}.md-typeset .admonition.attention>.admonition-title,.md-typeset .admonition.attention>summary,.md-typeset .admonition.caution>.admonition-title,.md-typeset .admonition.caution>summary,.md-typeset .admonition.warning>.admonition-title,.md-typeset .admonition.warning>summary,.md-typeset details.attention>.admonition-title,.md-typeset details.attention>summary,.md-typeset details.caution>.admonition-title,.md-typeset details.caution>summary,.md-typeset details.warning>.admonition-title,.md-typeset details.warning>summary{border-bottom-color:rgba(255,145,0,.1);background-color:rgba(255,145,0,.1)}.md-typeset .admonition.attention>.admonition-title:before,.md-typeset .admonition.attention>summary:before,.md-typeset .admonition.caution>.admonition-title:before,.md-typeset .admonition.caution>summary:before,.md-typeset .admonition.warning>.admonition-title:before,.md-typeset .admonition.warning>summary:before,.md-typeset details.attention>.admonition-title:before,.md-typeset details.attention>summary:before,.md-typeset details.caution>.admonition-title:before,.md-typeset details.caution>summary:before,.md-typeset details.warning>.admonition-title:before,.md-typeset details.warning>summary:before{color:#ff9100;content:""}.md-typeset .admonition.fail,.md-typeset .admonition.failure,.md-typeset .admonition.missing,.md-typeset details.fail,.md-typeset details.failure,.md-typeset details.missing{border-left-color:#ff5252}[dir=rtl] .md-typeset .admonition.fail,[dir=rtl] .md-typeset .admonition.failure,[dir=rtl] .md-typeset .admonition.missing,[dir=rtl] .md-typeset details.fail,[dir=rtl] .md-typeset details.failure,[dir=rtl] .md-typeset details.missing{border-right-color:#ff5252}.md-typeset .admonition.fail>.admonition-title,.md-typeset .admonition.fail>summary,.md-typeset .admonition.failure>.admonition-title,.md-typeset .admonition.failure>summary,.md-typeset .admonition.missing>.admonition-title,.md-typeset .admonition.missing>summary,.md-typeset details.fail>.admonition-title,.md-typeset details.fail>summary,.md-typeset details.failure>.admonition-title,.md-typeset details.failure>summary,.md-typeset details.missing>.admonition-title,.md-typeset details.missing>summary{border-bottom-color:rgba(255,82,82,.1);background-color:rgba(255,82,82,.1)}.md-typeset .admonition.fail>.admonition-title:before,.md-typeset .admonition.fail>summary:before,.md-typeset .admonition.failure>.admonition-title:before,.md-typeset .admonition.failure>summary:before,.md-typeset .admonition.missing>.admonition-title:before,.md-typeset .admonition.missing>summary:before,.md-typeset details.fail>.admonition-title:before,.md-typeset details.fail>summary:before,.md-typeset details.failure>.admonition-title:before,.md-typeset details.failure>summary:before,.md-typeset details.missing>.admonition-title:before,.md-typeset details.missing>summary:before{color:#ff5252;content:""}.md-typeset .admonition.danger,.md-typeset .admonition.error,.md-typeset details.danger,.md-typeset details.error{border-left-color:#ff1744}[dir=rtl] .md-typeset .admonition.danger,[dir=rtl] .md-typeset .admonition.error,[dir=rtl] .md-typeset details.danger,[dir=rtl] .md-typeset details.error{border-right-color:#ff1744}.md-typeset .admonition.danger>.admonition-title,.md-typeset .admonition.danger>summary,.md-typeset .admonition.error>.admonition-title,.md-typeset .admonition.error>summary,.md-typeset details.danger>.admonition-title,.md-typeset details.danger>summary,.md-typeset details.error>.admonition-title,.md-typeset details.error>summary{border-bottom-color:rgba(255,23,68,.1);background-color:rgba(255,23,68,.1)}.md-typeset .admonition.danger>.admonition-title:before,.md-typeset .admonition.danger>summary:before,.md-typeset .admonition.error>.admonition-title:before,.md-typeset .admonition.error>summary:before,.md-typeset details.danger>.admonition-title:before,.md-typeset details.danger>summary:before,.md-typeset details.error>.admonition-title:before,.md-typeset details.error>summary:before{color:#ff1744;content:""}.md-typeset .admonition.bug,.md-typeset details.bug{border-left-color:#f50057}[dir=rtl] .md-typeset .admonition.bug,[dir=rtl] .md-typeset details.bug{border-right-color:#f50057}.md-typeset .admonition.bug>.admonition-title,.md-typeset .admonition.bug>summary,.md-typeset details.bug>.admonition-title,.md-typeset details.bug>summary{border-bottom-color:rgba(245,0,87,.1);background-color:rgba(245,0,87,.1)}.md-typeset .admonition.bug>.admonition-title:before,.md-typeset .admonition.bug>summary:before,.md-typeset details.bug>.admonition-title:before,.md-typeset details.bug>summary:before{color:#f50057;content:""}.md-typeset .admonition.example,.md-typeset details.example{border-left-color:#651fff}[dir=rtl] .md-typeset .admonition.example,[dir=rtl] .md-typeset details.example{border-right-color:#651fff}.md-typeset .admonition.example>.admonition-title,.md-typeset .admonition.example>summary,.md-typeset details.example>.admonition-title,.md-typeset details.example>summary{border-bottom-color:rgba(101,31,255,.1);background-color:rgba(101,31,255,.1)}.md-typeset .admonition.example>.admonition-title:before,.md-typeset .admonition.example>summary:before,.md-typeset details.example>.admonition-title:before,.md-typeset details.example>summary:before{color:#651fff;content:""}.md-typeset .admonition.cite,.md-typeset .admonition.quote,.md-typeset details.cite,.md-typeset details.quote{border-left-color:#9e9e9e}[dir=rtl] .md-typeset .admonition.cite,[dir=rtl] .md-typeset .admonition.quote,[dir=rtl] .md-typeset details.cite,[dir=rtl] .md-typeset details.quote{border-right-color:#9e9e9e}.md-typeset .admonition.cite>.admonition-title,.md-typeset .admonition.cite>summary,.md-typeset .admonition.quote>.admonition-title,.md-typeset .admonition.quote>summary,.md-typeset details.cite>.admonition-title,.md-typeset details.cite>summary,.md-typeset details.quote>.admonition-title,.md-typeset details.quote>summary{border-bottom-color:hsla(0,0%,62%,.1);background-color:hsla(0,0%,62%,.1)}.md-typeset .admonition.cite>.admonition-title:before,.md-typeset .admonition.cite>summary:before,.md-typeset .admonition.quote>.admonition-title:before,.md-typeset .admonition.quote>summary:before,.md-typeset details.cite>.admonition-title:before,.md-typeset details.cite>summary:before,.md-typeset details.quote>.admonition-title:before,.md-typeset details.quote>summary:before{color:#9e9e9e;content:""}.codehilite .o,.codehilite .ow,.md-typeset .highlight .o,.md-typeset .highlight .ow{color:inherit}.codehilite .ge,.md-typeset .highlight .ge{color:#000}.codehilite .gr,.md-typeset .highlight .gr{color:#a00}.codehilite .gh,.md-typeset .highlight .gh{color:#999}.codehilite .go,.md-typeset .highlight .go{color:#888}.codehilite .gp,.md-typeset .highlight .gp{color:#555}.codehilite .gs,.md-typeset .highlight .gs{color:inherit}.codehilite .gu,.md-typeset .highlight .gu{color:#aaa}.codehilite .gt,.md-typeset .highlight .gt{color:#a00}.codehilite .gd,.md-typeset .highlight .gd{background-color:#fdd}.codehilite .gi,.md-typeset .highlight .gi{background-color:#dfd}.codehilite .k,.md-typeset .highlight .k{color:#3b78e7}.codehilite .kc,.md-typeset .highlight .kc{color:#a71d5d}.codehilite .kd,.codehilite .kn,.md-typeset .highlight .kd,.md-typeset .highlight .kn{color:#3b78e7}.codehilite .kp,.md-typeset .highlight .kp{color:#a71d5d}.codehilite .kr,.codehilite .kt,.md-typeset .highlight .kr,.md-typeset .highlight .kt{color:#3e61a2}.codehilite .c,.codehilite .cm,.md-typeset .highlight .c,.md-typeset .highlight .cm{color:#999}.codehilite .cp,.md-typeset .highlight .cp{color:#666}.codehilite .c1,.codehilite .ch,.codehilite .cs,.md-typeset .highlight .c1,.md-typeset .highlight .ch,.md-typeset .highlight .cs{color:#999}.codehilite .na,.codehilite .nb,.md-typeset .highlight .na,.md-typeset .highlight .nb{color:#c2185b}.codehilite .bp,.md-typeset .highlight .bp{color:#3e61a2}.codehilite .nc,.md-typeset .highlight .nc{color:#c2185b}.codehilite .no,.md-typeset .highlight .no{color:#3e61a2}.codehilite .nd,.codehilite .ni,.md-typeset .highlight .nd,.md-typeset .highlight .ni{color:#666}.codehilite .ne,.codehilite .nf,.md-typeset .highlight .ne,.md-typeset .highlight .nf{color:#c2185b}.codehilite .nl,.md-typeset .highlight .nl{color:#3b5179}.codehilite .nn,.md-typeset .highlight .nn{color:#ec407a}.codehilite .nt,.md-typeset .highlight .nt{color:#3b78e7}.codehilite .nv,.codehilite .vc,.codehilite .vg,.codehilite .vi,.md-typeset .highlight .nv,.md-typeset .highlight .vc,.md-typeset .highlight .vg,.md-typeset .highlight .vi{color:#3e61a2}.codehilite .nx,.md-typeset .highlight .nx{color:#ec407a}.codehilite .il,.codehilite .m,.codehilite .mf,.codehilite .mh,.codehilite .mi,.codehilite .mo,.md-typeset .highlight .il,.md-typeset .highlight .m,.md-typeset .highlight .mf,.md-typeset .highlight .mh,.md-typeset .highlight .mi,.md-typeset .highlight .mo{color:#e74c3c}.codehilite .s,.codehilite .sb,.codehilite .sc,.md-typeset .highlight .s,.md-typeset .highlight .sb,.md-typeset .highlight .sc{color:#0d904f}.codehilite .sd,.md-typeset .highlight .sd{color:#999}.codehilite .s2,.md-typeset .highlight .s2{color:#0d904f}.codehilite .se,.codehilite .sh,.codehilite .si,.codehilite .sx,.md-typeset .highlight .se,.md-typeset .highlight .sh,.md-typeset .highlight .si,.md-typeset .highlight .sx{color:#183691}.codehilite .sr,.md-typeset .highlight .sr{color:#009926}.codehilite .s1,.codehilite .ss,.md-typeset .highlight .s1,.md-typeset .highlight .ss{color:#0d904f}.codehilite .err,.md-typeset .highlight .err{color:#a61717}.codehilite .w,.md-typeset .highlight .w{color:transparent}.codehilite .hll,.md-typeset .highlight .hll{display:block;margin:0 -.6rem;padding:0 .6rem;background-color:rgba(255,235,59,.5)}.md-typeset .codehilite,.md-typeset .highlight{position:relative;margin:1em 0;padding:0;border-radius:.1rem;background-color:hsla(0,0%,92.5%,.5);color:#37474f;line-height:1.4;-webkit-overflow-scrolling:touch}.md-typeset .codehilite code,.md-typeset .codehilite pre,.md-typeset .highlight code,.md-typeset .highlight pre{display:block;margin:0;padding:.525rem .6rem;background-color:transparent;overflow:auto;vertical-align:top}.md-typeset .codehilite code::-webkit-scrollbar,.md-typeset .codehilite pre::-webkit-scrollbar,.md-typeset .highlight code::-webkit-scrollbar,.md-typeset .highlight pre::-webkit-scrollbar{width:.2rem;height:.2rem}.md-typeset .codehilite code::-webkit-scrollbar-thumb,.md-typeset .codehilite pre::-webkit-scrollbar-thumb,.md-typeset .highlight code::-webkit-scrollbar-thumb,.md-typeset .highlight pre::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.26)}.md-typeset .codehilite code::-webkit-scrollbar-thumb:hover,.md-typeset .codehilite pre::-webkit-scrollbar-thumb:hover,.md-typeset .highlight code::-webkit-scrollbar-thumb:hover,.md-typeset .highlight pre::-webkit-scrollbar-thumb:hover{background-color:#82b1ff}.md-typeset pre.codehilite,.md-typeset pre.highlight{overflow:visible}.md-typeset pre.codehilite code,.md-typeset pre.highlight code{display:block;padding:.525rem .6rem;overflow:auto}.md-typeset .codehilitetable,.md-typeset .highlighttable{display:block;margin:1em 0;border-radius:.2em;font-size:.8rem;overflow:hidden}.md-typeset .codehilitetable tbody,.md-typeset .codehilitetable td,.md-typeset .highlighttable tbody,.md-typeset .highlighttable td{display:block;padding:0}.md-typeset .codehilitetable tr,.md-typeset .highlighttable tr{display:flex}.md-typeset .codehilitetable .codehilite,.md-typeset .codehilitetable .highlight,.md-typeset .codehilitetable .linenodiv,.md-typeset .highlighttable .codehilite,.md-typeset .highlighttable .highlight,.md-typeset .highlighttable .linenodiv{margin:0;border-radius:0}.md-typeset .codehilitetable .linenodiv,.md-typeset .highlighttable .linenodiv{padding:.525rem .6rem}.md-typeset .codehilitetable .linenos,.md-typeset .highlighttable .linenos{background-color:rgba(0,0,0,.07);color:rgba(0,0,0,.26);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.md-typeset .codehilitetable .linenos pre,.md-typeset .highlighttable .linenos pre{margin:0;padding:0;background-color:transparent;color:inherit;text-align:right}.md-typeset .codehilitetable .code,.md-typeset .highlighttable .code{flex:1;overflow:hidden}.md-typeset>.codehilitetable,.md-typeset>.highlighttable{box-shadow:none}.md-typeset [id^="fnref:"]{display:inline-block}.md-typeset [id^="fnref:"]:target{margin-top:-3.8rem;padding-top:3.8rem;pointer-events:none}.md-typeset [id^="fn:"]:before{display:none;height:0;content:""}.md-typeset [id^="fn:"]:target:before{display:block;margin-top:-3.5rem;padding-top:3.5rem;pointer-events:none}.md-typeset .footnote{color:rgba(0,0,0,.54);font-size:.64rem}.md-typeset .footnote ol{margin-left:0}.md-typeset .footnote li{transition:color .25s}.md-typeset .footnote li:target{color:rgba(0,0,0,.87)}.md-typeset .footnote li :first-child{margin-top:0}.md-typeset .footnote li:hover .footnote-backref,.md-typeset .footnote li:target .footnote-backref{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}.md-typeset .footnote li:hover .footnote-backref:hover,.md-typeset .footnote li:target .footnote-backref{color:#82b1ff}.md-typeset .footnote-ref{display:inline-block;pointer-events:auto}.md-typeset .footnote-ref:before{display:inline;margin:0 .2em;border-left:.05rem solid rgba(0,0,0,.26);font-size:1.25em;content:"";vertical-align:-.25rem}.md-typeset .footnote-backref{display:inline-block;-webkit-transform:translateX(.25rem);transform:translateX(.25rem);transition:color .25s,opacity .125s .125s,-webkit-transform .25s .125s;transition:transform .25s .125s,color .25s,opacity .125s .125s;transition:transform .25s .125s,color .25s,opacity .125s .125s,-webkit-transform .25s .125s;color:rgba(0,0,0,.26);font-size:0;opacity:0;vertical-align:text-bottom}[dir=rtl] .md-typeset .footnote-backref{-webkit-transform:translateX(-.25rem);transform:translateX(-.25rem)}.md-typeset .footnote-backref:before{display:inline-block;font-size:.8rem;content:"\E31B"}[dir=rtl] .md-typeset .footnote-backref:before{-webkit-transform:scaleX(-1);transform:scaleX(-1)}.md-typeset .headerlink{display:inline-block;margin-left:.5rem;-webkit-transform:translateY(.25rem);transform:translateY(.25rem);transition:color .25s,opacity .125s .25s,-webkit-transform .25s .25s;transition:transform .25s .25s,color .25s,opacity .125s .25s;transition:transform .25s .25s,color .25s,opacity .125s .25s,-webkit-transform .25s .25s;opacity:0}[dir=rtl] .md-typeset .headerlink{margin-right:.5rem;margin-left:0}html body .md-typeset .headerlink{color:rgba(0,0,0,.26)}.md-typeset h1[id]:before{display:block;margin-top:-9px;padding-top:9px;content:""}.md-typeset h1[id]:target:before{margin-top:-3.45rem;padding-top:3.45rem}.md-typeset h1[id] .headerlink:focus,.md-typeset h1[id]:hover .headerlink,.md-typeset h1[id]:target .headerlink{-webkit-transform:translate(0);transform:translate(0);opacity:1}.md-typeset h1[id] .headerlink:focus,.md-typeset h1[id]:hover .headerlink:hover,.md-typeset h1[id]:target .headerlink{color:#82b1ff}.md-typeset h2[id]:before{display:block;margin-top:-8px;padding-top:8px;content:""}.md-typeset h2[id]:target:before{margin-top:-3.4rem;padding-top:3.4rem}.md-typeset h2[id] .headerlink:focus,.md-typeset h2[id]:hover .headerlink,.md-typeset h2[id]:target .headerlink{-webkit-transform:translate(0);transform:translate(0);opacity:1}.md-typeset h2[id] .headerlink:focus,.md-typeset h2[id]:hover .headerlink:hover,.md-typeset h2[id]:target .headerlink{color:#82b1ff}.md-typeset h3[id]:before{display:block;margin-top:-9px;padding-top:9px;content:""}.md-typeset h3[id]:target:before{margin-top:-3.45rem;padding-top:3.45rem}.md-typeset h3[id] .headerlink:focus,.md-typeset h3[id]:hover .headerlink,.md-typeset h3[id]:target .headerlink{-webkit-transform:translate(0);transform:translate(0);opacity:1}.md-typeset h3[id] .headerlink:focus,.md-typeset h3[id]:hover .headerlink:hover,.md-typeset h3[id]:target .headerlink{color:#82b1ff}.md-typeset h4[id]:before{display:block;margin-top:-9px;padding-top:9px;content:""}.md-typeset h4[id]:target:before{margin-top:-3.45rem;padding-top:3.45rem}.md-typeset h4[id] .headerlink:focus,.md-typeset h4[id]:hover .headerlink,.md-typeset h4[id]:target .headerlink{-webkit-transform:translate(0);transform:translate(0);opacity:1}.md-typeset h4[id] .headerlink:focus,.md-typeset h4[id]:hover .headerlink:hover,.md-typeset h4[id]:target .headerlink{color:#82b1ff}.md-typeset h5[id]:before{display:block;margin-top:-11px;padding-top:11px;content:""}.md-typeset h5[id]:target:before{margin-top:-3.55rem;padding-top:3.55rem}.md-typeset h5[id] .headerlink:focus,.md-typeset h5[id]:hover .headerlink,.md-typeset h5[id]:target .headerlink{-webkit-transform:translate(0);transform:translate(0);opacity:1}.md-typeset h5[id] .headerlink:focus,.md-typeset h5[id]:hover .headerlink:hover,.md-typeset h5[id]:target .headerlink{color:#82b1ff}.md-typeset h6[id]:before{display:block;margin-top:-11px;padding-top:11px;content:""}.md-typeset h6[id]:target:before{margin-top:-3.55rem;padding-top:3.55rem}.md-typeset h6[id] .headerlink:focus,.md-typeset h6[id]:hover .headerlink,.md-typeset h6[id]:target .headerlink{-webkit-transform:translate(0);transform:translate(0);opacity:1}.md-typeset h6[id] .headerlink:focus,.md-typeset h6[id]:hover .headerlink:hover,.md-typeset h6[id]:target .headerlink{color:#82b1ff}.md-typeset .MJXc-display{margin:.75em 0;padding:.75em 0;overflow:auto;-webkit-overflow-scrolling:touch}.md-typeset .MathJax_CHTML{outline:0}.md-typeset .critic.comment,.md-typeset del.critic,.md-typeset ins.critic{margin:0 .25em;padding:.0625em 0;border-radius:.1rem;-webkit-box-decoration-break:clone;box-decoration-break:clone}.md-typeset del.critic{background-color:#fdd;box-shadow:.25em 0 0 #fdd,-.25em 0 0 #fdd}.md-typeset ins.critic{background-color:#dfd;box-shadow:.25em 0 0 #dfd,-.25em 0 0 #dfd}.md-typeset .critic.comment{background-color:hsla(0,0%,92.5%,.5);color:#37474f;box-shadow:.25em 0 0 hsla(0,0%,92.5%,.5),-.25em 0 0 hsla(0,0%,92.5%,.5)}.md-typeset .critic.comment:before{padding-right:.125em;color:rgba(0,0,0,.26);content:"\E0B7";vertical-align:-.125em}.md-typeset .critic.block{display:block;margin:1em 0;padding-right:.8rem;padding-left:.8rem;box-shadow:none}.md-typeset .critic.block :first-child{margin-top:.5em}.md-typeset .critic.block :last-child{margin-bottom:.5em}.md-typeset details{display:block;padding-top:0}.md-typeset details[open]>summary:after{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.md-typeset details:not([open]){padding-bottom:0}.md-typeset details:not([open])>summary{border-bottom:none}.md-typeset details summary{padding-right:2rem}[dir=rtl] .md-typeset details summary{padding-left:2rem}.no-details .md-typeset details:not([open])>*{display:none}.no-details .md-typeset details:not([open]) summary{display:block}.md-typeset summary{display:block;outline:none;cursor:pointer}.md-typeset summary::-webkit-details-marker{display:none}.md-typeset summary:after{position:absolute;top:.4rem;right:.6rem;color:rgba(0,0,0,.26);font-size:1rem;content:"\E313"}[dir=rtl] .md-typeset summary:after{right:auto;left:.6rem}.md-typeset .emojione{width:1rem;vertical-align:text-top}.md-typeset code.codehilite,.md-typeset code.highlight{margin:0 .29412em;padding:.07353em 0}.md-typeset .superfences-content{display:none;order:99;width:100%;background-color:#fff}.md-typeset .superfences-content>*{margin:0;border-radius:0}.md-typeset .superfences-tabs{display:flex;position:relative;flex-wrap:wrap;margin:1em 0;border:.05rem solid rgba(0,0,0,.07);border-radius:.2em}.md-typeset .superfences-tabs>input{display:none}.md-typeset .superfences-tabs>input:checked+label{font-weight:700}.md-typeset .superfences-tabs>input:checked+label+.superfences-content{display:block}.md-typeset .superfences-tabs>label{width:auto;padding:.6rem;transition:color .125s;font-size:.64rem;cursor:pointer}html .md-typeset .superfences-tabs>label:hover{color:#82b1ff}.md-typeset .task-list-item{position:relative;list-style-type:none}.md-typeset .task-list-item [type=checkbox]{position:absolute;top:.45em;left:-2em}[dir=rtl] .md-typeset .task-list-item [type=checkbox]{right:-2em;left:auto}.md-typeset .task-list-control .task-list-indicator:before{position:absolute;top:.15em;left:-1.25em;color:rgba(0,0,0,.26);font-size:1.25em;content:"\E835";vertical-align:-.25em}[dir=rtl] .md-typeset .task-list-control .task-list-indicator:before{right:-1.25em;left:auto}.md-typeset .task-list-control [type=checkbox]:checked+.task-list-indicator:before{content:"\E834"}.md-typeset .task-list-control [type=checkbox]{opacity:0;z-index:-1}@media print{.md-typeset a:after{color:rgba(0,0,0,.54);content:" [" attr(href) "]"}.md-typeset code,.md-typeset pre{white-space:pre-wrap}.md-typeset code{box-shadow:none;-webkit-box-decoration-break:initial;box-decoration-break:slice}.md-clipboard,.md-content__icon,.md-footer,.md-header,.md-sidebar,.md-tabs,.md-typeset .headerlink{display:none}}@media only screen and (max-width:44.9375em){.md-typeset pre{margin:1em -.8rem;border-radius:0}.md-typeset pre>code{padding:.525rem .8rem}.md-footer-nav__link--prev .md-footer-nav__title{display:none}.md-search-result__teaser{max-height:2.5rem;-webkit-line-clamp:3}.codehilite .hll,.md-typeset .highlight .hll{margin:0 -.8rem;padding:0 .8rem}.md-typeset>.codehilite,.md-typeset>.highlight{margin:1em -.8rem;border-radius:0}.md-typeset>.codehilite code,.md-typeset>.codehilite pre,.md-typeset>.highlight code,.md-typeset>.highlight pre{padding:.525rem .8rem}.md-typeset>.codehilitetable,.md-typeset>.highlighttable{margin:1em -.8rem;border-radius:0}.md-typeset>.codehilitetable .codehilite>code,.md-typeset>.codehilitetable .codehilite>pre,.md-typeset>.codehilitetable .highlight>code,.md-typeset>.codehilitetable .highlight>pre,.md-typeset>.codehilitetable .linenodiv,.md-typeset>.highlighttable .codehilite>code,.md-typeset>.highlighttable .codehilite>pre,.md-typeset>.highlighttable .highlight>code,.md-typeset>.highlighttable .highlight>pre,.md-typeset>.highlighttable .linenodiv{padding:.5rem .8rem}.md-typeset>p>.MJXc-display{margin:.75em -.8rem;padding:.25em .8rem}.md-typeset>.superfences-tabs{margin:1em -.8rem;border:0;border-top:.05rem solid rgba(0,0,0,.07);border-radius:0}.md-typeset>.superfences-tabs code,.md-typeset>.superfences-tabs pre{padding:.525rem .8rem}}@media only screen and (min-width:100em){html{font-size:137.5%}}@media only screen and (min-width:125em){html{font-size:150%}}@media only screen and (max-width:59.9375em){body[data-md-state=lock]{overflow:hidden}.ios body[data-md-state=lock] .md-container{display:none}html .md-nav__link[for=__toc]{display:block;padding-right:2.4rem}html .md-nav__link[for=__toc]:after{color:inherit;content:"\E8DE"}html .md-nav__link[for=__toc]+.md-nav__link{display:none}html .md-nav__link[for=__toc]~.md-nav{display:flex}html [dir=rtl] .md-nav__link{padding-right:.8rem;padding-left:2.4rem}.md-nav__source{display:block;padding:0 .2rem;background-color:rgba(10,57,128,.9675);color:#fff}.md-search__overlay{position:absolute;top:.2rem;left:.2rem;width:1.8rem;height:1.8rem;-webkit-transform-origin:center;transform-origin:center;transition:opacity .2s .2s,-webkit-transform .3s .1s;transition:transform .3s .1s,opacity .2s .2s;transition:transform .3s .1s,opacity .2s .2s,-webkit-transform .3s .1s;border-radius:1rem;background-color:#fff;overflow:hidden;pointer-events:none}[dir=rtl] .md-search__overlay{right:.2rem;left:auto}[data-md-toggle=search]:checked~.md-header .md-search__overlay{transition:opacity .1s,-webkit-transform .4s;transition:transform .4s,opacity .1s;transition:transform .4s,opacity .1s,-webkit-transform .4s;opacity:1}.md-search__inner{position:fixed;top:0;left:100%;width:100%;height:100%;-webkit-transform:translateX(5%);transform:translateX(5%);transition:right 0s .3s,left 0s .3s,opacity .15s .15s,-webkit-transform .15s cubic-bezier(.4,0,.2,1) .15s;transition:right 0s .3s,left 0s .3s,transform .15s cubic-bezier(.4,0,.2,1) .15s,opacity .15s .15s;transition:right 0s .3s,left 0s .3s,transform .15s cubic-bezier(.4,0,.2,1) .15s,opacity .15s .15s,-webkit-transform .15s cubic-bezier(.4,0,.2,1) .15s;opacity:0;z-index:2}[data-md-toggle=search]:checked~.md-header .md-search__inner{left:0;-webkit-transform:translateX(0);transform:translateX(0);transition:right 0s 0s,left 0s 0s,opacity .15s .15s,-webkit-transform .15s cubic-bezier(.1,.7,.1,1) .15s;transition:right 0s 0s,left 0s 0s,transform .15s cubic-bezier(.1,.7,.1,1) .15s,opacity .15s .15s;transition:right 0s 0s,left 0s 0s,transform .15s cubic-bezier(.1,.7,.1,1) .15s,opacity .15s .15s,-webkit-transform .15s cubic-bezier(.1,.7,.1,1) .15s;opacity:1}[dir=rtl] [data-md-toggle=search]:checked~.md-header .md-search__inner{right:0;left:auto}html [dir=rtl] .md-search__inner{right:100%;left:auto;-webkit-transform:translateX(-5%);transform:translateX(-5%)}.md-search__input{width:100%;height:2.4rem;font-size:.9rem}.md-search__icon[for=__search]{top:.6rem;left:.8rem}.md-search__icon[for=__search][for=__search]:before{content:"\E5C4"}[dir=rtl] .md-search__icon[for=__search][for=__search]:before{content:"\E5C8"}.md-search__icon[type=reset]{top:.6rem;right:.8rem}.md-search__output{top:2.4rem;bottom:0}.md-search-result__article--document:before{display:none}}@media only screen and (max-width:76.1875em){[data-md-toggle=drawer]:checked~.md-overlay{width:100%;height:100%;transition:width 0s,height 0s,opacity .25s;opacity:1}.md-header-nav__button.md-icon--home,.md-header-nav__button.md-logo{display:none}.md-hero__inner{margin-top:2.4rem;margin-bottom:1.2rem}.md-nav{background-color:#fff}.md-nav--primary,.md-nav--primary .md-nav{display:flex;position:absolute;top:0;right:0;left:0;flex-direction:column;height:100%;z-index:1}.md-nav--primary .md-nav__item,.md-nav--primary .md-nav__title{font-size:.8rem;line-height:1.5}html .md-nav--primary .md-nav__title{position:relative;height:5.6rem;padding:3rem .8rem .2rem;background-color:rgba(0,0,0,.07);color:rgba(0,0,0,.54);font-weight:400;line-height:2.4rem;white-space:nowrap;cursor:pointer}html .md-nav--primary .md-nav__title:before{display:block;position:absolute;top:.2rem;left:.2rem;width:2rem;height:2rem;color:rgba(0,0,0,.54)}html .md-nav--primary .md-nav__title~.md-nav__list{background-color:#fff;box-shadow:inset 0 .05rem 0 rgba(0,0,0,.07)}html .md-nav--primary .md-nav__title~.md-nav__list>.md-nav__item:first-child{border-top:0}html .md-nav--primary .md-nav__title--site{position:relative;background-color:#0d47a1;color:#fff}html .md-nav--primary .md-nav__title--site .md-nav__button{display:block;position:absolute;top:.2rem;left:.2rem;width:3.2rem;height:3.2rem;font-size:2.4rem}html .md-nav--primary .md-nav__title--site:before{display:none}html [dir=rtl] .md-nav--primary .md-nav__title--site .md-nav__button,html [dir=rtl] .md-nav--primary .md-nav__title:before{right:.2rem;left:auto}.md-nav--primary .md-nav__list{flex:1;overflow-y:auto}.md-nav--primary .md-nav__item{padding:0;border-top:.05rem solid rgba(0,0,0,.07)}[dir=rtl] .md-nav--primary .md-nav__item{padding:0}.md-nav--primary .md-nav__item--nested>.md-nav__link{padding-right:2.4rem}[dir=rtl] .md-nav--primary .md-nav__item--nested>.md-nav__link{padding-right:.8rem;padding-left:2.4rem}.md-nav--primary .md-nav__item--nested>.md-nav__link:after{content:"\E315"}[dir=rtl] .md-nav--primary .md-nav__item--nested>.md-nav__link:after{content:"\E314"}.md-nav--primary .md-nav__link{position:relative;margin-top:0;padding:.6rem .8rem}.md-nav--primary .md-nav__link:after{position:absolute;top:50%;right:.6rem;margin-top:-.6rem;color:inherit;font-size:1.2rem}[dir=rtl] .md-nav--primary .md-nav__link:after{right:auto;left:.6rem}.md-nav--primary .md-nav--secondary .md-nav__link{position:static}.md-nav--primary .md-nav--secondary .md-nav{position:static;background-color:transparent}.md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-left:1.4rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-right:1.4rem;padding-left:0}.md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-left:2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-right:2rem;padding-left:0}.md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-left:2.6rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-right:2.6rem;padding-left:0}.md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-left:3.2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-right:3.2rem;padding-left:0}.md-nav__toggle~.md-nav{display:flex;-webkit-transform:translateX(100%);transform:translateX(100%);transition:opacity .125s .05s,-webkit-transform .25s cubic-bezier(.8,0,.6,1);transition:transform .25s cubic-bezier(.8,0,.6,1),opacity .125s .05s;transition:transform .25s cubic-bezier(.8,0,.6,1),opacity .125s .05s,-webkit-transform .25s cubic-bezier(.8,0,.6,1);opacity:0}[dir=rtl] .md-nav__toggle~.md-nav{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.no-csstransforms3d .md-nav__toggle~.md-nav{display:none}.md-nav__toggle:checked~.md-nav{-webkit-transform:translateX(0);transform:translateX(0);transition:opacity .125s .125s,-webkit-transform .25s cubic-bezier(.4,0,.2,1);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity .125s .125s;transition:transform .25s cubic-bezier(.4,0,.2,1),opacity .125s .125s,-webkit-transform .25s cubic-bezier(.4,0,.2,1);opacity:1}.no-csstransforms3d .md-nav__toggle:checked~.md-nav{display:flex}.md-sidebar--primary{position:fixed;top:0;left:-12.1rem;width:12.1rem;height:100%;-webkit-transform:translateX(0);transform:translateX(0);transition:box-shadow .25s,-webkit-transform .25s cubic-bezier(.4,0,.2,1);transition:transform .25s cubic-bezier(.4,0,.2,1),box-shadow .25s;transition:transform .25s cubic-bezier(.4,0,.2,1),box-shadow .25s,-webkit-transform .25s cubic-bezier(.4,0,.2,1);background-color:#fff;z-index:3}[dir=rtl] .md-sidebar--primary{right:-12.1rem;left:auto}.no-csstransforms3d .md-sidebar--primary{display:none}[data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{box-shadow:0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12),0 5px 5px -3px rgba(0,0,0,.4);-webkit-transform:translateX(12.1rem);transform:translateX(12.1rem)}[dir=rtl] [data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{-webkit-transform:translateX(-12.1rem);transform:translateX(-12.1rem)}.no-csstransforms3d [data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{display:block}.md-sidebar--primary .md-sidebar__scrollwrap{overflow:hidden;position:absolute;top:0;right:0;bottom:0;left:0;margin:0}.md-tabs{display:none}}@media only screen and (min-width:60em){.md-content{margin-right:12.1rem}[dir=rtl] .md-content{margin-right:0;margin-left:12.1rem}.md-header-nav__button.md-icon--search{display:none}.md-header-nav__source{display:block;width:11.7rem;max-width:11.7rem;padding-right:.6rem}[dir=rtl] .md-header-nav__source{padding-right:0;padding-left:.6rem}.md-search{padding:.2rem}.md-search__overlay{position:fixed;top:0;left:0;width:0;height:0;transition:width 0s .25s,height 0s .25s,opacity .25s;background-color:rgba(0,0,0,.54);cursor:pointer}[dir=rtl] .md-search__overlay{right:0;left:auto}[data-md-toggle=search]:checked~.md-header .md-search__overlay{width:100%;height:100%;transition:width 0s,height 0s,opacity .25s;opacity:1}.md-search__inner{position:relative;width:11.5rem;margin-right:.8rem;padding:.1rem 0;float:right;transition:width .25s cubic-bezier(.1,.7,.1,1)}[dir=rtl] .md-search__inner{margin-right:0;margin-left:.8rem;float:left}.md-search__form,.md-search__input{border-radius:.1rem}.md-search__input{width:100%;height:1.8rem;padding-left:2.2rem;transition:background-color .25s cubic-bezier(.1,.7,.1,1),color .25s cubic-bezier(.1,.7,.1,1);background-color:rgba(0,0,0,.26);color:inherit;font-size:.8rem}[dir=rtl] .md-search__input{padding-right:2.2rem}.md-search__input+.md-search__icon{color:inherit}.md-search__input::-webkit-input-placeholder{color:hsla(0,0%,100%,.7)}.md-search__input::-moz-placeholder{color:hsla(0,0%,100%,.7)}.md-search__input:-ms-input-placeholder{color:hsla(0,0%,100%,.7)}.md-search__input::-ms-input-placeholder{color:hsla(0,0%,100%,.7)}.md-search__input::placeholder{color:hsla(0,0%,100%,.7)}.md-search__input:hover{background-color:hsla(0,0%,100%,.12)}[data-md-toggle=search]:checked~.md-header .md-search__input{border-radius:.1rem .1rem 0 0;background-color:#fff;color:rgba(0,0,0,.87);text-overflow:clip}[data-md-toggle=search]:checked~.md-header .md-search__input+.md-search__icon,[data-md-toggle=search]:checked~.md-header .md-search__input::-webkit-input-placeholder{color:rgba(0,0,0,.54)}[data-md-toggle=search]:checked~.md-header .md-search__input+.md-search__icon,[data-md-toggle=search]:checked~.md-header .md-search__input::-moz-placeholder{color:rgba(0,0,0,.54)}[data-md-toggle=search]:checked~.md-header .md-search__input+.md-search__icon,[data-md-toggle=search]:checked~.md-header .md-search__input:-ms-input-placeholder{color:rgba(0,0,0,.54)}[data-md-toggle=search]:checked~.md-header .md-search__input+.md-search__icon,[data-md-toggle=search]:checked~.md-header .md-search__input::-ms-input-placeholder{color:rgba(0,0,0,.54)}[data-md-toggle=search]:checked~.md-header .md-search__input+.md-search__icon,[data-md-toggle=search]:checked~.md-header .md-search__input::placeholder{color:rgba(0,0,0,.54)}.md-search__output{top:1.9rem;transition:opacity .4s;opacity:0}[data-md-toggle=search]:checked~.md-header .md-search__output{box-shadow:0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12),0 3px 5px -1px rgba(0,0,0,.4);opacity:1}.md-search__scrollwrap{max-height:0}[data-md-toggle=search]:checked~.md-header .md-search__scrollwrap{max-height:75vh}.md-search__scrollwrap::-webkit-scrollbar{width:.2rem;height:.2rem}.md-search__scrollwrap::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.26)}.md-search__scrollwrap::-webkit-scrollbar-thumb:hover{background-color:#82b1ff}.md-search-result__meta{padding-left:2.2rem}[dir=rtl] .md-search-result__meta{padding-right:2.2rem;padding-left:0}.md-search-result__article{padding-left:2.2rem}[dir=rtl] .md-search-result__article{padding-right:2.2rem;padding-left:.8rem}.md-sidebar--secondary{display:block;margin-left:100%;-webkit-transform:translate(-100%);transform:translate(-100%)}[dir=rtl] .md-sidebar--secondary{margin-right:100%;margin-left:0;-webkit-transform:translate(100%);transform:translate(100%)}}@media only screen and (min-width:76.25em){.md-content{margin-left:12.1rem}[dir=rtl] .md-content{margin-right:12.1rem}.md-content__inner{margin-right:1.2rem;margin-left:1.2rem}.md-header-nav__button.md-icon--menu{display:none}.md-nav[data-md-state=animate]{transition:max-height .25s cubic-bezier(.86,0,.07,1)}.md-nav__toggle~.md-nav{max-height:0;overflow:hidden}.no-js .md-nav__toggle~.md-nav{display:none}.md-nav[data-md-state=expand],.md-nav__toggle:checked~.md-nav{max-height:100%}.no-js .md-nav[data-md-state=expand],.no-js .md-nav__toggle:checked~.md-nav{display:block}.md-nav__item--nested>.md-nav>.md-nav__title{display:none}.md-nav__item--nested>.md-nav__link:after{display:inline-block;-webkit-transform-origin:.45em .45em;transform-origin:.45em .45em;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;vertical-align:-.125em}.js .md-nav__item--nested>.md-nav__link:after{transition:-webkit-transform .4s;transition:transform .4s;transition:transform .4s,-webkit-transform .4s}.md-nav__item--nested .md-nav__toggle:checked~.md-nav__link:after{-webkit-transform:rotateX(180deg);transform:rotateX(180deg)}.md-search__inner{margin-right:1.2rem}[dir=rtl] .md-search__inner{margin-left:1.2rem}.md-search__scrollwrap,[data-md-toggle=search]:checked~.md-header .md-search__inner{width:34.4rem}.md-sidebar--secondary{margin-left:61rem}[dir=rtl] .md-sidebar--secondary{margin-right:61rem;margin-left:0}.md-tabs~.md-main .md-nav--primary>.md-nav__list>.md-nav__item--nested{font-size:0;visibility:hidden}.md-tabs--active~.md-main .md-nav--primary .md-nav__title{display:block;padding:0}.md-tabs--active~.md-main .md-nav--primary .md-nav__title--site{display:none}.no-js .md-tabs--active~.md-main .md-nav--primary .md-nav{display:block}.md-tabs--active~.md-main .md-nav--primary>.md-nav__list>.md-nav__item{font-size:0;visibility:hidden}.md-tabs--active~.md-main .md-nav--primary>.md-nav__list>.md-nav__item--nested{display:none;font-size:.7rem;overflow:auto;visibility:visible}.md-tabs--active~.md-main .md-nav--primary>.md-nav__list>.md-nav__item--nested>.md-nav__link{display:none}.md-tabs--active~.md-main .md-nav--primary>.md-nav__list>.md-nav__item--active{display:block}.md-tabs--active~.md-main .md-nav[data-md-level="1"]{max-height:none;overflow:visible}.md-tabs--active~.md-main .md-nav[data-md-level="1"]>.md-nav__list>.md-nav__item{padding-left:0}.md-tabs--active~.md-main .md-nav[data-md-level="1"] .md-nav .md-nav__title{display:none}}@media only screen and (min-width:45em){.md-footer-nav__link{width:50%}.md-footer-copyright{max-width:75%;float:left}[dir=rtl] .md-footer-copyright{float:right}.md-footer-social{padding:.6rem 0;float:right}[dir=rtl] .md-footer-social{float:left}}@media only screen and (max-width:29.9375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{-webkit-transform:scale(45);transform:scale(45)}}@media only screen and (min-width:30em) and (max-width:44.9375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{-webkit-transform:scale(60);transform:scale(60)}}@media only screen and (min-width:45em) and (max-width:59.9375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{-webkit-transform:scale(75);transform:scale(75)}}@media only screen and (min-width:60em) and (max-width:76.1875em){.md-search__scrollwrap,[data-md-toggle=search]:checked~.md-header .md-search__inner{width:23.4rem}.md-search-result__teaser{max-height:2.5rem;-webkit-line-clamp:3}}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvYmFzZS9faWNvbnMuc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvYmFzZS9fcmVzZXQuc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvYXBwbGljYXRpb24uc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvYmFzZS9fdHlwZXNldC5zY3NzIiwiL1VzZXJzL2hvcm5jaHJpcy9EZXNrdG9wL2Rldi9ta2RvY3MtbWF0ZXJpYWwvc3JjL2Fzc2V0cy9zdHlsZXNoZWV0cy9oZWxwZXJzL19weDJlbS5zY3NzIiwiL1VzZXJzL2hvcm5jaHJpcy9EZXNrdG9wL2Rldi9ta2RvY3MtbWF0ZXJpYWwvc3JjL2Fzc2V0cy9zdHlsZXNoZWV0cy9fY29uZmlnLnNjc3MiLCIvVXNlcnMvaG9ybmNocmlzL0Rlc2t0b3AvZGV2L21rZG9jcy1tYXRlcmlhbC9ub2RlX21vZHVsZXMvbWF0ZXJpYWwtZGVzaWduLWNvbG9yL21hdGVyaWFsLWNvbG9yLnNjc3MiLCIvVXNlcnMvaG9ybmNocmlzL0Rlc2t0b3AvZGV2L21rZG9jcy1tYXRlcmlhbC9ub2RlX21vZHVsZXMvbWF0ZXJpYWwtc2hhZG93cy9tYXRlcmlhbC1zaGFkb3dzLnNjc3MiLCIvVXNlcnMvaG9ybmNocmlzL0Rlc2t0b3AvZGV2L21rZG9jcy1tYXRlcmlhbC9zcmMvYXNzZXRzL3N0eWxlc2hlZXRzL2xheW91dC9fYmFzZS5zY3NzIiwiL1VzZXJzL2hvcm5jaHJpcy9EZXNrdG9wL2Rldi9ta2RvY3MtbWF0ZXJpYWwvc3JjL2Fzc2V0cy9zdHlsZXNoZWV0cy9sYXlvdXQvX2NsaXBib2FyZC5zY3NzIiwiL1VzZXJzL2hvcm5jaHJpcy9EZXNrdG9wL2Rldi9ta2RvY3MtbWF0ZXJpYWwvc3JjL2Fzc2V0cy9zdHlsZXNoZWV0cy9sYXlvdXQvX2NvbnRlbnQuc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvbGF5b3V0L19oZWFkZXIuc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvbGF5b3V0L19oZXJvLnNjc3MiLCIvVXNlcnMvaG9ybmNocmlzL0Rlc2t0b3AvZGV2L21rZG9jcy1tYXRlcmlhbC9zcmMvYXNzZXRzL3N0eWxlc2hlZXRzL2xheW91dC9fZm9vdGVyLnNjc3MiLCIvVXNlcnMvaG9ybmNocmlzL0Rlc2t0b3AvZGV2L21rZG9jcy1tYXRlcmlhbC9ub2RlX21vZHVsZXMvbW9kdWxhcnNjYWxlLXNhc3Mvc3R5bGVzaGVldHMvbW9kdWxhcnNjYWxlL19mdW5jdGlvbi5zY3NzIiwiL1VzZXJzL2hvcm5jaHJpcy9EZXNrdG9wL2Rldi9ta2RvY3MtbWF0ZXJpYWwvc3JjL2Fzc2V0cy9zdHlsZXNoZWV0cy9sYXlvdXQvX25hdi5zY3NzIiwiL1VzZXJzL2hvcm5jaHJpcy9EZXNrdG9wL2Rldi9ta2RvY3MtbWF0ZXJpYWwvc3JjL2Fzc2V0cy9zdHlsZXNoZWV0cy9sYXlvdXQvX3NlYXJjaC5zY3NzIiwiL1VzZXJzL2hvcm5jaHJpcy9EZXNrdG9wL2Rldi9ta2RvY3MtbWF0ZXJpYWwvc3JjL2Fzc2V0cy9zdHlsZXNoZWV0cy9sYXlvdXQvX3NpZGViYXIuc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvbGF5b3V0L19zb3VyY2Uuc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvbGF5b3V0L190YWJzLnNjc3MiLCIvVXNlcnMvaG9ybmNocmlzL0Rlc2t0b3AvZGV2L21rZG9jcy1tYXRlcmlhbC9zcmMvYXNzZXRzL3N0eWxlc2hlZXRzL2V4dGVuc2lvbnMvX2FkbW9uaXRpb24uc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvZXh0ZW5zaW9ucy9fY29kZWhpbGl0ZS5zY3NzIiwiL1VzZXJzL2hvcm5jaHJpcy9EZXNrdG9wL2Rldi9ta2RvY3MtbWF0ZXJpYWwvc3JjL2Fzc2V0cy9zdHlsZXNoZWV0cy9leHRlbnNpb25zL19mb290bm90ZXMuc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvZXh0ZW5zaW9ucy9fcGVybWFsaW5rcy5zY3NzIiwiL1VzZXJzL2hvcm5jaHJpcy9EZXNrdG9wL2Rldi9ta2RvY3MtbWF0ZXJpYWwvc3JjL2Fzc2V0cy9zdHlsZXNoZWV0cy9leHRlbnNpb25zL3B5bWRvd24vX2FyaXRobWF0ZXguc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvZXh0ZW5zaW9ucy9weW1kb3duL19jcml0aWMuc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvZXh0ZW5zaW9ucy9weW1kb3duL19kZXRhaWxzLnNjc3MiLCIvVXNlcnMvaG9ybmNocmlzL0Rlc2t0b3AvZGV2L21rZG9jcy1tYXRlcmlhbC9zcmMvYXNzZXRzL3N0eWxlc2hlZXRzL2V4dGVuc2lvbnMvcHltZG93bi9fZW1vamkuc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvZXh0ZW5zaW9ucy9weW1kb3duL19pbmxpbmVoaWxpdGUuc2NzcyIsIi9Vc2Vycy9ob3JuY2hyaXMvRGVza3RvcC9kZXYvbWtkb2NzLW1hdGVyaWFsL3NyYy9hc3NldHMvc3R5bGVzaGVldHMvZXh0ZW5zaW9ucy9weW1kb3duL19zdXBlcmZlbmNlcy5zY3NzIiwiL1VzZXJzL2hvcm5jaHJpcy9EZXNrdG9wL2Rldi9ta2RvY3MtbWF0ZXJpYWwvc3JjL2Fzc2V0cy9zdHlsZXNoZWV0cy9leHRlbnNpb25zL3B5bWRvd24vX3Rhc2tsaXN0LnNjc3MiLCIvVXNlcnMvaG9ybmNocmlzL0Rlc2t0b3AvZGV2L21rZG9jcy1tYXRlcmlhbC9zcmMvYXNzZXRzL3N0eWxlc2hlZXRzL2hlbHBlcnMvX2JyZWFrLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOERJLGlCQUxPLEFDNUJYLEtBQ0UscUJBQUEsQ0FBc0IsQUFJeEIsaUJBR0Usa0JBQUEsQ0FBbUIsQUFSckIsS0FhRSw4QkFBQSwyQkFBQSwwQkFBQSxxQkFBQSxDQUFzQixBQUl4QixLQUNFLFFBQUEsQ0FBUyxBQUlYLEdBQ0UsaUJBQUEsQUFDQSxzQkFBQSxDQUF1QixBQUl6QixFQUNFLG9DQUFBLENBQXFDLEFBSXZDLHFCQUlFLHVDQUFBLENBQXdDLEFBVDFDLEVBY0UsY0FBQSxBQUNBLG9CQUFBLENBQXFCLEFBU3ZCLGNBSkUsYUFBQSxDQVN3QixBQUwxQixRQUVFLGtCQUFBLEFBRUEsY0FBQSxBQUNBLHVCQUFBLENBQXdCLEFBSTFCLElBQ0UsYUFBQSxDQUFlLEFBSWpCLElBQ0UsU0FBQSxDQUFXLEFBSWIsSUFDRSxpQkFBQSxDQUFrQixBQUlwQixNQUNFLHlCQUFBLEFBQ0EsZ0JBQUEsQ0FBaUIsQUFJbkIsTUFFRSxnQkFBQSxBQUNBLGtCQUFBLENBQW1CLEFBSXJCLE9BQ0UsU0FBQSxBQUNBLFVBQUEsQUFDQSxTQUFBLEFBQ0EsbUJBQUEsQUFDQSx1QkFBQSxBQUNBLGlCQUFBLENBQWtCLEFBSXBC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RkFxREssY0FBQSxDQUFlLEFBckRwQiw0RUEwREssWUFBQSxDQUFhLENBQ2QsQVlnREwsd0NsQjlLRixxQkFPSSxTQUFBLENBQVUsQUE0RmhCLHFCQVFJLGNBQUEsQUFDQSxVQUFBLENBQVcsQVh1bkJULCtCV25uQkEsV0FBQSxDQUFZLEFBV2xCLGtCQU1JLGdCQUFBLEFBQ0EsV0FBQSxDQUFZLEFYNm1CViw0Qld6bUJBLFVBQUEsQ0FBVyxDQUNaLEFrQjZERCw2QzdCNnpCQSwrRGN4OUJJLDRCQUFBLG1CQUFBLENBQW9CLENBWXZCLEFlZ0dDLGtFN0IrMkJGLCtEY3Q5QkksNEJBQUEsbUJBQUEsQ0FBb0IsQ0FPdkIsQWVnR0Msa0U3QmszQkYsK0RjcDlCSSw0QkFBQSxtQkFBQSxDQUFvQixDQUV2QixBZWdHQyxrRWYwT0osb0ZBU0ksYUFBQSxDWjFYZ0MsQVk0aEJwQywwQkFvQkksa0JBQUEsQUFDQSxvQkFBQSxDQUFxQixDQUV4QiIsImZpbGUiOiJhcHBsaWNhdGlvbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8vXG4vLy8gQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgTWFydGluIERvbmF0aCA8bWFydGluLmRvbmF0aEBzcXVpZGZ1bmsuY29tPlxuLy8vXG4vLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksXG4vLy8gdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8vIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLFxuLy8vIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZVxuLy8vIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vLy9cbi8vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy8vXG4vLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT04tSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTFxuLy8vIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkdcbi8vLyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSXG4vLy8gREVBTElOR1Ncbi8vLy9cblxuLy8gc3R5bGVsaW50LWRpc2FibGUgZm9udC1mYW1pbHktbm8tbWlzc2luZy1nZW5lcmljLWZhbWlseS1rZXl3b3JkXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEljb24gcGxhY2Vob2xkZXJzXG4lbWQtaWNvbiB7XG4gIGZvbnQtZmFtaWx5OiBcIk1hdGVyaWFsIEljb25zXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC12YXJpYW50OiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgc3BlYWs6IG5vbmU7XG4gIHdvcmQtd3JhcDogbm9ybWFsO1xuICBkaXJlY3Rpb246IGx0cjtcblxuICAvLyBJY29uIHJlbmRlcmVkIGFzIGJ1dHRvblxuICAmX19idXR0b24ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW46ICRtZC1pY29uLW1hcmdpbjtcbiAgICBwYWRkaW5nOiAkbWQtaWNvbi1wYWRkaW5nO1xuICAgIGZvbnQtc2l6ZTogJG1kLWljb24tc2l6ZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cblxuLy8gUmVwcmVzZW50YXRpb25hbCBjbGFzc2VzXG4ubWQtaWNvbiB7XG4gIEBleHRlbmQgJW1kLWljb247XG5cbiAgLy8gQnVpbGQgcmVwcmVzZW50YXRpb25hbCBjbGFzc2VzXG4gIEBlYWNoICRsaWdhdHVyZSwgJG5hbWUgaW4gKFxuICAgIFwiXFxFNUM0XCI6IFwiYXJyb3ctYmFja1wiLCAvLyBhcnJvd19iYWNrXG4gICAgXCJcXEU1QzhcIjogXCJhcnJvdy1mb3J3YXJkXCIsIC8vIGFycm93X2ZvcndhcmRcbiAgICBcIlxcRTVEMlwiOiBcIm1lbnVcIiwgLy8gbWVudVxuICAgIFwiXFxFOEI2XCI6IFwic2VhcmNoXCIgLy8gc2VhcmNoXG4gICkge1xuICAgICYtLSN7JG5hbWV9OjpiZWZvcmUge1xuICAgICAgY29udGVudDogJGxpZ2F0dXJlO1xuICAgIH1cbiAgfVxuXG4gIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICBbZGlyPVwicnRsXCJdICYge1xuXG4gICAgLy8gRmxpcCBsaWdhdHVyZXMgZm9yIGFycm93c1xuICAgIEBlYWNoICRsaWdhdHVyZSwgJG5hbWUgaW4gKFxuICAgICAgXCJcXEU1QzhcIjogXCJhcnJvdy1iYWNrXCIsIC8vIGFycm93X2ZvcndhcmRcbiAgICAgIFwiXFxFNUM0XCI6IFwiYXJyb3ctZm9yd2FyZFwiIC8vIGFycm93X2JhY2tcbiAgICApIHtcbiAgICAgICYtLSN7JG5hbWV9OjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAkbGlnYXR1cmU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvLy8vXG4vLy8gQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgTWFydGluIERvbmF0aCA8bWFydGluLmRvbmF0aEBzcXVpZGZ1bmsuY29tPlxuLy8vXG4vLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksXG4vLy8gdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8vIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLFxuLy8vIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZVxuLy8vIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vLy9cbi8vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy8vXG4vLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT04tSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTFxuLy8vIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkdcbi8vLyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSXG4vLy8gREVBTElOR1Ncbi8vLy9cblxuLy8gc3R5bGVsaW50LWRpc2FibGUgbm8tZHVwbGljYXRlLXNlbGVjdG9yc1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSdWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBFbmZvcmNlIGNvcnJlY3QgYm94IG1vZGVsXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLy8gQWxsIGVsZW1lbnRzIHNoYWxsIGluaGVyaXQgdGhlIGRvY3VtZW50IGRlZmF1bHRcbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8vIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPU1xuaHRtbCB7XG4gIHRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7XG59XG5cbi8vIFJlbW92ZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vLyBSZXNldCBob3Jpem9udGFsIHJ1bGVzIGluIEZGXG5ociB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbn1cblxuLy8gUmVtb3ZlIGdhcHMgaW4gdW5kZXJsaW5lZCBsaW5rcyBpbiBpT1MgPj0gOCBhbmQgU2FmYXJpID49IDhcbmEge1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xufVxuXG4vLyBSZXNldCB0YXAgb3V0bGluZXMgb24gaU9TIGFuZCBBbmRyb2lkXG5hLFxuYnV0dG9uLFxubGFiZWwsXG5pbnB1dCB7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8vIFJlc2V0IGxpbmsgc3R5bGVzXG5hIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLy8gTm9ybWFsaXplIGZvbnQtc2l6ZSBpbiBhbGwgYnJvd3NlcnNcbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8vIFByZXZlbnQgc3Vic2NyaXB0IGFuZCBzdXBlcnNjcmlwdCBmcm9tIGFmZmVjdGluZyBsaW5lLWhlaWdodFxuc3ViLFxuc3VwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDgwJTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLy8gQ29ycmVjdCBzdWJzY3JpcHQgb2Zmc2V0XG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8vIENvcnJlY3Qgc3VwZXJzY3JpcHQgb2Zmc2V0XG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLy8gUmVtb3ZlIGJvcmRlcnMgb24gaW1hZ2VzXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8vIFJlc2V0IHRhYmxlIHN0eWxlc1xudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuLy8gUmVzZXQgdGFibGUgY2VsbCBzdHlsZXNcbnRkLFxudGgge1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4vLyBSZXNldCAobmF0aXZlKSBidXR0b24gc3R5bGVzXG5idXR0b24ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgb3V0bGluZS1zdHlsZTogbm9uZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbn1cblxuLy8gUmVzZXQgKG5hdGl2ZSkgaW5wdXQgc3R5bGVzXG5pbnB1dCB7XG4gIGJvcmRlcjogMDtcbiAgb3V0bGluZTogMDtcbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuaHRtbCB7XG4gIHRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG5ociB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgfVxuXG5hIHtcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgfVxuXG5hLFxuYnV0dG9uLFxubGFiZWwsXG5pbnB1dCB7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG5zdWIsXG5zdXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtc2l6ZTogODAlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG50ZCxcbnRoIHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuXG5idXR0b24ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgb3V0bGluZS1zdHlsZTogbm9uZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDsgfVxuXG5pbnB1dCB7XG4gIGJvcmRlcjogMDtcbiAgb3V0bGluZTogMDsgfVxuXG4ubWQtaWNvbiwgLm1kLWNsaXBib2FyZDo6YmVmb3JlLCAubWQtbmF2X190aXRsZTo6YmVmb3JlLCAubWQtbmF2X19idXR0b24sIC5tZC1uYXZfX2xpbms6OmFmdGVyLCAubWQtc2VhcmNoLXJlc3VsdF9fYXJ0aWNsZS0tZG9jdW1lbnQ6OmJlZm9yZSwgLm1kLXNvdXJjZS1maWxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscyA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCAuZm9vdG5vdGUtYmFja3JlZiwgLm1kLXR5cGVzZXQgLmNyaXRpYy5jb21tZW50OjpiZWZvcmUsIC5tZC10eXBlc2V0IHN1bW1hcnk6OmFmdGVyLCAubWQtdHlwZXNldCAudGFzay1saXN0LWNvbnRyb2wgLnRhc2stbGlzdC1pbmRpY2F0b3I6OmJlZm9yZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1hdGVyaWFsIEljb25zXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC12YXJpYW50OiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgc3BlYWs6IG5vbmU7XG4gIHdvcmQtd3JhcDogbm9ybWFsO1xuICBkaXJlY3Rpb246IGx0cjsgfVxuICAubWQtY29udGVudF9faWNvbiwgLm1kLWhlYWRlci1uYXZfX2J1dHRvbiwgLm1kLWZvb3Rlci1uYXZfX2J1dHRvbiwgLm1kLW5hdl9fdGl0bGU6OmJlZm9yZSwgLm1kLW5hdl9fYnV0dG9uLCAubWQtc2VhcmNoLXJlc3VsdF9fYXJ0aWNsZS0tZG9jdW1lbnQ6OmJlZm9yZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbjogMC4ycmVtO1xuICAgIHBhZGRpbmc6IDAuNHJlbTtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuLm1kLWljb24tLWFycm93LWJhY2s6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7peEXCI7IH1cblxuLm1kLWljb24tLWFycm93LWZvcndhcmQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7peIXCI7IH1cblxuLm1kLWljb24tLW1lbnU6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7peSXCI7IH1cblxuLm1kLWljb24tLXNlYXJjaDo6YmVmb3JlIHtcbiAgY29udGVudDogXCLuorZcIjsgfVxuXG5bZGlyPVwicnRsXCJdIC5tZC1pY29uLS1hcnJvdy1iYWNrOjpiZWZvcmUge1xuICBjb250ZW50OiBcIu6XiFwiOyB9XG5cbltkaXI9XCJydGxcIl0gLm1kLWljb24tLWFycm93LWZvcndhcmQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7peEXCI7IH1cblxuYm9keSB7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOyB9XG5cbmJvZHksXG5pbnB1dCB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpO1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiLCBcImxpZ2FcIjtcbiAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsgfVxuXG5wcmUsXG5jb2RlLFxua2JkIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XG4gIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJrZXJuXCI7XG4gIGZvbnQtZmFtaWx5OiBcIkNvdXJpZXIgTmV3XCIsIENvdXJpZXIsIG1vbm9zcGFjZTsgfVxuXG4ubWQtdHlwZXNldCB7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xuICBsaW5lLWhlaWdodDogMS42O1xuICAtd2Via2l0LXByaW50LWNvbG9yLWFkanVzdDogZXhhY3Q7IH1cbiAgLm1kLXR5cGVzZXQgcCxcbiAgLm1kLXR5cGVzZXQgdWwsXG4gIC5tZC10eXBlc2V0IG9sLFxuICAubWQtdHlwZXNldCBibG9ja3F1b3RlIHtcbiAgICBtYXJnaW46IDFlbSAwOyB9XG4gIC5tZC10eXBlc2V0IGgxIHtcbiAgICBtYXJnaW46IDAgMCAycmVtO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpO1xuICAgIGZvbnQtc2l6ZTogMS41NjI1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMzsgfVxuICAubWQtdHlwZXNldCBoMiB7XG4gICAgbWFyZ2luOiAycmVtIDAgMC44cmVtO1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAtMC4wMWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7IH1cbiAgLm1kLXR5cGVzZXQgaDMge1xuICAgIG1hcmdpbjogMS42cmVtIDAgMC44cmVtO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAtMC4wMWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7IH1cbiAgLm1kLXR5cGVzZXQgaDIgKyBoMyB7XG4gICAgbWFyZ2luLXRvcDogMC44cmVtOyB9XG4gIC5tZC10eXBlc2V0IGg0IHtcbiAgICBtYXJnaW46IDAuOHJlbSAwO1xuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07IH1cbiAgLm1kLXR5cGVzZXQgaDUsXG4gIC5tZC10eXBlc2V0IGg2IHtcbiAgICBtYXJnaW46IDAuOHJlbSAwO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpO1xuICAgIGZvbnQtc2l6ZTogMC42NHJlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAtMC4wMWVtOyB9XG4gIC5tZC10eXBlc2V0IGg1IHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIC5tZC10eXBlc2V0IGhyIHtcbiAgICBtYXJnaW46IDEuNWVtIDA7XG4gICAgYm9yZGVyLWJvdHRvbTogMC4wNXJlbSBkb3R0ZWQgcmdiYSgwLCAwLCAwLCAwLjI2KTsgfVxuICAubWQtdHlwZXNldCBhIHtcbiAgICBjb2xvcjogIzBkNDdhMTtcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkOyB9XG4gICAgLm1kLXR5cGVzZXQgYSwgLm1kLXR5cGVzZXQgYTo6YmVmb3JlIHtcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMTI1czsgfVxuICAgIC5tZC10eXBlc2V0IGE6aG92ZXIsIC5tZC10eXBlc2V0IGE6YWN0aXZlIHtcbiAgICAgIGNvbG9yOiAjODJiMWZmOyB9XG4gICAgQG1lZGlhIHByaW50IHtcbiAgICAgIC5tZC10eXBlc2V0IGE6OmFmdGVyIHtcbiAgICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gICAgICAgIGNvbnRlbnQ6IFwiIFtcIiBhdHRyKGhyZWYpIFwiXVwiOyB9IH1cbiAgLm1kLXR5cGVzZXQgY29kZSxcbiAgLm1kLXR5cGVzZXQgcHJlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIzNiwgMjM2LCAyMzYsIDAuNSk7XG4gICAgY29sb3I6ICMzNzQ3NEY7XG4gICAgZm9udC1zaXplOiA4NSU7XG4gICAgZGlyZWN0aW9uOiBsdHI7IH1cbiAgICBAbWVkaWEgcHJpbnQge1xuICAgICAgLm1kLXR5cGVzZXQgY29kZSxcbiAgICAgIC5tZC10eXBlc2V0IHByZSB7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsgfSB9XG4gIC5tZC10eXBlc2V0IGNvZGUge1xuICAgIG1hcmdpbjogMCAwLjI5NDEyZW07XG4gICAgcGFkZGluZzogMC4wNzM1M2VtIDA7XG4gICAgYm9yZGVyLXJhZGl1czogMC4xcmVtO1xuICAgIGJveC1zaGFkb3c6IDAuMjk0MTJlbSAwIDAgcmdiYSgyMzYsIDIzNiwgMjM2LCAwLjUpLCAtMC4yOTQxMmVtIDAgMCByZ2JhKDIzNiwgMjM2LCAyMzYsIDAuNSk7XG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICBib3gtZGVjb3JhdGlvbi1icmVhazogY2xvbmU7IH1cbiAgICBAbWVkaWEgcHJpbnQge1xuICAgICAgLm1kLXR5cGVzZXQgY29kZSB7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIGJveC1kZWNvcmF0aW9uLWJyZWFrOiBpbml0aWFsOyB9IH1cbiAgLm1kLXR5cGVzZXQgaDEgY29kZSxcbiAgLm1kLXR5cGVzZXQgaDIgY29kZSxcbiAgLm1kLXR5cGVzZXQgaDMgY29kZSxcbiAgLm1kLXR5cGVzZXQgaDQgY29kZSxcbiAgLm1kLXR5cGVzZXQgaDUgY29kZSxcbiAgLm1kLXR5cGVzZXQgaDYgY29kZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgLm1kLXR5cGVzZXQgYSA+IGNvZGUge1xuICAgIG1hcmdpbjogaW5oZXJpdDtcbiAgICBwYWRkaW5nOiBpbmhlcml0O1xuICAgIGJvcmRlci1yYWRpdXM6IGluaXRpYWw7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBib3gtc2hhZG93OiBub25lOyB9XG4gIC5tZC10eXBlc2V0IHByZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbjogMWVtIDA7XG4gICAgYm9yZGVyLXJhZGl1czogMC4xcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NC45Mzc1ZW0pIHtcbiAgICAgIC5tZC10eXBlc2V0IHByZSB7XG4gICAgICAgIG1hcmdpbjogMWVtIC0wLjhyZW07XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDA7IH0gfVxuICAgIC5tZC10eXBlc2V0IHByZSA+IGNvZGUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBwYWRkaW5nOiAwLjUyNXJlbSAwLjZyZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICBib3gtZGVjb3JhdGlvbi1icmVhazogc2xpY2U7XG4gICAgICBvdmVyZmxvdzogYXV0bzsgfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NC45Mzc1ZW0pIHtcbiAgICAgICAgLm1kLXR5cGVzZXQgcHJlID4gY29kZSB7XG4gICAgICAgICAgcGFkZGluZzogMC41MjVyZW0gMC44cmVtOyB9IH1cbiAgICAgIC5tZC10eXBlc2V0IHByZSA+IGNvZGU6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICAgd2lkdGg6IDAuMnJlbTtcbiAgICAgICAgaGVpZ2h0OiAwLjJyZW07IH1cbiAgICAgIC5tZC10eXBlc2V0IHByZSA+IGNvZGU6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTsgfVxuICAgICAgICAubWQtdHlwZXNldCBwcmUgPiBjb2RlOjotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzgyYjFmZjsgfVxuICAubWQtdHlwZXNldCBrYmQge1xuICAgIHBhZGRpbmc6IDAgMC4yOTQxMmVtO1xuICAgIGJvcmRlcjogMC4wNXJlbSBzb2xpZCAjYzljOWM5O1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMTVyZW07XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2JjYmNiYztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkNGQ0ZDO1xuICAgIGNvbG9yOiAjNTU1NTU1O1xuICAgIGZvbnQtc2l6ZTogODUlO1xuICAgIGJveC1zaGFkb3c6IDAgMC4wNXJlbSAwICNiMGIwYjA7XG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDsgfVxuICAubWQtdHlwZXNldCBtYXJrIHtcbiAgICBtYXJnaW46IDAgMC4yNWVtO1xuICAgIHBhZGRpbmc6IDAuMDYyNWVtIDA7XG4gICAgYm9yZGVyLXJhZGl1czogMC4xcmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyMzUsIDU5LCAwLjUpO1xuICAgIGJveC1zaGFkb3c6IDAuMjVlbSAwIDAgcmdiYSgyNTUsIDIzNSwgNTksIDAuNSksIC0wLjI1ZW0gMCAwIHJnYmEoMjU1LCAyMzUsIDU5LCAwLjUpO1xuICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gICAgYm94LWRlY29yYXRpb24tYnJlYWs6IGNsb25lOyB9XG4gIC5tZC10eXBlc2V0IGFiYnIge1xuICAgIGJvcmRlci1ib3R0b206IDAuMDVyZW0gZG90dGVkIHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGN1cnNvcjogaGVscDsgfVxuICAubWQtdHlwZXNldCBzbWFsbCB7XG4gICAgb3BhY2l0eTogMC43NTsgfVxuICAubWQtdHlwZXNldCBzdXAsXG4gIC5tZC10eXBlc2V0IHN1YiB7XG4gICAgbWFyZ2luLWxlZnQ6IDAuMDc4MTJlbTsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgc3VwLCBbZGlyPVwicnRsXCJdXG4gICAgLm1kLXR5cGVzZXQgc3ViIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMC4wNzgxMmVtO1xuICAgICAgbWFyZ2luLWxlZnQ6IGluaXRpYWw7IH1cbiAgLm1kLXR5cGVzZXQgYmxvY2txdW90ZSB7XG4gICAgcGFkZGluZy1sZWZ0OiAwLjZyZW07XG4gICAgYm9yZGVyLWxlZnQ6IDAuMnJlbSBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMjYpO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9XG4gICAgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBibG9ja3F1b3RlIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDAuNnJlbTtcbiAgICAgIHBhZGRpbmctbGVmdDogaW5pdGlhbDtcbiAgICAgIGJvcmRlci1yaWdodDogMC4ycmVtIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yNik7XG4gICAgICBib3JkZXItbGVmdDogaW5pdGlhbDsgfVxuICAubWQtdHlwZXNldCB1bCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBkaXNjOyB9XG4gIC5tZC10eXBlc2V0IHVsLFxuICAubWQtdHlwZXNldCBvbCB7XG4gICAgbWFyZ2luLWxlZnQ6IDAuNjI1ZW07XG4gICAgcGFkZGluZzogMDsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgdWwsIFtkaXI9XCJydGxcIl1cbiAgICAubWQtdHlwZXNldCBvbCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuNjI1ZW07XG4gICAgICBtYXJnaW4tbGVmdDogaW5pdGlhbDsgfVxuICAgIC5tZC10eXBlc2V0IHVsIG9sLFxuICAgIC5tZC10eXBlc2V0IG9sIG9sIHtcbiAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbG93ZXItYWxwaGE7IH1cbiAgICAgIC5tZC10eXBlc2V0IHVsIG9sIG9sLFxuICAgICAgLm1kLXR5cGVzZXQgb2wgb2wgb2wge1xuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IGxvd2VyLXJvbWFuOyB9XG4gICAgLm1kLXR5cGVzZXQgdWwgbGksXG4gICAgLm1kLXR5cGVzZXQgb2wgbGkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgICBtYXJnaW4tbGVmdDogMS4yNWVtOyB9XG4gICAgICBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IHVsIGxpLCBbZGlyPVwicnRsXCJdXG4gICAgICAubWQtdHlwZXNldCBvbCBsaSB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMS4yNWVtO1xuICAgICAgICBtYXJnaW4tbGVmdDogaW5pdGlhbDsgfVxuICAgICAgLm1kLXR5cGVzZXQgdWwgbGkgcCxcbiAgICAgIC5tZC10eXBlc2V0IHVsIGxpIGJsb2NrcXVvdGUsXG4gICAgICAubWQtdHlwZXNldCBvbCBsaSBwLFxuICAgICAgLm1kLXR5cGVzZXQgb2wgbGkgYmxvY2txdW90ZSB7XG4gICAgICAgIG1hcmdpbjogMC41ZW0gMDsgfVxuICAgICAgLm1kLXR5cGVzZXQgdWwgbGk6bGFzdC1jaGlsZCxcbiAgICAgIC5tZC10eXBlc2V0IG9sIGxpOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgICAubWQtdHlwZXNldCB1bCBsaSB1bCxcbiAgICAgIC5tZC10eXBlc2V0IHVsIGxpIG9sLFxuICAgICAgLm1kLXR5cGVzZXQgb2wgbGkgdWwsXG4gICAgICAubWQtdHlwZXNldCBvbCBsaSBvbCB7XG4gICAgICAgIG1hcmdpbjogMC41ZW0gMCAwLjVlbSAwLjYyNWVtOyB9XG4gICAgICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgdWwgbGkgdWwsIFtkaXI9XCJydGxcIl1cbiAgICAgICAgLm1kLXR5cGVzZXQgdWwgbGkgb2wsIFtkaXI9XCJydGxcIl1cbiAgICAgICAgLm1kLXR5cGVzZXQgb2wgbGkgdWwsIFtkaXI9XCJydGxcIl1cbiAgICAgICAgLm1kLXR5cGVzZXQgb2wgbGkgb2wge1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMC42MjVlbTtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogaW5pdGlhbDsgfVxuICAubWQtdHlwZXNldCBkZCB7XG4gICAgbWFyZ2luOiAxZW0gMCAxZW0gMS44NzVlbTsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgZGQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxLjg3NWVtO1xuICAgICAgbWFyZ2luLWxlZnQ6IGluaXRpYWw7IH1cbiAgLm1kLXR5cGVzZXQgaWZyYW1lLFxuICAubWQtdHlwZXNldCBpbWcsXG4gIC5tZC10eXBlc2V0IHN2ZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlOyB9XG4gIC5tZC10eXBlc2V0IHRhYmxlOm5vdChbY2xhc3NdKSB7XG4gICAgYm94LXNoYWRvdzogMCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAxcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLXJhZGl1czogMC4xcmVtO1xuICAgIGZvbnQtc2l6ZTogMC42NHJlbTtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7IH1cbiAgICAubWQtdHlwZXNldCB0YWJsZTpub3QoW2NsYXNzXSkgKyAqIHtcbiAgICAgIG1hcmdpbi10b3A6IDEuNWVtOyB9XG4gICAgLm1kLXR5cGVzZXQgdGFibGU6bm90KFtjbGFzc10pIHRoOm5vdChbYWxpZ25dKSxcbiAgICAubWQtdHlwZXNldCB0YWJsZTpub3QoW2NsYXNzXSkgdGQ6bm90KFthbGlnbl0pIHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgdGFibGU6bm90KFtjbGFzc10pIHRoOm5vdChbYWxpZ25dKSwgW2Rpcj1cInJ0bFwiXVxuICAgICAgLm1kLXR5cGVzZXQgdGFibGU6bm90KFtjbGFzc10pIHRkOm5vdChbYWxpZ25dKSB7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgLm1kLXR5cGVzZXQgdGFibGU6bm90KFtjbGFzc10pIHRoIHtcbiAgICAgIG1pbi13aWR0aDogNXJlbTtcbiAgICAgIHBhZGRpbmc6IDAuNnJlbSAwLjhyZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpO1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICAgIC5tZC10eXBlc2V0IHRhYmxlOm5vdChbY2xhc3NdKSB0ZCB7XG4gICAgICBwYWRkaW5nOiAwLjZyZW0gMC44cmVtO1xuICAgICAgYm9yZGVyLXRvcDogMC4wNXJlbSBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDcpO1xuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICAgIC5tZC10eXBlc2V0IHRhYmxlOm5vdChbY2xhc3NdKSB0ciB7XG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMTI1czsgfVxuICAgICAgLm1kLXR5cGVzZXQgdGFibGU6bm90KFtjbGFzc10pIHRyOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjAzNSk7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMC4wNXJlbSAwIHdoaXRlIGluc2V0OyB9XG4gICAgICAubWQtdHlwZXNldCB0YWJsZTpub3QoW2NsYXNzXSkgdHI6Zmlyc3QtY2hpbGQgdGQge1xuICAgICAgICBib3JkZXItdG9wOiAwOyB9XG4gICAgLm1kLXR5cGVzZXQgdGFibGU6bm90KFtjbGFzc10pIGEge1xuICAgICAgd29yZC1icmVhazogbm9ybWFsOyB9XG4gIC5tZC10eXBlc2V0X19zY3JvbGx3cmFwIHtcbiAgICBtYXJnaW46IDFlbSAtMC44cmVtO1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoOyB9XG4gIC5tZC10eXBlc2V0IC5tZC10eXBlc2V0X190YWJsZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgIHBhZGRpbmc6IDAgMC44cmVtOyB9XG4gICAgLm1kLXR5cGVzZXQgLm1kLXR5cGVzZXRfX3RhYmxlIHRhYmxlIHtcbiAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbmh0bWwge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGZvbnQtc2l6ZTogMTI1JTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwZW0pIHtcbiAgICBodG1sIHtcbiAgICAgIGZvbnQtc2l6ZTogMTM3LjUwJTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTI1ZW0pIHtcbiAgICBodG1sIHtcbiAgICAgIGZvbnQtc2l6ZTogMTUwJTsgfSB9XG5cbmJvZHkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udC1zaXplOiAwLjVyZW07IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OS45Mzc1ZW0pIHtcbiAgICBib2R5W2RhdGEtbWQtc3RhdGU9XCJsb2NrXCJdIHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAgIC5pb3MgYm9keVtkYXRhLW1kLXN0YXRlPVwibG9ja1wiXSAubWQtY29udGFpbmVyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbmhyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMC4wNXJlbTtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwOyB9XG5cbi5tZC1zdmcge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5tZC1ncmlkIHtcbiAgbWF4LXdpZHRoOiA2MXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bzsgfVxuXG4ubWQtY29udGFpbmVyLFxuLm1kLW1haW4ge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4ubWQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmctdG9wOiAyLjRyZW07XG4gIHRhYmxlLWxheW91dDogZml4ZWQ7IH1cblxuLm1kLW1haW4ge1xuICBkaXNwbGF5OiB0YWJsZS1yb3c7XG4gIGhlaWdodDogMTAwJTsgfVxuICAubWQtbWFpbl9faW5uZXIge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwYWRkaW5nLXRvcDogMS41cmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAwLjA1cmVtOyB9XG5cbi5tZC10b2dnbGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5tZC1vdmVybGF5IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG4gIHRyYW5zaXRpb246IHdpZHRoICAgMHMgMC4yNXMsIGhlaWdodCAgMHMgMC4yNXMsIG9wYWNpdHkgMC4yNXM7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gIG9wYWNpdHk6IDA7XG4gIHotaW5kZXg6IDM7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3Ni4xODc1ZW0pIHtcbiAgICBbZGF0YS1tZC10b2dnbGU9XCJkcmF3ZXJcIl06Y2hlY2tlZCB+IC5tZC1vdmVybGF5IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgdHJhbnNpdGlvbjogd2lkdGggICAwcywgaGVpZ2h0ICAwcywgb3BhY2l0eSAwLjI1cztcbiAgICAgIG9wYWNpdHk6IDE7IH0gfVxuXG4ubWQtZmxleCB7XG4gIGRpc3BsYXk6IHRhYmxlOyB9XG4gIC5tZC1mbGV4X19jZWxsIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgLm1kLWZsZXhfX2NlbGwtLXNocmluayB7XG4gICAgICB3aWR0aDogMCU7IH1cbiAgICAubWQtZmxleF9fY2VsbC0tc3RyZXRjaCB7XG4gICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgdGFibGUtbGF5b3V0OiBmaXhlZDsgfVxuICAubWQtZmxleF9fZWxsaXBzaXMge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi5tZC1za2lwIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogMC4wNXJlbTtcbiAgaGVpZ2h0OiAwLjA1cmVtO1xuICBtYXJnaW46IDAuNXJlbTtcbiAgcGFkZGluZzogMC4zcmVtIDAuNXJlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAuNHJlbSk7XG4gIGJvcmRlci1yYWRpdXM6IDAuMXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDAuNjRyZW07XG4gIG9wYWNpdHk6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLm1kLXNraXA6Zm9jdXMge1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBjbGlwOiBhdXRvO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKSwgb3BhY2l0eSAwLjE3NXMgMC4wNzVzO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgei1pbmRleDogMTA7IH1cblxuQHBhZ2Uge1xuICBtYXJnaW46IDI1bW07IH1cblxuLm1kLWNsaXBib2FyZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwLjNyZW07XG4gIHJpZ2h0OiAwLjNyZW07XG4gIHdpZHRoOiAxLjRyZW07XG4gIGhlaWdodDogMS40cmVtO1xuICBib3JkZXItcmFkaXVzOiAwLjFyZW07XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHotaW5kZXg6IDE7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuICBAbWVkaWEgcHJpbnQge1xuICAgIC5tZC1jbGlwYm9hcmQge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5tZC1jbGlwYm9hcmQ6OmJlZm9yZSB7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgICAwLjI1cywgb3BhY2l0eSAwLjI1cztcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA3KTtcbiAgICBjb250ZW50OiBcIlxcRTE0RFwiOyB9XG4gICAgcHJlOmhvdmVyIC5tZC1jbGlwYm9hcmQ6OmJlZm9yZSxcbiAgICAuY29kZWhpbGl0ZTpob3ZlciAubWQtY2xpcGJvYXJkOjpiZWZvcmUsXG4gICAgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodDpob3ZlciAubWQtY2xpcGJvYXJkOjpiZWZvcmUge1xuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7IH1cbiAgLm1kLWNsaXBib2FyZDpmb2N1czo6YmVmb3JlLCAubWQtY2xpcGJvYXJkOmhvdmVyOjpiZWZvcmUge1xuICAgIGNvbG9yOiAjODJiMWZmOyB9XG4gIC5tZC1jbGlwYm9hcmRfX21lc3NhZ2Uge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDEuN3JlbTtcbiAgICBwYWRkaW5nOiAwLjNyZW0gMC41cmVtO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwLjRyZW0pO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI1cyBjdWJpYy1iZXppZXIoMC45LCAwLjEsIDAuOSwgMCksIG9wYWNpdHkgMC4xNzVzO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXNpemU6IDAuNjRyZW07XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG4gICAgLm1kLWNsaXBib2FyZF9fbWVzc2FnZS0tYWN0aXZlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI1cyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLCBvcGFjaXR5IDAuMTc1cyAwLjA3NXM7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgcG9pbnRlci1ldmVudHM6IGluaXRpYWw7IH1cbiAgICAubWQtY2xpcGJvYXJkX19tZXNzYWdlOjpiZWZvcmUge1xuICAgICAgY29udGVudDogYXR0cihhcmlhLWxhYmVsKTsgfVxuICAgIC5tZC1jbGlwYm9hcmRfX21lc3NhZ2U6OmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICByaWdodDogLTAuMnJlbTtcbiAgICAgIHdpZHRoOiAwO1xuICAgICAgbWFyZ2luLXRvcDogLTAuMnJlbTtcbiAgICAgIGJvcmRlci13aWR0aDogMC4ycmVtIDAgMC4ycmVtIDAuMnJlbTtcbiAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gICAgICBjb250ZW50OiBcIlwiOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjBlbSkge1xuICAubWQtY29udGVudCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMi4xcmVtOyB9XG4gICAgW2Rpcj1cInJ0bFwiXSAubWQtY29udGVudCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IGluaXRpYWw7XG4gICAgICBtYXJnaW4tbGVmdDogMTIuMXJlbTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzYuMjVlbSkge1xuICAubWQtY29udGVudCB7XG4gICAgbWFyZ2luLWxlZnQ6IDEyLjFyZW07IH1cbiAgICBbZGlyPVwicnRsXCJdIC5tZC1jb250ZW50IHtcbiAgICAgIG1hcmdpbi1yaWdodDogMTIuMXJlbTsgfSB9XG5cbi5tZC1jb250ZW50X19pbm5lciB7XG4gIG1hcmdpbjogMCAwLjhyZW0gMS4ycmVtO1xuICBwYWRkaW5nLXRvcDogMC42cmVtOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzYuMjVlbSkge1xuICAgIC5tZC1jb250ZW50X19pbm5lciB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEuMnJlbTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxLjJyZW07IH0gfVxuICAubWQtY29udGVudF9faW5uZXI6OmJlZm9yZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAwLjRyZW07XG4gICAgY29udGVudDogXCJcIjsgfVxuICAubWQtY29udGVudF9faW5uZXIgPiA6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG4ubWQtY29udGVudF9faWNvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAwLjRyZW0gMDtcbiAgcGFkZGluZzogMDtcbiAgZmxvYXQ6IHJpZ2h0OyB9XG4gIC5tZC10eXBlc2V0IC5tZC1jb250ZW50X19pY29uIHtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTsgfVxuICBAbWVkaWEgcHJpbnQge1xuICAgIC5tZC1jb250ZW50X19pY29uIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4ubWQtaGVhZGVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IDIuNHJlbTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjI1cywgY29sb3IgMC4yNXM7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwZDQ3YTE7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgei1pbmRleDogMjtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyB9XG4gIC5uby1qcyAubWQtaGVhZGVyIHtcbiAgICB0cmFuc2l0aW9uOiBub25lO1xuICAgIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgLm1kLWhlYWRlcltkYXRhLW1kLXN0YXRlPVwic2hhZG93XCJdIHtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMjVzLCBjb2xvciAwLjI1cywgYm94LXNoYWRvdyAwLjI1cztcbiAgICBib3gtc2hhZG93OiAwIDAgMC4ycmVtIHJnYmEoMCwgMCwgMCwgMC4xKSwgMCAwLjJyZW0gMC40cmVtIHJnYmEoMCwgMCwgMCwgMC4yKTsgfVxuICBAbWVkaWEgcHJpbnQge1xuICAgIC5tZC1oZWFkZXIge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5tZC1oZWFkZXItbmF2IHtcbiAgcGFkZGluZzogMCAwLjJyZW07IH1cbiAgLm1kLWhlYWRlci1uYXZfX2J1dHRvbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXM7XG4gICAgei1pbmRleDogMTsgfVxuICAgIC5tZC1oZWFkZXItbmF2X19idXR0b246aG92ZXIge1xuICAgICAgb3BhY2l0eTogMC43OyB9XG4gICAgLm1kLWhlYWRlci1uYXZfX2J1dHRvbi5tZC1sb2dvICoge1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAubm8tanMgLm1kLWhlYWRlci1uYXZfX2J1dHRvbi5tZC1pY29uLS1zZWFyY2gge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjBlbSkge1xuICAgICAgLm1kLWhlYWRlci1uYXZfX2J1dHRvbi5tZC1pY29uLS1zZWFyY2gge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2LjE4NzVlbSkge1xuICAgICAgLm1kLWhlYWRlci1uYXZfX2J1dHRvbi5tZC1pY29uLS1ob21lLCAubWQtaGVhZGVyLW5hdl9fYnV0dG9uLm1kLWxvZ28ge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2LjI1ZW0pIHtcbiAgICAgIC5tZC1oZWFkZXItbmF2X19idXR0b24ubWQtaWNvbi0tbWVudSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAubWQtaGVhZGVyLW5hdl9fdG9waWMge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40cyBjdWJpYy1iZXppZXIoMC4xLCAwLjcsIDAuMSwgMSksIG9wYWNpdHkgMC4xNXM7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgLm1kLWhlYWRlci1uYXZfX3RvcGljICsgLm1kLWhlYWRlci1uYXZfX3RvcGljIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxLjI1cmVtKTtcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGN1YmljLWJlemllcigxLCAwLjcsIDAuMSwgMC4xKSwgb3BhY2l0eSAwLjE1cztcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG4gICAgICBbZGlyPVwicnRsXCJdIC5tZC1oZWFkZXItbmF2X190b3BpYyArIC5tZC1oZWFkZXItbmF2X190b3BpYyB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMS4yNXJlbSk7IH1cbiAgICAubm8tanMgLm1kLWhlYWRlci1uYXZfX3RvcGljIHtcbiAgICAgIHBvc2l0aW9uOiBpbml0aWFsOyB9XG4gICAgLm5vLWpzIC5tZC1oZWFkZXItbmF2X190b3BpYyArIC5tZC1oZWFkZXItbmF2X190b3BpYyB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5tZC1oZWFkZXItbmF2X190aXRsZSB7XG4gICAgcGFkZGluZzogMCAxcmVtO1xuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAyLjRyZW07IH1cbiAgICAubWQtaGVhZGVyLW5hdl9fdGl0bGVbZGF0YS1tZC1zdGF0ZT1cImFjdGl2ZVwiXSAubWQtaGVhZGVyLW5hdl9fdG9waWMge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xLjI1cmVtKTtcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGN1YmljLWJlemllcigxLCAwLjcsIDAuMSwgMC4xKSwgb3BhY2l0eSAwLjE1cztcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG4gICAgICBbZGlyPVwicnRsXCJdIC5tZC1oZWFkZXItbmF2X190aXRsZVtkYXRhLW1kLXN0YXRlPVwiYWN0aXZlXCJdIC5tZC1oZWFkZXItbmF2X190b3BpYyB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxLjI1cmVtKTsgfVxuICAgICAgLm1kLWhlYWRlci1uYXZfX3RpdGxlW2RhdGEtbWQtc3RhdGU9XCJhY3RpdmVcIl0gLm1kLWhlYWRlci1uYXZfX3RvcGljICsgLm1kLWhlYWRlci1uYXZfX3RvcGljIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40cyBjdWJpYy1iZXppZXIoMC4xLCAwLjcsIDAuMSwgMSksIG9wYWNpdHkgMC4xNXM7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHotaW5kZXg6IDA7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBpbml0aWFsOyB9XG4gIC5tZC1oZWFkZXItbmF2X19zb3VyY2Uge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAgIC5tZC1oZWFkZXItbmF2X19zb3VyY2Uge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDExLjdyZW07XG4gICAgICAgIG1heC13aWR0aDogMTEuN3JlbTtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMC42cmVtOyB9XG4gICAgICAgIFtkaXI9XCJydGxcIl0gLm1kLWhlYWRlci1uYXZfX3NvdXJjZSB7XG4gICAgICAgICAgcGFkZGluZy1yaWdodDogaW5pdGlhbDtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDAuNnJlbTsgfSB9XG5cbi5tZC1oZXJvIHtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjI1cztcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBkNDdhMTtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDFyZW07XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLm1kLWhlcm9fX2lubmVyIHtcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgIHBhZGRpbmc6IDAuOHJlbSAwLjhyZW0gMC40cmVtO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGN1YmljLWJlemllcigwLjEsIDAuNywgMC4xLCAxKSwgb3BhY2l0eSAwLjI1cztcbiAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjFzOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3Ni4xODc1ZW0pIHtcbiAgICAgIC5tZC1oZXJvX19pbm5lciB7XG4gICAgICAgIG1hcmdpbi10b3A6IDIuNHJlbTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS4ycmVtOyB9IH1cbiAgICBbZGF0YS1tZC1zdGF0ZT1cImhpZGRlblwiXSAubWQtaGVyb19faW5uZXIge1xuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC42MjVyZW0pO1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDBzICAgMC40cywgb3BhY2l0eSAgIDAuMXMgMHM7XG4gICAgICBvcGFjaXR5OiAwOyB9XG4gICAgLm1kLWhlcm8tLWV4cGFuZCAubWQtaGVyb19faW5uZXIge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMS4ycmVtOyB9XG5cbkBtZWRpYSBwcmludCB7XG4gIC5tZC1mb290ZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4ubWQtZm9vdGVyLW5hdiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XG4gIGNvbG9yOiB3aGl0ZTsgfVxuICAubWQtZm9vdGVyLW5hdl9faW5uZXIge1xuICAgIHBhZGRpbmc6IDAuMnJlbTtcbiAgICBvdmVyZmxvdzogYXV0bzsgfVxuICAubWQtZm9vdGVyLW5hdl9fbGluayB7XG4gICAgcGFkZGluZy10b3A6IDEuNHJlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMC40cmVtO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXM7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgICAgIC5tZC1mb290ZXItbmF2X19saW5rIHtcbiAgICAgICAgd2lkdGg6IDUwJTsgfSB9XG4gICAgLm1kLWZvb3Rlci1uYXZfX2xpbms6aG92ZXIge1xuICAgICAgb3BhY2l0eTogMC43OyB9XG4gICAgLm1kLWZvb3Rlci1uYXZfX2xpbmstLXByZXYge1xuICAgICAgd2lkdGg6IDI1JTtcbiAgICAgIGZsb2F0OiBsZWZ0OyB9XG4gICAgICBbZGlyPVwicnRsXCJdIC5tZC1mb290ZXItbmF2X19saW5rLS1wcmV2IHtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0OyB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ0LjkzNzVlbSkge1xuICAgICAgICAubWQtZm9vdGVyLW5hdl9fbGluay0tcHJldiAubWQtZm9vdGVyLW5hdl9fdGl0bGUge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAgIC5tZC1mb290ZXItbmF2X19saW5rLS1uZXh0IHtcbiAgICAgIHdpZHRoOiA3NSU7XG4gICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtZm9vdGVyLW5hdl9fbGluay0tbmV4dCB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC5tZC1mb290ZXItbmF2X19idXR0b24ge1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4yNXM7IH1cbiAgLm1kLWZvb3Rlci1uYXZfX3RpdGxlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogMCAxcmVtO1xuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAyLjRyZW07IH1cbiAgLm1kLWZvb3Rlci1uYXZfX2RpcmVjdGlvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luLXRvcDogLTFyZW07XG4gICAgcGFkZGluZzogMCAxcmVtO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtOyB9XG5cbi5tZC1mb290ZXItbWV0YSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44OTUpOyB9XG4gIC5tZC1mb290ZXItbWV0YV9faW5uZXIge1xuICAgIHBhZGRpbmc6IDAuMnJlbTtcbiAgICBvdmVyZmxvdzogYXV0bzsgfVxuICBodG1sIC5tZC1mb290ZXItbWV0YS5tZC10eXBlc2V0IGEge1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7IH1cbiAgICBodG1sIC5tZC1mb290ZXItbWV0YS5tZC10eXBlc2V0IGE6Zm9jdXMsIGh0bWwgLm1kLWZvb3Rlci1tZXRhLm1kLXR5cGVzZXQgYTpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7IH1cblxuLm1kLWZvb3Rlci1jb3B5cmlnaHQge1xuICBtYXJnaW46IDAgMC42cmVtO1xuICBwYWRkaW5nOiAwLjRyZW0gMDtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbiAgZm9udC1zaXplOiAwLjY0cmVtOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDVlbSkge1xuICAgIC5tZC1mb290ZXItY29weXJpZ2h0IHtcbiAgICAgIG1heC13aWR0aDogNzUlO1xuICAgICAgZmxvYXQ6IGxlZnQ7IH1cbiAgICAgIFtkaXI9XCJydGxcIl0gLm1kLWZvb3Rlci1jb3B5cmlnaHQge1xuICAgICAgICBmbG9hdDogcmlnaHQ7IH0gfVxuICAubWQtZm9vdGVyLWNvcHlyaWdodF9faGlnaGxpZ2h0IHtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOyB9XG5cbi5tZC1mb290ZXItc29jaWFsIHtcbiAgbWFyZ2luOiAwIDAuNHJlbTtcbiAgcGFkZGluZzogMC4ycmVtIDAgMC42cmVtOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDVlbSkge1xuICAgIC5tZC1mb290ZXItc29jaWFsIHtcbiAgICAgIHBhZGRpbmc6IDAuNnJlbSAwO1xuICAgICAgZmxvYXQ6IHJpZ2h0OyB9XG4gICAgICBbZGlyPVwicnRsXCJdIC5tZC1mb290ZXItc29jaWFsIHtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7IH0gfVxuICAubWQtZm9vdGVyLXNvY2lhbF9fbGluayB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAxLjZyZW07XG4gICAgaGVpZ2h0OiAxLjZyZW07XG4gICAgZm9udC1zaXplOiAwLjhyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLm1kLWZvb3Rlci1zb2NpYWxfX2xpbms6OmJlZm9yZSB7XG4gICAgICBsaW5lLWhlaWdodDogMS45OyB9XG5cbi5tZC1uYXYge1xuICBmb250LXNpemU6IDAuN3JlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMzsgfVxuICAubWQtbmF2X190aXRsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogMCAwLjZyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgLm1kLW5hdl9fdGl0bGU6OmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgY29udGVudDogXCJcXEU1QzRcIjsgfVxuICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtbmF2X190aXRsZTo6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJcXEU1QzhcIjsgfVxuICAgIC5tZC1uYXZfX3RpdGxlIC5tZC1uYXZfX2J1dHRvbiB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5tZC1uYXZfX2xpc3Qge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cbiAgLm1kLW5hdl9faXRlbSB7XG4gICAgcGFkZGluZzogMCAwLjZyZW07IH1cbiAgICAubWQtbmF2X19pdGVtOmxhc3QtY2hpbGQge1xuICAgICAgcGFkZGluZy1ib3R0b206IDAuNnJlbTsgfVxuICAgIC5tZC1uYXZfX2l0ZW0gLm1kLW5hdl9faXRlbSB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gICAgICBbZGlyPVwicnRsXCJdIC5tZC1uYXZfX2l0ZW0gLm1kLW5hdl9faXRlbSB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDAuNnJlbTtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwOyB9XG4gICAgICAubWQtbmF2X19pdGVtIC5tZC1uYXZfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwOyB9XG4gIC5tZC1uYXZfX2J1dHRvbiBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bzsgfVxuICAubWQtbmF2X19saW5rIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAwLjYyNWVtO1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMTI1cztcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgIC5tZC1uYXZfX2l0ZW0tLW5lc3RlZCA+IC5tZC1uYXZfX2xpbms6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXFxFMzEzXCI7IH1cbiAgICBodG1sIC5tZC1uYXZfX2xpbmtbZm9yPVwiX190b2NcIl0ge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgaHRtbCAubWQtbmF2X19saW5rW2Zvcj1cIl9fdG9jXCJdIH4gLm1kLW5hdiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgIGh0bWwgLm1kLW5hdl9fbGlua1tmb3I9XCJfX3RvY1wiXSArIC5tZC1uYXZfX2xpbms6OmFmdGVyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5tZC1uYXZfX2xpbmtbZGF0YS1tZC1zdGF0ZT1cImJsdXJcIl0ge1xuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7IH1cbiAgICAubWQtbmF2X19saW5rOmFjdGl2ZSwgLm1kLW5hdl9fbGluay0tYWN0aXZlIHtcbiAgICAgIGNvbG9yOiAjMGQ0N2ExOyB9XG4gICAgLm1kLW5hdl9faXRlbS0tbmVzdGVkID4gLm1kLW5hdl9fbGluayB7XG4gICAgICBjb2xvcjogaW5oZXJpdDsgfVxuICAgIC5tZC1uYXZfX2xpbms6Zm9jdXMsIC5tZC1uYXZfX2xpbms6aG92ZXIge1xuICAgICAgY29sb3I6ICM4MmIxZmY7IH1cbiAgLm1kLW5hdl9fc291cmNlIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzYuMTg3NWVtKSB7XG4gICAgLm1kLW5hdiB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuICAgICAgLm1kLW5hdi0tcHJpbWFyeSxcbiAgICAgIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICB6LWluZGV4OiAxOyB9XG4gICAgICAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXZfX3RpdGxlLFxuICAgICAgLm1kLW5hdi0tcHJpbWFyeSAubWQtbmF2X19pdGVtIHtcbiAgICAgICAgZm9udC1zaXplOiAwLjhyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7IH1cbiAgICAgIGh0bWwgLm1kLW5hdi0tcHJpbWFyeSAubWQtbmF2X190aXRsZSB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgaGVpZ2h0OiA1LjZyZW07XG4gICAgICAgIHBhZGRpbmc6IDNyZW0gMC44cmVtIDAuMnJlbTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA3KTtcbiAgICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyLjRyZW07XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICAgICBodG1sIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdl9fdGl0bGU6OmJlZm9yZSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHRvcDogMC4ycmVtO1xuICAgICAgICAgIGxlZnQ6IDAuMnJlbTtcbiAgICAgICAgICB3aWR0aDogMnJlbTtcbiAgICAgICAgICBoZWlnaHQ6IDJyZW07XG4gICAgICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7IH1cbiAgICAgICAgaHRtbCAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXZfX3RpdGxlIH4gLm1kLW5hdl9fbGlzdCB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgICAgYm94LXNoYWRvdzogMCAwLjA1cmVtIDAgcmdiYSgwLCAwLCAwLCAwLjA3KSBpbnNldDsgfVxuICAgICAgICAgIGh0bWwgLm1kLW5hdi0tcHJpbWFyeSAubWQtbmF2X190aXRsZSB+IC5tZC1uYXZfX2xpc3QgPiAubWQtbmF2X19pdGVtOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgIGJvcmRlci10b3A6IDA7IH1cbiAgICAgICAgaHRtbCAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXZfX3RpdGxlLS1zaXRlIHtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzBkNDdhMTtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAgICAgICBodG1sIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdl9fdGl0bGUtLXNpdGUgLm1kLW5hdl9fYnV0dG9uIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwLjJyZW07XG4gICAgICAgICAgICBsZWZ0OiAwLjJyZW07XG4gICAgICAgICAgICB3aWR0aDogMy4ycmVtO1xuICAgICAgICAgICAgaGVpZ2h0OiAzLjJyZW07XG4gICAgICAgICAgICBmb250LXNpemU6IDIuNHJlbTsgfVxuICAgICAgICAgIGh0bWwgLm1kLW5hdi0tcHJpbWFyeSAubWQtbmF2X190aXRsZS0tc2l0ZTo6YmVmb3JlIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgIGh0bWwgW2Rpcj1cInJ0bFwiXSAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXZfX3RpdGxlOjpiZWZvcmUge1xuICAgICAgICByaWdodDogMC4ycmVtO1xuICAgICAgICBsZWZ0OiBpbml0aWFsOyB9XG4gICAgICBodG1sIFtkaXI9XCJydGxcIl0gLm1kLW5hdi0tcHJpbWFyeSAubWQtbmF2X190aXRsZS0tc2l0ZSAubWQtbmF2X19idXR0b24ge1xuICAgICAgICByaWdodDogMC4ycmVtO1xuICAgICAgICBsZWZ0OiBpbml0aWFsOyB9XG4gICAgICAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXZfX2xpc3Qge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBvdmVyZmxvdy15OiBhdXRvOyB9XG4gICAgICAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXZfX2l0ZW0ge1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBib3JkZXItdG9wOiAwLjA1cmVtIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNyk7IH1cbiAgICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXZfX2l0ZW0ge1xuICAgICAgICAgIHBhZGRpbmc6IDA7IH1cbiAgICAgICAgLm1kLW5hdi0tcHJpbWFyeSAubWQtbmF2X19pdGVtLS1uZXN0ZWQgPiAubWQtbmF2X19saW5rIHtcbiAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyLjRyZW07IH1cbiAgICAgICAgICBbZGlyPVwicnRsXCJdIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdl9faXRlbS0tbmVzdGVkID4gLm1kLW5hdl9fbGluayB7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwLjhyZW07XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIuNHJlbTsgfVxuICAgICAgICAgIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdl9faXRlbS0tbmVzdGVkID4gLm1kLW5hdl9fbGluazo6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcXEUzMTVcIjsgfVxuICAgICAgICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXZfX2l0ZW0tLW5lc3RlZCA+IC5tZC1uYXZfX2xpbms6OmFmdGVyIHtcbiAgICAgICAgICAgICAgY29udGVudDogXCJcXEUzMTRcIjsgfVxuICAgICAgLm1kLW5hdi0tcHJpbWFyeSAubWQtbmF2X19saW5rIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICBwYWRkaW5nOiAwLjZyZW0gMC44cmVtOyB9XG4gICAgICAgIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdl9fbGluazo6YWZ0ZXIge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICByaWdodDogMC42cmVtO1xuICAgICAgICAgIG1hcmdpbi10b3A6IC0wLjZyZW07XG4gICAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07IH1cbiAgICAgICAgICBbZGlyPVwicnRsXCJdIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdl9fbGluazo6YWZ0ZXIge1xuICAgICAgICAgICAgcmlnaHQ6IGluaXRpYWw7XG4gICAgICAgICAgICBsZWZ0OiAwLjZyZW07IH1cbiAgICAgIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdi0tc2Vjb25kYXJ5IC5tZC1uYXZfX2xpbmsge1xuICAgICAgICBwb3NpdGlvbjogc3RhdGljOyB9XG4gICAgICAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXYtLXNlY29uZGFyeSAubWQtbmF2IHtcbiAgICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgICAgICAgLm1kLW5hdi0tcHJpbWFyeSAubWQtbmF2LS1zZWNvbmRhcnkgLm1kLW5hdiAubWQtbmF2X19saW5rIHtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDEuNHJlbTsgfVxuICAgICAgICAgIFtkaXI9XCJydGxcIl0gLm1kLW5hdi0tcHJpbWFyeSAubWQtbmF2LS1zZWNvbmRhcnkgLm1kLW5hdiAubWQtbmF2X19saW5rIHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEuNHJlbTtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogaW5pdGlhbDsgfVxuICAgICAgICAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXYtLXNlY29uZGFyeSAubWQtbmF2IC5tZC1uYXYgLm1kLW5hdl9fbGluayB7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAycmVtOyB9XG4gICAgICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXYtLXNlY29uZGFyeSAubWQtbmF2IC5tZC1uYXYgLm1kLW5hdl9fbGluayB7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAycmVtO1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiBpbml0aWFsOyB9XG4gICAgICAgIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdi0tc2Vjb25kYXJ5IC5tZC1uYXYgLm1kLW5hdiAubWQtbmF2IC5tZC1uYXZfX2xpbmsge1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogMi42cmVtOyB9XG4gICAgICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXYtLXNlY29uZGFyeSAubWQtbmF2IC5tZC1uYXYgLm1kLW5hdiAubWQtbmF2X19saW5rIHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDIuNnJlbTtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogaW5pdGlhbDsgfVxuICAgICAgICAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXYtLXNlY29uZGFyeSAubWQtbmF2IC5tZC1uYXYgLm1kLW5hdiAubWQtbmF2IC5tZC1uYXZfX2xpbmsge1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogMy4ycmVtOyB9XG4gICAgICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtbmF2LS1wcmltYXJ5IC5tZC1uYXYtLXNlY29uZGFyeSAubWQtbmF2IC5tZC1uYXYgLm1kLW5hdiAubWQtbmF2IC5tZC1uYXZfX2xpbmsge1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMy4ycmVtO1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiBpbml0aWFsOyB9XG4gICAgICAubWQtbmF2X190b2dnbGUgfiAubWQtbmF2IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAuOCwgMCwgMC42LCAxKSwgb3BhY2l0eSAwLjEyNXMgMC4wNXM7XG4gICAgICAgIG9wYWNpdHk6IDA7IH1cbiAgICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtbmF2X190b2dnbGUgfiAubWQtbmF2IHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpOyB9XG4gICAgICAgIC5uby1jc3N0cmFuc2Zvcm1zM2QgLm1kLW5hdl9fdG9nZ2xlIH4gLm1kLW5hdiB7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgLm1kLW5hdl9fdG9nZ2xlOmNoZWNrZWQgfiAubWQtbmF2IHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKSwgb3BhY2l0eSAwLjEyNXMgMC4xMjVzO1xuICAgICAgICBvcGFjaXR5OiAxOyB9XG4gICAgICAgIC5uby1jc3N0cmFuc2Zvcm1zM2QgLm1kLW5hdl9fdG9nZ2xlOmNoZWNrZWQgfiAubWQtbmF2IHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4OyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OS45Mzc1ZW0pIHtcbiAgICBodG1sIC5tZC1uYXZfX2xpbmtbZm9yPVwiX190b2NcIl0ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAyLjRyZW07IH1cbiAgICAgIGh0bWwgLm1kLW5hdl9fbGlua1tmb3I9XCJfX3RvY1wiXTo6YWZ0ZXIge1xuICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgY29udGVudDogXCJcXEU4REVcIjsgfVxuICAgICAgaHRtbCAubWQtbmF2X19saW5rW2Zvcj1cIl9fdG9jXCJdICsgLm1kLW5hdl9fbGluayB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgIGh0bWwgLm1kLW5hdl9fbGlua1tmb3I9XCJfX3RvY1wiXSB+IC5tZC1uYXYge1xuICAgICAgICBkaXNwbGF5OiBmbGV4OyB9XG4gICAgaHRtbCBbZGlyPVwicnRsXCJdIC5tZC1uYXZfX2xpbmsge1xuICAgICAgcGFkZGluZy1yaWdodDogMC44cmVtO1xuICAgICAgcGFkZGluZy1sZWZ0OiAyLjRyZW07IH1cbiAgICAubWQtbmF2X19zb3VyY2Uge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nOiAwIDAuMnJlbTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAsIDU3LCAxMjgsIDAuOTY3NSk7XG4gICAgICBjb2xvcjogd2hpdGU7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2LjI1ZW0pIHtcbiAgICAubWQtbmF2W2RhdGEtbWQtc3RhdGU9XCJhbmltYXRlXCJdIHtcbiAgICAgIHRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgY3ViaWMtYmV6aWVyKDAuODYsIDAsIDAuMDcsIDEpOyB9XG4gICAgLm1kLW5hdl9fdG9nZ2xlIH4gLm1kLW5hdiB7XG4gICAgICBtYXgtaGVpZ2h0OiAwO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgICAgLm5vLWpzIC5tZC1uYXZfX3RvZ2dsZSB+IC5tZC1uYXYge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLm1kLW5hdl9fdG9nZ2xlOmNoZWNrZWQgfiAubWQtbmF2LCAubWQtbmF2W2RhdGEtbWQtc3RhdGU9XCJleHBhbmRcIl0ge1xuICAgICAgbWF4LWhlaWdodDogMTAwJTsgfVxuICAgICAgLm5vLWpzIC5tZC1uYXZfX3RvZ2dsZTpjaGVja2VkIH4gLm1kLW5hdiwgLm5vLWpzIC5tZC1uYXZbZGF0YS1tZC1zdGF0ZT1cImV4cGFuZFwiXSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLm1kLW5hdl9faXRlbS0tbmVzdGVkID4gLm1kLW5hdiA+IC5tZC1uYXZfX3RpdGxlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAubWQtbmF2X19pdGVtLS1uZXN0ZWQgPiAubWQtbmF2X19saW5rOjphZnRlciB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwLjQ1ZW0gMC40NWVtO1xuICAgICAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiAtMC4xMjVlbTsgfVxuICAgICAgLmpzIC5tZC1uYXZfX2l0ZW0tLW5lc3RlZCA+IC5tZC1uYXZfX2xpbms6OmFmdGVyIHtcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHM7IH1cbiAgICAubWQtbmF2X19pdGVtLS1uZXN0ZWQgLm1kLW5hdl9fdG9nZ2xlOmNoZWNrZWQgfiAubWQtbmF2X19saW5rOjphZnRlciB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoMTgwZGVnKTsgfSB9XG5cbi5uby1qcyAubWQtc2VhcmNoIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgLm1kLXNlYXJjaCB7XG4gICAgcGFkZGluZzogMC4ycmVtOyB9IH1cblxuLm1kLXNlYXJjaF9fb3ZlcmxheSB7XG4gIG9wYWNpdHk6IDA7XG4gIHotaW5kZXg6IDE7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OS45Mzc1ZW0pIHtcbiAgICAubWQtc2VhcmNoX19vdmVybGF5IHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMC4ycmVtO1xuICAgICAgbGVmdDogMC4ycmVtO1xuICAgICAgd2lkdGg6IDEuOHJlbTtcbiAgICAgIGhlaWdodDogMS44cmVtO1xuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyO1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgMC4xcywgb3BhY2l0eSAgIDAuMnMgMC4ycztcbiAgICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgfVxuICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtc2VhcmNoX19vdmVybGF5IHtcbiAgICAgICAgcmlnaHQ6IDAuMnJlbTtcbiAgICAgICAgbGVmdDogaW5pdGlhbDsgfVxuICAgICAgW2RhdGEtbWQtdG9nZ2xlPVwic2VhcmNoXCJdOmNoZWNrZWQgfiAubWQtaGVhZGVyIC5tZC1zZWFyY2hfX292ZXJsYXkge1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40cywgb3BhY2l0eSAgIDAuMXM7XG4gICAgICAgIG9wYWNpdHk6IDE7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDI5LjkzNzVlbSkge1xuICAgIFtkYXRhLW1kLXRvZ2dsZT1cInNlYXJjaFwiXTpjaGVja2VkIH4gLm1kLWhlYWRlciAubWQtc2VhcmNoX19vdmVybGF5IHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoNDUpOyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSBhbmQgKG1heC13aWR0aDogNDQuOTM3NWVtKSB7XG4gICAgW2RhdGEtbWQtdG9nZ2xlPVwic2VhcmNoXCJdOmNoZWNrZWQgfiAubWQtaGVhZGVyIC5tZC1zZWFyY2hfX292ZXJsYXkge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSg2MCk7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ1ZW0pIGFuZCAobWF4LXdpZHRoOiA1OS45Mzc1ZW0pIHtcbiAgICBbZGF0YS1tZC10b2dnbGU9XCJzZWFyY2hcIl06Y2hlY2tlZCB+IC5tZC1oZWFkZXIgLm1kLXNlYXJjaF9fb3ZlcmxheSB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDc1KTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjBlbSkge1xuICAgIC5tZC1zZWFyY2hfX292ZXJsYXkge1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHdpZHRoOiAwO1xuICAgICAgaGVpZ2h0OiAwO1xuICAgICAgdHJhbnNpdGlvbjogd2lkdGggICAwcyAwLjI1cywgaGVpZ2h0ICAwcyAwLjI1cywgb3BhY2l0eSAwLjI1cztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgIFtkaXI9XCJydGxcIl0gLm1kLXNlYXJjaF9fb3ZlcmxheSB7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBsZWZ0OiBpbml0aWFsOyB9XG4gICAgICBbZGF0YS1tZC10b2dnbGU9XCJzZWFyY2hcIl06Y2hlY2tlZCB+IC5tZC1oZWFkZXIgLm1kLXNlYXJjaF9fb3ZlcmxheSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHRyYW5zaXRpb246IHdpZHRoICAgMHMsIGhlaWdodCAgMHMsIG9wYWNpdHkgMC4yNXM7XG4gICAgICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU5LjkzNzVlbSkge1xuICAubWQtc2VhcmNoX19pbm5lciB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNSUpO1xuICAgIHRyYW5zaXRpb246IHJpZ2h0IDBzIDAuM3MsIGxlZnQgMHMgMC4zcywgdHJhbnNmb3JtIDAuMTVzIDAuMTVzIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSksIG9wYWNpdHkgMC4xNXMgMC4xNXM7XG4gICAgb3BhY2l0eTogMDtcbiAgICB6LWluZGV4OiAyOyB9XG4gICAgW2RhdGEtbWQtdG9nZ2xlPVwic2VhcmNoXCJdOmNoZWNrZWQgfiAubWQtaGVhZGVyIC5tZC1zZWFyY2hfX2lubmVyIHtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgICB0cmFuc2l0aW9uOiByaWdodCAwcyAwcywgbGVmdCAwcyAwcywgdHJhbnNmb3JtIDAuMTVzIDAuMTVzIGN1YmljLWJlemllcigwLjEsIDAuNywgMC4xLCAxKSwgb3BhY2l0eSAwLjE1cyAwLjE1cztcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAgIFtkaXI9XCJydGxcIl0gW2RhdGEtbWQtdG9nZ2xlPVwic2VhcmNoXCJdOmNoZWNrZWQgfiAubWQtaGVhZGVyIC5tZC1zZWFyY2hfX2lubmVyIHtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGxlZnQ6IGluaXRpYWw7IH1cbiAgICBodG1sIFtkaXI9XCJydGxcIl0gLm1kLXNlYXJjaF9faW5uZXIge1xuICAgICAgcmlnaHQ6IDEwMCU7XG4gICAgICBsZWZ0OiBpbml0aWFsO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01JSk7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgLm1kLXNlYXJjaF9faW5uZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTEuNXJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuOHJlbTtcbiAgICBwYWRkaW5nOiAwLjFyZW0gMDtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgdHJhbnNpdGlvbjogd2lkdGggMC4yNXMgY3ViaWMtYmV6aWVyKDAuMSwgMC43LCAwLjEsIDEpOyB9XG4gICAgW2Rpcj1cInJ0bFwiXSAubWQtc2VhcmNoX19pbm5lciB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IGluaXRpYWw7XG4gICAgICBtYXJnaW4tbGVmdDogMC44cmVtO1xuICAgICAgZmxvYXQ6IGxlZnQ7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2LjI1ZW0pIHtcbiAgLm1kLXNlYXJjaF9faW5uZXIge1xuICAgIG1hcmdpbi1yaWdodDogMS4ycmVtOyB9XG4gICAgW2Rpcj1cInJ0bFwiXSAubWQtc2VhcmNoX19pbm5lciB7XG4gICAgICBtYXJnaW4tbGVmdDogMS4ycmVtOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MGVtKSBhbmQgKG1heC13aWR0aDogNzYuMTg3NWVtKSB7XG4gIFtkYXRhLW1kLXRvZ2dsZT1cInNlYXJjaFwiXTpjaGVja2VkIH4gLm1kLWhlYWRlciAubWQtc2VhcmNoX19pbm5lciB7XG4gICAgd2lkdGg6IDIzLjRyZW07IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2LjI1ZW0pIHtcbiAgW2RhdGEtbWQtdG9nZ2xlPVwic2VhcmNoXCJdOmNoZWNrZWQgfiAubWQtaGVhZGVyIC5tZC1zZWFyY2hfX2lubmVyIHtcbiAgICB3aWR0aDogMzQuNHJlbTsgfSB9XG5cbi5tZC1zZWFyY2hfX2Zvcm0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgLm1kLXNlYXJjaF9fZm9ybSB7XG4gICAgICBib3JkZXItcmFkaXVzOiAwLjFyZW07IH0gfVxuXG4ubWQtc2VhcmNoX19pbnB1dCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMCAyLjJyZW0gMCAzLjZyZW07XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB6LWluZGV4OiAyOyB9XG4gIFtkaXI9XCJydGxcIl0gLm1kLXNlYXJjaF9faW5wdXQge1xuICAgIHBhZGRpbmc6IDAgMy42cmVtIDAgMi4ycmVtOyB9XG4gIC5tZC1zZWFyY2hfX2lucHV0OjpwbGFjZWhvbGRlciB7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4yNXMgY3ViaWMtYmV6aWVyKDAuMSwgMC43LCAwLjEsIDEpOyB9XG4gIC5tZC1zZWFyY2hfX2lucHV0IH4gLm1kLXNlYXJjaF9faWNvbiwgLm1kLXNlYXJjaF9faW5wdXQ6OnBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTsgfVxuICAubWQtc2VhcmNoX19pbnB1dDo6LW1zLWNsZWFyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTkuOTM3NWVtKSB7XG4gICAgLm1kLXNlYXJjaF9faW5wdXQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDIuNHJlbTtcbiAgICAgIGZvbnQtc2l6ZTogMC45cmVtOyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgLm1kLXNlYXJjaF9faW5wdXQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEuOHJlbTtcbiAgICAgIHBhZGRpbmctbGVmdDogMi4ycmVtO1xuICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjI1cyBjdWJpYy1iZXppZXIoMC4xLCAwLjcsIDAuMSwgMSksIGNvbG9yIDAuMjVzIGN1YmljLWJlemllcigwLjEsIDAuNywgMC4xLCAxKTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDAuMXJlbTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNik7XG4gICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgIGZvbnQtc2l6ZTogMC44cmVtOyB9XG4gICAgICBbZGlyPVwicnRsXCJdIC5tZC1zZWFyY2hfX2lucHV0IHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMi4ycmVtOyB9XG4gICAgICAubWQtc2VhcmNoX19pbnB1dCArIC5tZC1zZWFyY2hfX2ljb24ge1xuICAgICAgICBjb2xvcjogaW5oZXJpdDsgfVxuICAgICAgLm1kLXNlYXJjaF9faW5wdXQ6OnBsYWNlaG9sZGVyIHtcbiAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTsgfVxuICAgICAgLm1kLXNlYXJjaF9faW5wdXQ6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTIpOyB9XG4gICAgICBbZGF0YS1tZC10b2dnbGU9XCJzZWFyY2hcIl06Y2hlY2tlZCB+IC5tZC1oZWFkZXIgLm1kLXNlYXJjaF9faW5wdXQge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwLjFyZW0gMC4xcmVtIDAgMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBjbGlwOyB9XG4gICAgICAgIFtkYXRhLW1kLXRvZ2dsZT1cInNlYXJjaFwiXTpjaGVja2VkIH4gLm1kLWhlYWRlciAubWQtc2VhcmNoX19pbnB1dCArIC5tZC1zZWFyY2hfX2ljb24sIFtkYXRhLW1kLXRvZ2dsZT1cInNlYXJjaFwiXTpjaGVja2VkIH4gLm1kLWhlYWRlciAubWQtc2VhcmNoX19pbnB1dDo6cGxhY2Vob2xkZXIge1xuICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9IH1cblxuLm1kLXNlYXJjaF9faWNvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4yNXMgY3ViaWMtYmV6aWVyKDAuMSwgMC43LCAwLjEsIDEpLCBvcGFjaXR5IDAuMjVzO1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB6LWluZGV4OiAyOyB9XG4gIC5tZC1zZWFyY2hfX2ljb246aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuNzsgfVxuICAubWQtc2VhcmNoX19pY29uW2Zvcj1cIl9fc2VhcmNoXCJdIHtcbiAgICB0b3A6IDAuM3JlbTtcbiAgICBsZWZ0OiAwLjVyZW07IH1cbiAgICBbZGlyPVwicnRsXCJdIC5tZC1zZWFyY2hfX2ljb25bZm9yPVwiX19zZWFyY2hcIl0ge1xuICAgICAgcmlnaHQ6IDAuNXJlbTtcbiAgICAgIGxlZnQ6IGluaXRpYWw7IH1cbiAgICAubWQtc2VhcmNoX19pY29uW2Zvcj1cIl9fc2VhcmNoXCJdOjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJcXEU4QjZcIjsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTkuOTM3NWVtKSB7XG4gICAgICAubWQtc2VhcmNoX19pY29uW2Zvcj1cIl9fc2VhcmNoXCJdIHtcbiAgICAgICAgdG9wOiAwLjZyZW07XG4gICAgICAgIGxlZnQ6IDAuOHJlbTsgfVxuICAgICAgICAubWQtc2VhcmNoX19pY29uW2Zvcj1cIl9fc2VhcmNoXCJdW2Zvcj1cIl9fc2VhcmNoXCJdOjpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXFxFNUM0XCI7IH1cbiAgICAgICAgICBbZGlyPVwicnRsXCJdIC5tZC1zZWFyY2hfX2ljb25bZm9yPVwiX19zZWFyY2hcIl1bZm9yPVwiX19zZWFyY2hcIl06OmJlZm9yZSB7XG4gICAgICAgICAgICBjb250ZW50OiBcIlxcRTVDOFwiOyB9IH1cbiAgLm1kLXNlYXJjaF9faWNvblt0eXBlPVwicmVzZXRcIl0ge1xuICAgIHRvcDogMC4zcmVtO1xuICAgIHJpZ2h0OiAwLjVyZW07XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjEyNSk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTVzIGN1YmljLWJlemllcigwLjEsIDAuNywgMC4xLCAxKSwgb3BhY2l0eSAwLjE1cztcbiAgICBvcGFjaXR5OiAwOyB9XG4gICAgW2Rpcj1cInJ0bFwiXSAubWQtc2VhcmNoX19pY29uW3R5cGU9XCJyZXNldFwiXSB7XG4gICAgICByaWdodDogaW5pdGlhbDtcbiAgICAgIGxlZnQ6IDAuNXJlbTsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTkuOTM3NWVtKSB7XG4gICAgICAubWQtc2VhcmNoX19pY29uW3R5cGU9XCJyZXNldFwiXSB7XG4gICAgICAgIHRvcDogMC42cmVtO1xuICAgICAgICByaWdodDogMC44cmVtOyB9IH1cbiAgICBbZGF0YS1tZC10b2dnbGU9XCJzZWFyY2hcIl06Y2hlY2tlZCB+IC5tZC1oZWFkZXIgLm1kLXNlYXJjaF9faW5wdXQ6dmFsaWQgfiAubWQtc2VhcmNoX19pY29uW3R5cGU9XCJyZXNldFwiXSB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgICAgW2RhdGEtbWQtdG9nZ2xlPVwic2VhcmNoXCJdOmNoZWNrZWQgfiAubWQtaGVhZGVyIC5tZC1zZWFyY2hfX2lucHV0OnZhbGlkIH4gLm1kLXNlYXJjaF9faWNvblt0eXBlPVwicmVzZXRcIl06aG92ZXIge1xuICAgICAgICBvcGFjaXR5OiAwLjc7IH1cblxuLm1kLXNlYXJjaF9fb3V0cHV0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogMCAwIDAuMXJlbSAwLjFyZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDE7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OS45Mzc1ZW0pIHtcbiAgICAubWQtc2VhcmNoX19vdXRwdXQge1xuICAgICAgdG9wOiAyLjRyZW07XG4gICAgICBib3R0b206IDA7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAubWQtc2VhcmNoX19vdXRwdXQge1xuICAgICAgdG9wOiAxLjlyZW07XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHM7XG4gICAgICBvcGFjaXR5OiAwOyB9XG4gICAgICBbZGF0YS1tZC10b2dnbGU9XCJzZWFyY2hcIl06Y2hlY2tlZCB+IC5tZC1oZWFkZXIgLm1kLXNlYXJjaF9fb3V0cHV0IHtcbiAgICAgICAgYm94LXNoYWRvdzogMCA2cHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDE4cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDNweCA1cHggLTFweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgICAgIG9wYWNpdHk6IDE7IH0gfVxuXG4ubWQtc2VhcmNoX19zY3JvbGx3cmFwIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm94LXNoYWRvdzogMCAwLjA1cmVtIDAgcmdiYSgwLCAwLCAwLCAwLjA3KSBpbnNldDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjBlbSkgYW5kIChtYXgtd2lkdGg6IDc2LjE4NzVlbSkge1xuICAgIC5tZC1zZWFyY2hfX3Njcm9sbHdyYXAge1xuICAgICAgd2lkdGg6IDIzLjRyZW07IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2LjI1ZW0pIHtcbiAgICAubWQtc2VhcmNoX19zY3JvbGx3cmFwIHtcbiAgICAgIHdpZHRoOiAzNC40cmVtOyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgLm1kLXNlYXJjaF9fc2Nyb2xsd3JhcCB7XG4gICAgICBtYXgtaGVpZ2h0OiAwOyB9XG4gICAgICBbZGF0YS1tZC10b2dnbGU9XCJzZWFyY2hcIl06Y2hlY2tlZCB+IC5tZC1oZWFkZXIgLm1kLXNlYXJjaF9fc2Nyb2xsd3JhcCB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDc1dmg7IH1cbiAgICAgIC5tZC1zZWFyY2hfX3Njcm9sbHdyYXA6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICAgd2lkdGg6IDAuMnJlbTtcbiAgICAgICAgaGVpZ2h0OiAwLjJyZW07IH1cbiAgICAgIC5tZC1zZWFyY2hfX3Njcm9sbHdyYXA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTsgfVxuICAgICAgICAubWQtc2VhcmNoX19zY3JvbGx3cmFwOjotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzgyYjFmZjsgfSB9XG5cbi5tZC1zZWFyY2gtcmVzdWx0IHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7IH1cbiAgLm1kLXNlYXJjaC1yZXN1bHRfX21ldGEge1xuICAgIHBhZGRpbmc6IDAgMC44cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4wNyk7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gICAgZm9udC1zaXplOiAwLjY0cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjhyZW07IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAgIC5tZC1zZWFyY2gtcmVzdWx0X19tZXRhIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyLjJyZW07IH1cbiAgICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtc2VhcmNoLXJlc3VsdF9fbWV0YSB7XG4gICAgICAgICAgcGFkZGluZy1yaWdodDogMi4ycmVtO1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogaW5pdGlhbDsgfSB9XG4gIC5tZC1zZWFyY2gtcmVzdWx0X19saXN0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXItdG9wOiAwLjA1cmVtIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNyk7XG4gICAgbGlzdC1zdHlsZTogbm9uZTsgfVxuICAubWQtc2VhcmNoLXJlc3VsdF9faXRlbSB7XG4gICAgYm94LXNoYWRvdzogMCAtMC4wNXJlbSAwIHJnYmEoMCwgMCwgMCwgMC4wNyk7IH1cbiAgLm1kLXNlYXJjaC1yZXN1bHRfX2xpbmsge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4yNXM7XG4gICAgb3V0bGluZTogMDtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgLm1kLXNlYXJjaC1yZXN1bHRfX2xpbmtbZGF0YS1tZC1zdGF0ZT1cImFjdGl2ZVwiXSwgLm1kLXNlYXJjaC1yZXN1bHRfX2xpbms6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzAsIDE3NywgMjU1LCAwLjEpOyB9XG4gICAgICAubWQtc2VhcmNoLXJlc3VsdF9fbGlua1tkYXRhLW1kLXN0YXRlPVwiYWN0aXZlXCJdIC5tZC1zZWFyY2gtcmVzdWx0X19hcnRpY2xlOjpiZWZvcmUsIC5tZC1zZWFyY2gtcmVzdWx0X19saW5rOmhvdmVyIC5tZC1zZWFyY2gtcmVzdWx0X19hcnRpY2xlOjpiZWZvcmUge1xuICAgICAgICBvcGFjaXR5OiAwLjc7IH1cbiAgICAubWQtc2VhcmNoLXJlc3VsdF9fbGluazpsYXN0LWNoaWxkIC5tZC1zZWFyY2gtcmVzdWx0X190ZWFzZXIge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC42cmVtOyB9XG4gIC5tZC1zZWFyY2gtcmVzdWx0X19hcnRpY2xlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogMCAwLjhyZW07XG4gICAgb3ZlcmZsb3c6IGF1dG87IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAgIC5tZC1zZWFyY2gtcmVzdWx0X19hcnRpY2xlIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyLjJyZW07IH1cbiAgICAgICAgW2Rpcj1cInJ0bFwiXSAubWQtc2VhcmNoLXJlc3VsdF9fYXJ0aWNsZSB7XG4gICAgICAgICAgcGFkZGluZy1yaWdodDogMi4ycmVtO1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogMC44cmVtOyB9IH1cbiAgICAubWQtc2VhcmNoLXJlc3VsdF9fYXJ0aWNsZS0tZG9jdW1lbnQ6OmJlZm9yZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgbWFyZ2luOiAwLjFyZW07XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzO1xuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gICAgICBjb250ZW50OiBcIlxcRTg4MFwiOyB9XG4gICAgICBbZGlyPVwicnRsXCJdIC5tZC1zZWFyY2gtcmVzdWx0X19hcnRpY2xlLS1kb2N1bWVudDo6YmVmb3JlIHtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGxlZnQ6IGluaXRpYWw7IH1cbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTkuOTM3NWVtKSB7XG4gICAgICAgIC5tZC1zZWFyY2gtcmVzdWx0X19hcnRpY2xlLS1kb2N1bWVudDo6YmVmb3JlIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgICAubWQtc2VhcmNoLXJlc3VsdF9fYXJ0aWNsZS0tZG9jdW1lbnQgLm1kLXNlYXJjaC1yZXN1bHRfX3RpdGxlIHtcbiAgICAgIG1hcmdpbjogMC41NXJlbSAwO1xuICAgICAgZm9udC1zaXplOiAwLjhyZW07XG4gICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNDsgfVxuICAubWQtc2VhcmNoLXJlc3VsdF9fdGl0bGUge1xuICAgIG1hcmdpbjogMC41ZW0gMDtcbiAgICBmb250LXNpemU6IDAuNjRyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBsaW5lLWhlaWdodDogMS40OyB9XG4gIC5tZC1zZWFyY2gtcmVzdWx0X190ZWFzZXIge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIG1heC1oZWlnaHQ6IDEuNjVyZW07XG4gICAgbWFyZ2luOiAwLjVlbSAwO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpO1xuICAgIGZvbnQtc2l6ZTogMC42NHJlbTtcbiAgICBsaW5lLWhlaWdodDogMS40O1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ0LjkzNzVlbSkge1xuICAgICAgLm1kLXNlYXJjaC1yZXN1bHRfX3RlYXNlciB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDIuNXJlbTtcbiAgICAgICAgLXdlYmtpdC1saW5lLWNsYW1wOiAzOyB9IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwZW0pIGFuZCAobWF4LXdpZHRoOiA3Ni4xODc1ZW0pIHtcbiAgICAgIC5tZC1zZWFyY2gtcmVzdWx0X190ZWFzZXIge1xuICAgICAgICBtYXgtaGVpZ2h0OiAyLjVyZW07XG4gICAgICAgIC13ZWJraXQtbGluZS1jbGFtcDogMzsgfSB9XG4gIC5tZC1zZWFyY2gtcmVzdWx0IGVtIHtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG4ubWQtc2lkZWJhciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEyLjFyZW07XG4gIHBhZGRpbmc6IDEuMnJlbSAwO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIEBtZWRpYSBwcmludCB7XG4gICAgLm1kLXNpZGViYXIge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5tZC1zaWRlYmFyW2RhdGEtbWQtc3RhdGU9XCJsb2NrXCJdIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAyLjRyZW07IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3Ni4xODc1ZW0pIHtcbiAgICAubWQtc2lkZWJhci0tcHJpbWFyeSB7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAtMTIuMXJlbTtcbiAgICAgIHdpZHRoOiAxMi4xcmVtO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMjVzIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSksIGJveC1zaGFkb3cgMC4yNXM7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgIHotaW5kZXg6IDM7IH1cbiAgICAgIFtkaXI9XCJydGxcIl0gLm1kLXNpZGViYXItLXByaW1hcnkge1xuICAgICAgICByaWdodDogLTEyLjFyZW07XG4gICAgICAgIGxlZnQ6IGluaXRpYWw7IH1cbiAgICAgIC5uby1jc3N0cmFuc2Zvcm1zM2QgLm1kLXNpZGViYXItLXByaW1hcnkge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgICBbZGF0YS1tZC10b2dnbGU9XCJkcmF3ZXJcIl06Y2hlY2tlZCB+IC5tZC1jb250YWluZXIgLm1kLXNpZGViYXItLXByaW1hcnkge1xuICAgICAgICBib3gtc2hhZG93OiAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDVweCA1cHggLTNweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMi4xcmVtKTsgfVxuICAgICAgICBbZGlyPVwicnRsXCJdIFtkYXRhLW1kLXRvZ2dsZT1cImRyYXdlclwiXTpjaGVja2VkIH4gLm1kLWNvbnRhaW5lciAubWQtc2lkZWJhci0tcHJpbWFyeSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMi4xcmVtKTsgfVxuICAgICAgICAubm8tY3NzdHJhbnNmb3JtczNkIFtkYXRhLW1kLXRvZ2dsZT1cImRyYXdlclwiXTpjaGVja2VkIH4gLm1kLWNvbnRhaW5lciAubWQtc2lkZWJhci0tcHJpbWFyeSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgIC5tZC1zaWRlYmFyLS1wcmltYXJ5IC5tZC1zaWRlYmFyX19zY3JvbGx3cmFwIHtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgfSB9XG4gIC5tZC1zaWRlYmFyLS1zZWNvbmRhcnkge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAgIC5tZC1zaWRlYmFyLS1zZWNvbmRhcnkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwMCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTsgfVxuICAgICAgICBbZGlyPVwicnRsXCJdIC5tZC1zaWRlYmFyLS1zZWNvbmRhcnkge1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMTAwJTtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogaW5pdGlhbDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxMDAlLCAwKTsgfSB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3Ni4yNWVtKSB7XG4gICAgICAubWQtc2lkZWJhci0tc2Vjb25kYXJ5IHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDYxcmVtOyB9XG4gICAgICAgIFtkaXI9XCJydGxcIl0gLm1kLXNpZGViYXItLXNlY29uZGFyeSB7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiA2MXJlbTtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogaW5pdGlhbDsgfSB9XG4gIC5tZC1zaWRlYmFyX19zY3JvbGx3cmFwIHtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgIG1hcmdpbjogMCAwLjJyZW07XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2LjE4NzVlbSkge1xuICAgICAgLm1kLXNpZGViYXItLXByaW1hcnkgLm1kLXNpZGViYXJfX3Njcm9sbHdyYXAge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgbWFyZ2luOiAwOyB9IH1cbiAgICAubWQtc2lkZWJhcl9fc2Nyb2xsd3JhcDo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgICAgd2lkdGg6IDAuMnJlbTtcbiAgICAgIGhlaWdodDogMC4ycmVtOyB9XG4gICAgLm1kLXNpZGViYXJfX3Njcm9sbHdyYXA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNik7IH1cbiAgICAgIC5tZC1zaWRlYmFyX19zY3JvbGx3cmFwOjotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM4MmIxZmY7IH1cblxuQGtleWZyYW1lcyBtZC1zb3VyY2VfX2ZhY3RzLS1kb25lIHtcbiAgMCUge1xuICAgIGhlaWdodDogMDsgfVxuICAxMDAlIHtcbiAgICBoZWlnaHQ6IDAuNjVyZW07IH0gfVxuXG5Aa2V5ZnJhbWVzIG1kLXNvdXJjZV9fZmFjdC0tZG9uZSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTAwJSk7XG4gICAgb3BhY2l0eTogMDsgfVxuICA1MCUge1xuICAgIG9wYWNpdHk6IDA7IH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuLm1kLXNvdXJjZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjZyZW07XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXM7XG4gIGZvbnQtc2l6ZTogMC42NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuICBbZGlyPVwicnRsXCJdIC5tZC1zb3VyY2Uge1xuICAgIHBhZGRpbmctcmlnaHQ6IGluaXRpYWw7XG4gICAgcGFkZGluZy1sZWZ0OiAwLjZyZW07IH1cbiAgLm1kLXNvdXJjZTpob3ZlciB7XG4gICAgb3BhY2l0eTogMC43OyB9XG4gIC5tZC1zb3VyY2U6OmFmdGVyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgaGVpZ2h0OiAyLjRyZW07XG4gICAgY29udGVudDogXCJcIjtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5tZC1zb3VyY2VfX2ljb24ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMi40cmVtO1xuICAgIGhlaWdodDogMi40cmVtO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICAgIC5tZC1zb3VyY2VfX2ljb24gc3ZnIHtcbiAgICAgIHdpZHRoOiAxLjJyZW07XG4gICAgICBoZWlnaHQ6IDEuMnJlbTtcbiAgICAgIG1hcmdpbi10b3A6IDAuNnJlbTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwLjZyZW07IH1cbiAgICAgIFtkaXI9XCJydGxcIl0gLm1kLXNvdXJjZV9faWNvbiBzdmcge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNnJlbTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGluaXRpYWw7IH1cbiAgICAubWQtc291cmNlX19pY29uICsgLm1kLXNvdXJjZV9fcmVwb3NpdG9yeSB7XG4gICAgICBtYXJnaW4tbGVmdDogLTJyZW07XG4gICAgICBwYWRkaW5nLWxlZnQ6IDJyZW07IH1cbiAgICAgIFtkaXI9XCJydGxcIl0gLm1kLXNvdXJjZV9faWNvbiArIC5tZC1zb3VyY2VfX3JlcG9zaXRvcnkge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IC0ycmVtO1xuICAgICAgICBtYXJnaW4tbGVmdDogaW5pdGlhbDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMnJlbTtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiBpbml0aWFsOyB9XG4gIC5tZC1zb3VyY2VfX3JlcG9zaXRvcnkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWxlZnQ6IDAuNnJlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICAubWQtc291cmNlX19mYWN0cyB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZm9udC1zaXplOiAwLjU1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIG9wYWNpdHk6IDAuNzU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgIFtkYXRhLW1kLXN0YXRlPVwiZG9uZVwiXSAubWQtc291cmNlX19mYWN0cyB7XG4gICAgICBhbmltYXRpb246IG1kLXNvdXJjZV9fZmFjdHMtLWRvbmUgMC4yNXMgZWFzZS1pbjsgfVxuICAubWQtc291cmNlX19mYWN0IHtcbiAgICBmbG9hdDogbGVmdDsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXNvdXJjZV9fZmFjdCB7XG4gICAgICBmbG9hdDogcmlnaHQ7IH1cbiAgICBbZGF0YS1tZC1zdGF0ZT1cImRvbmVcIl0gLm1kLXNvdXJjZV9fZmFjdCB7XG4gICAgICBhbmltYXRpb246IG1kLXNvdXJjZV9fZmFjdC0tZG9uZSAwLjRzIGVhc2Utb3V0OyB9XG4gICAgLm1kLXNvdXJjZV9fZmFjdDo6YmVmb3JlIHtcbiAgICAgIG1hcmdpbjogMCAwLjFyZW07XG4gICAgICBjb250ZW50OiBcIlxcMDBCN1wiOyB9XG4gICAgLm1kLXNvdXJjZV9fZmFjdDpmaXJzdC1jaGlsZDo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLm1kLXNvdXJjZS1maWxlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDFlbSAwLjVlbSAxZW0gMDtcbiAgcGFkZGluZy1yaWdodDogMC4yNXJlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4xcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMDcpO1xuICBmb250LXNpemU6IDAuNjRyZW07XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5tZC1zb3VyY2UtZmlsZTo6YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjI1cmVtO1xuICAgIHBhZGRpbmc6IDAuMjVyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAwLjhyZW07XG4gICAgY29udGVudDogXCJcXEU4NkZcIjtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIGh0bWwgLm1kLXNvdXJjZS1maWxlIHtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuNHMsIGNvbG9yIDAuNHMsIGJveC1zaGFkb3cgMC40cyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpOyB9XG4gICAgaHRtbCAubWQtc291cmNlLWZpbGU6OmJlZm9yZSB7XG4gICAgICB0cmFuc2l0aW9uOiBpbmhlcml0OyB9XG4gIGh0bWwgYm9keSAubWQtdHlwZXNldCAubWQtc291cmNlLWZpbGUge1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9XG4gIC5tZC1zb3VyY2UtZmlsZTpob3ZlciB7XG4gICAgYm94LXNoYWRvdzogMCAwIDhweCByZ2JhKDAsIDAsIDAsIDAuMTgpLCAwIDhweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4zNik7IH1cbiAgICAubWQtc291cmNlLWZpbGU6aG92ZXI6OmJlZm9yZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODJiMWZmOyB9XG5cbi5tZC10YWJzIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4yNXM7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwZDQ3YTE7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3Ni4xODc1ZW0pIHtcbiAgICAubWQtdGFicyB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgQG1lZGlhIHByaW50IHtcbiAgICAubWQtdGFicyB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgLm1kLXRhYnNfX2xpc3Qge1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tbGVmdDogMC4ycmVtO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG4gIC5tZC10YWJzX19pdGVtIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgaGVpZ2h0OiAyLjRyZW07XG4gICAgcGFkZGluZy1yaWdodDogMC42cmVtO1xuICAgIHBhZGRpbmctbGVmdDogMC42cmVtOyB9XG4gIC5tZC10YWJzX19saW5rIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAwLjhyZW07XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHMgY3ViaWMtYmV6aWVyKDAuMSwgMC43LCAwLjEsIDEpLCBvcGFjaXR5IDAuMjVzO1xuICAgIGZvbnQtc2l6ZTogMC43cmVtO1xuICAgIG9wYWNpdHk6IDAuNzsgfVxuICAgIC5tZC10YWJzX19saW5rLS1hY3RpdmUsIC5tZC10YWJzX19saW5rOmhvdmVyIHtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5tZC10YWJzX19pdGVtOm50aC1jaGlsZCgyKSAubWQtdGFic19fbGluayB7XG4gICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjAyczsgfVxuICAgIC5tZC10YWJzX19pdGVtOm50aC1jaGlsZCgzKSAubWQtdGFic19fbGluayB7XG4gICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjA0czsgfVxuICAgIC5tZC10YWJzX19pdGVtOm50aC1jaGlsZCg0KSAubWQtdGFic19fbGluayB7XG4gICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjA2czsgfVxuICAgIC5tZC10YWJzX19pdGVtOm50aC1jaGlsZCg1KSAubWQtdGFic19fbGluayB7XG4gICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjA4czsgfVxuICAgIC5tZC10YWJzX19pdGVtOm50aC1jaGlsZCg2KSAubWQtdGFic19fbGluayB7XG4gICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjFzOyB9XG4gICAgLm1kLXRhYnNfX2l0ZW06bnRoLWNoaWxkKDcpIC5tZC10YWJzX19saW5rIHtcbiAgICAgIHRyYW5zaXRpb24tZGVsYXk6IDAuMTJzOyB9XG4gICAgLm1kLXRhYnNfX2l0ZW06bnRoLWNoaWxkKDgpIC5tZC10YWJzX19saW5rIHtcbiAgICAgIHRyYW5zaXRpb24tZGVsYXk6IDAuMTRzOyB9XG4gICAgLm1kLXRhYnNfX2l0ZW06bnRoLWNoaWxkKDkpIC5tZC10YWJzX19saW5rIHtcbiAgICAgIHRyYW5zaXRpb24tZGVsYXk6IDAuMTZzOyB9XG4gICAgLm1kLXRhYnNfX2l0ZW06bnRoLWNoaWxkKDEwKSAubWQtdGFic19fbGluayB7XG4gICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjE4czsgfVxuICAgIC5tZC10YWJzX19pdGVtOm50aC1jaGlsZCgxMSkgLm1kLXRhYnNfX2xpbmsge1xuICAgICAgdHJhbnNpdGlvbi1kZWxheTogMC4yczsgfVxuICAgIC5tZC10YWJzX19pdGVtOm50aC1jaGlsZCgxMikgLm1kLXRhYnNfX2xpbmsge1xuICAgICAgdHJhbnNpdGlvbi1kZWxheTogMC4yMnM7IH1cbiAgICAubWQtdGFic19faXRlbTpudGgtY2hpbGQoMTMpIC5tZC10YWJzX19saW5rIHtcbiAgICAgIHRyYW5zaXRpb24tZGVsYXk6IDAuMjRzOyB9XG4gICAgLm1kLXRhYnNfX2l0ZW06bnRoLWNoaWxkKDE0KSAubWQtdGFic19fbGluayB7XG4gICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjI2czsgfVxuICAgIC5tZC10YWJzX19pdGVtOm50aC1jaGlsZCgxNSkgLm1kLXRhYnNfX2xpbmsge1xuICAgICAgdHJhbnNpdGlvbi1kZWxheTogMC4yOHM7IH1cbiAgICAubWQtdGFic19faXRlbTpudGgtY2hpbGQoMTYpIC5tZC10YWJzX19saW5rIHtcbiAgICAgIHRyYW5zaXRpb24tZGVsYXk6IDAuM3M7IH1cbiAgLm1kLXRhYnNbZGF0YS1tZC1zdGF0ZT1cImhpZGRlblwiXSB7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cbiAgICAubWQtdGFic1tkYXRhLW1kLXN0YXRlPVwiaGlkZGVuXCJdIC5tZC10YWJzX19saW5rIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg1MCUpO1xuICAgICAgdHJhbnNpdGlvbjogY29sb3IgICAgIDAuMjVzLCB0cmFuc2Zvcm0gMHMgMC40cywgb3BhY2l0eSAgIDAuMXM7XG4gICAgICBvcGFjaXR5OiAwOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzYuMjVlbSkge1xuICAgIC5tZC10YWJzIH4gLm1kLW1haW4gLm1kLW5hdi0tcHJpbWFyeSA+IC5tZC1uYXZfX2xpc3QgPiAubWQtbmF2X19pdGVtLS1uZXN0ZWQge1xuICAgICAgZm9udC1zaXplOiAwO1xuICAgICAgdmlzaWJpbGl0eTogaGlkZGVuOyB9XG4gICAgLm1kLXRhYnMtLWFjdGl2ZSB+IC5tZC1tYWluIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdl9fdGl0bGUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nOiAwOyB9XG4gICAgLm1kLXRhYnMtLWFjdGl2ZSB+IC5tZC1tYWluIC5tZC1uYXYtLXByaW1hcnkgLm1kLW5hdl9fdGl0bGUtLXNpdGUge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5uby1qcyAubWQtdGFicy0tYWN0aXZlIH4gLm1kLW1haW4gLm1kLW5hdi0tcHJpbWFyeSAubWQtbmF2IHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLm1kLXRhYnMtLWFjdGl2ZSB+IC5tZC1tYWluIC5tZC1uYXYtLXByaW1hcnkgPiAubWQtbmF2X19saXN0ID4gLm1kLW5hdl9faXRlbSB7XG4gICAgICBmb250LXNpemU6IDA7XG4gICAgICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgICAgIC5tZC10YWJzLS1hY3RpdmUgfiAubWQtbWFpbiAubWQtbmF2LS1wcmltYXJ5ID4gLm1kLW5hdl9fbGlzdCA+IC5tZC1uYXZfX2l0ZW0tLW5lc3RlZCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIGZvbnQtc2l6ZTogMC43cmVtO1xuICAgICAgICBvdmVyZmxvdzogYXV0bztcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTsgfVxuICAgICAgICAubWQtdGFicy0tYWN0aXZlIH4gLm1kLW1haW4gLm1kLW5hdi0tcHJpbWFyeSA+IC5tZC1uYXZfX2xpc3QgPiAubWQtbmF2X19pdGVtLS1uZXN0ZWQgPiAubWQtbmF2X19saW5rIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgICAubWQtdGFicy0tYWN0aXZlIH4gLm1kLW1haW4gLm1kLW5hdi0tcHJpbWFyeSA+IC5tZC1uYXZfX2xpc3QgPiAubWQtbmF2X19pdGVtLS1hY3RpdmUge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5tZC10YWJzLS1hY3RpdmUgfiAubWQtbWFpbiAubWQtbmF2W2RhdGEtbWQtbGV2ZWw9XCIxXCJdIHtcbiAgICAgIG1heC1oZWlnaHQ6IGluaXRpYWw7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuICAgICAgLm1kLXRhYnMtLWFjdGl2ZSB+IC5tZC1tYWluIC5tZC1uYXZbZGF0YS1tZC1sZXZlbD1cIjFcIl0gPiAubWQtbmF2X19saXN0ID4gLm1kLW5hdl9faXRlbSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDsgfVxuICAgICAgLm1kLXRhYnMtLWFjdGl2ZSB+IC5tZC1tYWluIC5tZC1uYXZbZGF0YS1tZC1sZXZlbD1cIjFcIl0gLm1kLW5hdiAubWQtbmF2X190aXRsZSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4ubWQtdHlwZXNldCAuYWRtb25pdGlvbiwgLm1kLXR5cGVzZXQgZGV0YWlscyB7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgM3B4IDFweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDEuNTYyNWVtIDA7XG4gIHBhZGRpbmc6IDAgMC42cmVtO1xuICBib3JkZXItbGVmdDogMC4ycmVtIHNvbGlkICM0NDhhZmY7XG4gIGJvcmRlci1yYWRpdXM6IDAuMXJlbTtcbiAgZm9udC1zaXplOiAwLjY0cmVtO1xuICBvdmVyZmxvdzogYXV0bzsgfVxuICBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IGRldGFpbHMge1xuICAgIGJvcmRlci1yaWdodDogMC4ycmVtIHNvbGlkICM0NDhhZmY7XG4gICAgYm9yZGVyLWxlZnQ6IG5vbmU7IH1cbiAgaHRtbCAubWQtdHlwZXNldCAuYWRtb25pdGlvbiA+IDpsYXN0LWNoaWxkLCBodG1sIC5tZC10eXBlc2V0IGRldGFpbHMgPiA6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42cmVtOyB9XG4gIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uIC5hZG1vbml0aW9uLCAubWQtdHlwZXNldCBkZXRhaWxzIC5hZG1vbml0aW9uLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbiBkZXRhaWxzLCAubWQtdHlwZXNldCBkZXRhaWxzIGRldGFpbHMge1xuICAgIG1hcmdpbjogMWVtIDA7IH1cbiAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24gPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscyA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbiA+IHN1bW1hcnksIC5tZC10eXBlc2V0IGRldGFpbHMgPiBzdW1tYXJ5IHtcbiAgICBtYXJnaW46IDAgLTAuNnJlbTtcbiAgICBwYWRkaW5nOiAwLjRyZW0gMC42cmVtIDAuNHJlbSAycmVtO1xuICAgIGJvcmRlci1ib3R0b206IDAuMDVyZW0gc29saWQgcmdiYSg2OCwgMTM4LCAyNTUsIDAuMSk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2OCwgMTM4LCAyNTUsIDAuMSk7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24gPiAuYWRtb25pdGlvbi10aXRsZSwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzID4gLmFkbW9uaXRpb24tdGl0bGUsIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24gPiBzdW1tYXJ5LCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IGRldGFpbHMgPiBzdW1tYXJ5IHtcbiAgICAgIHBhZGRpbmc6IDAuNHJlbSAycmVtIDAuNHJlbSAwLjZyZW07IH1cbiAgICAubWQtdHlwZXNldCAuYWRtb25pdGlvbiA+IC5hZG1vbml0aW9uLXRpdGxlOmxhc3QtY2hpbGQsIC5tZC10eXBlc2V0IGRldGFpbHMgPiAuYWRtb25pdGlvbi10aXRsZTpsYXN0LWNoaWxkLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbiA+IHN1bW1hcnk6bGFzdC1jaGlsZCwgLm1kLXR5cGVzZXQgZGV0YWlscyA+IHN1bW1hcnk6bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24gPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24gPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMgPiBzdW1tYXJ5OjpiZWZvcmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMC42cmVtO1xuICAgICAgY29sb3I6ICM0NDhhZmY7XG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICBjb250ZW50OiBcIlxcRTNDOVwiOyB9XG4gICAgICBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuYWRtb25pdGlvbiA+IHN1bW1hcnk6OmJlZm9yZSwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzID4gc3VtbWFyeTo6YmVmb3JlIHtcbiAgICAgICAgcmlnaHQ6IDAuNnJlbTtcbiAgICAgICAgbGVmdDogaW5pdGlhbDsgfVxuICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5zdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLnN1bW1hcnksIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnRsZHIsIC5tZC10eXBlc2V0IGRldGFpbHMudGxkciwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uYWJzdHJhY3QsIC5tZC10eXBlc2V0IGRldGFpbHMuYWJzdHJhY3Qge1xuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjMDBiMGZmOyB9XG4gICAgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5zdW1tYXJ5LCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IGRldGFpbHMuc3VtbWFyeSwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuYWRtb25pdGlvbi50bGRyLCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IGRldGFpbHMudGxkciwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5hYnN0cmFjdCwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLmFic3RyYWN0IHtcbiAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogIzAwYjBmZjsgfVxuICAgIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnN1bW1hcnkgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5zdW1tYXJ5ID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnRsZHIgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy50bGRyID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnN1bW1hcnkgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLnN1bW1hcnkgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi50bGRyID4gc3VtbWFyeSwgLm1kLXR5cGVzZXQgZGV0YWlscy50bGRyID4gc3VtbWFyeSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uYWJzdHJhY3QgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5hYnN0cmFjdCA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5hYnN0cmFjdCA+IHN1bW1hcnksIC5tZC10eXBlc2V0IGRldGFpbHMuYWJzdHJhY3QgPiBzdW1tYXJ5IHtcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYmEoMCwgMTc2LCAyNTUsIDAuMSk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDE3NiwgMjU1LCAwLjEpOyB9XG4gICAgICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5zdW1tYXJ5ID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5zdW1tYXJ5ID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24udGxkciA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMudGxkciA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnN1bW1hcnkgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuc3VtbWFyeSA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24udGxkciA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy50bGRyID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5hYnN0cmFjdCA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuYWJzdHJhY3QgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5hYnN0cmFjdCA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5hYnN0cmFjdCA+IHN1bW1hcnk6OmJlZm9yZSB7XG4gICAgICAgIGNvbG9yOiAjMDBiMGZmO1xuICAgICAgICBjb250ZW50OiBcIu6jklwiOyB9XG4gIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnRvZG8sIC5tZC10eXBlc2V0IGRldGFpbHMudG9kbywgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaW5mbywgLm1kLXR5cGVzZXQgZGV0YWlscy5pbmZvIHtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzAwYjhkNDsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24udG9kbywgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLnRvZG8sIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaW5mbywgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLmluZm8ge1xuICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAjMDBiOGQ0OyB9XG4gICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24udG9kbyA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCBkZXRhaWxzLnRvZG8gPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24udG9kbyA+IHN1bW1hcnksIC5tZC10eXBlc2V0IGRldGFpbHMudG9kbyA+IHN1bW1hcnksIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmluZm8gPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5pbmZvID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmluZm8gPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLmluZm8gPiBzdW1tYXJ5IHtcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYmEoMCwgMTg0LCAyMTIsIDAuMSk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDE4NCwgMjEyLCAwLjEpOyB9XG4gICAgICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi50b2RvID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy50b2RvID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24udG9kbyA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy50b2RvID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5pbmZvID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5pbmZvID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaW5mbyA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5pbmZvID4gc3VtbWFyeTo6YmVmb3JlIHtcbiAgICAgICAgY29sb3I6ICMwMGI4ZDQ7XG4gICAgICAgIGNvbnRlbnQ6IFwi7qKOXCI7IH1cbiAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaGludCwgLm1kLXR5cGVzZXQgZGV0YWlscy5oaW50LCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5pbXBvcnRhbnQsIC5tZC10eXBlc2V0IGRldGFpbHMuaW1wb3J0YW50LCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi50aXAsIC5tZC10eXBlc2V0IGRldGFpbHMudGlwIHtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzAwYmZhNTsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaGludCwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLmhpbnQsIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaW1wb3J0YW50LCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IGRldGFpbHMuaW1wb3J0YW50LCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnRpcCwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLnRpcCB7XG4gICAgICBib3JkZXItcmlnaHQtY29sb3I6ICMwMGJmYTU7IH1cbiAgICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5oaW50ID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IGRldGFpbHMuaGludCA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5pbXBvcnRhbnQgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5pbXBvcnRhbnQgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaGludCA+IHN1bW1hcnksIC5tZC10eXBlc2V0IGRldGFpbHMuaGludCA+IHN1bW1hcnksIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmltcG9ydGFudCA+IHN1bW1hcnksIC5tZC10eXBlc2V0IGRldGFpbHMuaW1wb3J0YW50ID4gc3VtbWFyeSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24udGlwID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IGRldGFpbHMudGlwID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnRpcCA+IHN1bW1hcnksIC5tZC10eXBlc2V0IGRldGFpbHMudGlwID4gc3VtbWFyeSB7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDAsIDE5MSwgMTY1LCAwLjEpO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAxOTEsIDE2NSwgMC4xKTsgfVxuICAgICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaGludCA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuaGludCA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmltcG9ydGFudCA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuaW1wb3J0YW50ID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaGludCA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5oaW50ID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5pbXBvcnRhbnQgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuaW1wb3J0YW50ID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi50aXAgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLnRpcCA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnRpcCA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy50aXAgPiBzdW1tYXJ5OjpiZWZvcmUge1xuICAgICAgICBjb2xvcjogIzAwYmZhNTtcbiAgICAgICAgY29udGVudDogXCLuoI5cIjsgfVxuICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5jaGVjaywgLm1kLXR5cGVzZXQgZGV0YWlscy5jaGVjaywgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZG9uZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5kb25lLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5zdWNjZXNzLCAubWQtdHlwZXNldCBkZXRhaWxzLnN1Y2Nlc3Mge1xuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjMDBjODUzOyB9XG4gICAgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5jaGVjaywgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLmNoZWNrLCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmRvbmUsIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgZGV0YWlscy5kb25lLCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnN1Y2Nlc3MsIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgZGV0YWlscy5zdWNjZXNzIHtcbiAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogIzAwYzg1MzsgfVxuICAgIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmNoZWNrID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IGRldGFpbHMuY2hlY2sgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZG9uZSA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCBkZXRhaWxzLmRvbmUgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uY2hlY2sgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLmNoZWNrID4gc3VtbWFyeSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZG9uZSA+IHN1bW1hcnksIC5tZC10eXBlc2V0IGRldGFpbHMuZG9uZSA+IHN1bW1hcnksIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnN1Y2Nlc3MgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5zdWNjZXNzID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnN1Y2Nlc3MgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLnN1Y2Nlc3MgPiBzdW1tYXJ5IHtcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYmEoMCwgMjAwLCA4MywgMC4xKTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMjAwLCA4MywgMC4xKTsgfVxuICAgICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uY2hlY2sgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLmNoZWNrID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZG9uZSA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuZG9uZSA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmNoZWNrID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLmNoZWNrID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5kb25lID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLmRvbmUgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnN1Y2Nlc3MgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLnN1Y2Nlc3MgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5zdWNjZXNzID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLnN1Y2Nlc3MgPiBzdW1tYXJ5OjpiZWZvcmUge1xuICAgICAgICBjb2xvcjogIzAwYzg1MztcbiAgICAgICAgY29udGVudDogXCLuobZcIjsgfVxuICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5oZWxwLCAubWQtdHlwZXNldCBkZXRhaWxzLmhlbHAsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmZhcSwgLm1kLXR5cGVzZXQgZGV0YWlscy5mYXEsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnF1ZXN0aW9uLCAubWQtdHlwZXNldCBkZXRhaWxzLnF1ZXN0aW9uIHtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzY0ZGQxNzsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaGVscCwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLmhlbHAsIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZmFxLCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IGRldGFpbHMuZmFxLCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnF1ZXN0aW9uLCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IGRldGFpbHMucXVlc3Rpb24ge1xuICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAjNjRkZDE3OyB9XG4gICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uaGVscCA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCBkZXRhaWxzLmhlbHAgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZmFxID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IGRldGFpbHMuZmFxID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmhlbHAgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLmhlbHAgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5mYXEgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLmZhcSA+IHN1bW1hcnksIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnF1ZXN0aW9uID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IGRldGFpbHMucXVlc3Rpb24gPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24ucXVlc3Rpb24gPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLnF1ZXN0aW9uID4gc3VtbWFyeSB7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDEwMCwgMjIxLCAyMywgMC4xKTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAwLCAyMjEsIDIzLCAwLjEpOyB9XG4gICAgICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5oZWxwID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5oZWxwID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZmFxID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5mYXEgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5oZWxwID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLmhlbHAgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmZhcSA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5mYXEgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnF1ZXN0aW9uID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5xdWVzdGlvbiA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnF1ZXN0aW9uID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLnF1ZXN0aW9uID4gc3VtbWFyeTo6YmVmb3JlIHtcbiAgICAgICAgY29sb3I6ICM2NGRkMTc7XG4gICAgICAgIGNvbnRlbnQ6IFwi7qKHXCI7IH1cbiAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uY2F1dGlvbiwgLm1kLXR5cGVzZXQgZGV0YWlscy5jYXV0aW9uLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5hdHRlbnRpb24sIC5tZC10eXBlc2V0IGRldGFpbHMuYXR0ZW50aW9uLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi53YXJuaW5nLCAubWQtdHlwZXNldCBkZXRhaWxzLndhcm5pbmcge1xuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjZmY5MTAwOyB9XG4gICAgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5jYXV0aW9uLCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IGRldGFpbHMuY2F1dGlvbiwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5hdHRlbnRpb24sIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgZGV0YWlscy5hdHRlbnRpb24sIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24ud2FybmluZywgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLndhcm5pbmcge1xuICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAjZmY5MTAwOyB9XG4gICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uY2F1dGlvbiA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCBkZXRhaWxzLmNhdXRpb24gPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uYXR0ZW50aW9uID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IGRldGFpbHMuYXR0ZW50aW9uID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmNhdXRpb24gPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLmNhdXRpb24gPiBzdW1tYXJ5LCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5hdHRlbnRpb24gPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLmF0dGVudGlvbiA+IHN1bW1hcnksIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLndhcm5pbmcgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy53YXJuaW5nID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLndhcm5pbmcgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLndhcm5pbmcgPiBzdW1tYXJ5IHtcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYmEoMjU1LCAxNDUsIDAsIDAuMSk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMTQ1LCAwLCAwLjEpOyB9XG4gICAgICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5jYXV0aW9uID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5jYXV0aW9uID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uYXR0ZW50aW9uID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5hdHRlbnRpb24gPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5jYXV0aW9uID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLmNhdXRpb24gPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmF0dGVudGlvbiA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5hdHRlbnRpb24gPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLndhcm5pbmcgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLndhcm5pbmcgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi53YXJuaW5nID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLndhcm5pbmcgPiBzdW1tYXJ5OjpiZWZvcmUge1xuICAgICAgICBjb2xvcjogI2ZmOTEwMDtcbiAgICAgICAgY29udGVudDogXCLugIJcIjsgfVxuICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5mYWlsLCAubWQtdHlwZXNldCBkZXRhaWxzLmZhaWwsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLm1pc3NpbmcsIC5tZC10eXBlc2V0IGRldGFpbHMubWlzc2luZywgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZmFpbHVyZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5mYWlsdXJlIHtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogI2ZmNTI1MjsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZmFpbCwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLmZhaWwsIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24ubWlzc2luZywgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLm1pc3NpbmcsIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZmFpbHVyZSwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLmZhaWx1cmUge1xuICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAjZmY1MjUyOyB9XG4gICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZmFpbCA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCBkZXRhaWxzLmZhaWwgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24ubWlzc2luZyA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCBkZXRhaWxzLm1pc3NpbmcgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZmFpbCA+IHN1bW1hcnksIC5tZC10eXBlc2V0IGRldGFpbHMuZmFpbCA+IHN1bW1hcnksIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLm1pc3NpbmcgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLm1pc3NpbmcgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5mYWlsdXJlID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IGRldGFpbHMuZmFpbHVyZSA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5mYWlsdXJlID4gc3VtbWFyeSwgLm1kLXR5cGVzZXQgZGV0YWlscy5mYWlsdXJlID4gc3VtbWFyeSB7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDI1NSwgODIsIDgyLCAwLjEpO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDgyLCA4MiwgMC4xKTsgfVxuICAgICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZmFpbCA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuZmFpbCA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLm1pc3NpbmcgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLm1pc3NpbmcgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5mYWlsID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCBkZXRhaWxzLmZhaWwgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLm1pc3NpbmcgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMubWlzc2luZyA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZmFpbHVyZSA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuZmFpbHVyZSA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmZhaWx1cmUgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuZmFpbHVyZSA+IHN1bW1hcnk6OmJlZm9yZSB7XG4gICAgICAgIGNvbG9yOiAjZmY1MjUyO1xuICAgICAgICBjb250ZW50OiBcIu6FjFwiOyB9XG4gIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmVycm9yLCAubWQtdHlwZXNldCBkZXRhaWxzLmVycm9yLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5kYW5nZXIsIC5tZC10eXBlc2V0IGRldGFpbHMuZGFuZ2VyIHtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogI2ZmMTc0NDsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZXJyb3IsIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgZGV0YWlscy5lcnJvciwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5kYW5nZXIsIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgZGV0YWlscy5kYW5nZXIge1xuICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAjZmYxNzQ0OyB9XG4gICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZXJyb3IgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5lcnJvciA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5lcnJvciA+IHN1bW1hcnksIC5tZC10eXBlc2V0IGRldGFpbHMuZXJyb3IgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5kYW5nZXIgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5kYW5nZXIgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZGFuZ2VyID4gc3VtbWFyeSwgLm1kLXR5cGVzZXQgZGV0YWlscy5kYW5nZXIgPiBzdW1tYXJ5IHtcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYmEoMjU1LCAyMywgNjgsIDAuMSk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjMsIDY4LCAwLjEpOyB9XG4gICAgICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5lcnJvciA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuZXJyb3IgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5lcnJvciA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5lcnJvciA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZGFuZ2VyID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5kYW5nZXIgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5kYW5nZXIgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuZGFuZ2VyID4gc3VtbWFyeTo6YmVmb3JlIHtcbiAgICAgICAgY29sb3I6ICNmZjE3NDQ7XG4gICAgICAgIGNvbnRlbnQ6IFwi7o+nXCI7IH1cbiAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uYnVnLCAubWQtdHlwZXNldCBkZXRhaWxzLmJ1ZyB7XG4gICAgYm9yZGVyLWxlZnQtY29sb3I6ICNmNTAwNTc7IH1cbiAgICBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmJ1ZywgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLmJ1ZyB7XG4gICAgICBib3JkZXItcmlnaHQtY29sb3I6ICNmNTAwNTc7IH1cbiAgICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5idWcgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5idWcgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uYnVnID4gc3VtbWFyeSwgLm1kLXR5cGVzZXQgZGV0YWlscy5idWcgPiBzdW1tYXJ5IHtcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYmEoMjQ1LCAwLCA4NywgMC4xKTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ1LCAwLCA4NywgMC4xKTsgfVxuICAgICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uYnVnID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5idWcgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5idWcgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuYnVnID4gc3VtbWFyeTo6YmVmb3JlIHtcbiAgICAgICAgY29sb3I6ICNmNTAwNTc7XG4gICAgICAgIGNvbnRlbnQ6IFwi7qGoXCI7IH1cbiAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZXhhbXBsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5leGFtcGxlIHtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzY1MWZmZjsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZXhhbXBsZSwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLmV4YW1wbGUge1xuICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAjNjUxZmZmOyB9XG4gICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZXhhbXBsZSA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCBkZXRhaWxzLmV4YW1wbGUgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZXhhbXBsZSA+IHN1bW1hcnksIC5tZC10eXBlc2V0IGRldGFpbHMuZXhhbXBsZSA+IHN1bW1hcnkge1xuICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgxMDEsIDMxLCAyNTUsIDAuMSk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwMSwgMzEsIDI1NSwgMC4xKTsgfVxuICAgICAgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uZXhhbXBsZSA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuZXhhbXBsZSA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmV4YW1wbGUgPiBzdW1tYXJ5OjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMuZXhhbXBsZSA+IHN1bW1hcnk6OmJlZm9yZSB7XG4gICAgICAgIGNvbG9yOiAjNjUxZmZmO1xuICAgICAgICBjb250ZW50OiBcIu6JglwiOyB9XG4gIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmNpdGUsIC5tZC10eXBlc2V0IGRldGFpbHMuY2l0ZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24ucXVvdGUsIC5tZC10eXBlc2V0IGRldGFpbHMucXVvdGUge1xuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjOWU5ZTllOyB9XG4gICAgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5jaXRlLCBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IGRldGFpbHMuY2l0ZSwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5xdW90ZSwgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCBkZXRhaWxzLnF1b3RlIHtcbiAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogIzllOWU5ZTsgfVxuICAgIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmNpdGUgPiAuYWRtb25pdGlvbi10aXRsZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5jaXRlID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLmNpdGUgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCBkZXRhaWxzLmNpdGUgPiBzdW1tYXJ5LCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5xdW90ZSA+IC5hZG1vbml0aW9uLXRpdGxlLCAubWQtdHlwZXNldCBkZXRhaWxzLnF1b3RlID4gLmFkbW9uaXRpb24tdGl0bGUsIC5tZC10eXBlc2V0IC5hZG1vbml0aW9uLnF1b3RlID4gc3VtbWFyeSwgLm1kLXR5cGVzZXQgZGV0YWlscy5xdW90ZSA+IHN1bW1hcnkge1xuICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgxNTgsIDE1OCwgMTU4LCAwLjEpO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNTgsIDE1OCwgMTU4LCAwLjEpOyB9XG4gICAgICAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5jaXRlID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5jaXRlID4gLmFkbW9uaXRpb24tdGl0bGU6OmJlZm9yZSwgLm1kLXR5cGVzZXQgLmFkbW9uaXRpb24uY2l0ZSA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5jaXRlID4gc3VtbWFyeTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5xdW90ZSA+IC5hZG1vbml0aW9uLXRpdGxlOjpiZWZvcmUsIC5tZC10eXBlc2V0IGRldGFpbHMucXVvdGUgPiAuYWRtb25pdGlvbi10aXRsZTo6YmVmb3JlLCAubWQtdHlwZXNldCAuYWRtb25pdGlvbi5xdW90ZSA+IHN1bW1hcnk6OmJlZm9yZSwgLm1kLXR5cGVzZXQgZGV0YWlscy5xdW90ZSA+IHN1bW1hcnk6OmJlZm9yZSB7XG4gICAgICAgIGNvbG9yOiAjOWU5ZTllO1xuICAgICAgICBjb250ZW50OiBcIu6JhFwiOyB9XG5cbi5jb2RlaGlsaXRlIC5vLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5vIHtcbiAgY29sb3I6IGluaGVyaXQ7IH1cblxuLmNvZGVoaWxpdGUgLm93LCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5vdyB7XG4gIGNvbG9yOiBpbmhlcml0OyB9XG5cbi5jb2RlaGlsaXRlIC5nZSwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuZ2Uge1xuICBjb2xvcjogIzAwMDAwMDsgfVxuXG4uY29kZWhpbGl0ZSAuZ3IsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmdyIHtcbiAgY29sb3I6ICNBQTAwMDA7IH1cblxuLmNvZGVoaWxpdGUgLmdoLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5naCB7XG4gIGNvbG9yOiAjOTk5OTk5OyB9XG5cbi5jb2RlaGlsaXRlIC5nbywgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuZ28ge1xuICBjb2xvcjogIzg4ODg4ODsgfVxuXG4uY29kZWhpbGl0ZSAuZ3AsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmdwIHtcbiAgY29sb3I6ICM1NTU1NTU7IH1cblxuLmNvZGVoaWxpdGUgLmdzLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5ncyB7XG4gIGNvbG9yOiBpbmhlcml0OyB9XG5cbi5jb2RlaGlsaXRlIC5ndSwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuZ3Uge1xuICBjb2xvcjogI0FBQUFBQTsgfVxuXG4uY29kZWhpbGl0ZSAuZ3QsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmd0IHtcbiAgY29sb3I6ICNBQTAwMDA7IH1cblxuLmNvZGVoaWxpdGUgLmdkLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5nZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkREREQ7IH1cblxuLmNvZGVoaWxpdGUgLmdpLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5naSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNEREZGREQ7IH1cblxuLmNvZGVoaWxpdGUgLmssIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmsge1xuICBjb2xvcjogIzNCNzhFNzsgfVxuXG4uY29kZWhpbGl0ZSAua2MsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmtjIHtcbiAgY29sb3I6ICNBNzFENUQ7IH1cblxuLmNvZGVoaWxpdGUgLmtkLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5rZCB7XG4gIGNvbG9yOiAjM0I3OEU3OyB9XG5cbi5jb2RlaGlsaXRlIC5rbiwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAua24ge1xuICBjb2xvcjogIzNCNzhFNzsgfVxuXG4uY29kZWhpbGl0ZSAua3AsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmtwIHtcbiAgY29sb3I6ICNBNzFENUQ7IH1cblxuLmNvZGVoaWxpdGUgLmtyLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5rciB7XG4gIGNvbG9yOiAjM0U2MUEyOyB9XG5cbi5jb2RlaGlsaXRlIC5rdCwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAua3Qge1xuICBjb2xvcjogIzNFNjFBMjsgfVxuXG4uY29kZWhpbGl0ZSAuYywgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuYyB7XG4gIGNvbG9yOiAjOTk5OTk5OyB9XG5cbi5jb2RlaGlsaXRlIC5jbSwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuY20ge1xuICBjb2xvcjogIzk5OTk5OTsgfVxuXG4uY29kZWhpbGl0ZSAuY3AsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmNwIHtcbiAgY29sb3I6ICM2NjY2NjY7IH1cblxuLmNvZGVoaWxpdGUgLmMxLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5jMSB7XG4gIGNvbG9yOiAjOTk5OTk5OyB9XG5cbi5jb2RlaGlsaXRlIC5jaCwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuY2gge1xuICBjb2xvcjogIzk5OTk5OTsgfVxuXG4uY29kZWhpbGl0ZSAuY3MsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmNzIHtcbiAgY29sb3I6ICM5OTk5OTk7IH1cblxuLmNvZGVoaWxpdGUgLm5hLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5uYSB7XG4gIGNvbG9yOiAjQzIxODVCOyB9XG5cbi5jb2RlaGlsaXRlIC5uYiwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAubmIge1xuICBjb2xvcjogI0MyMTg1QjsgfVxuXG4uY29kZWhpbGl0ZSAuYnAsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmJwIHtcbiAgY29sb3I6ICMzRTYxQTI7IH1cblxuLmNvZGVoaWxpdGUgLm5jLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5uYyB7XG4gIGNvbG9yOiAjQzIxODVCOyB9XG5cbi5jb2RlaGlsaXRlIC5ubywgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAubm8ge1xuICBjb2xvcjogIzNFNjFBMjsgfVxuXG4uY29kZWhpbGl0ZSAubmQsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLm5kIHtcbiAgY29sb3I6ICM2NjY2NjY7IH1cblxuLmNvZGVoaWxpdGUgLm5pLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5uaSB7XG4gIGNvbG9yOiAjNjY2NjY2OyB9XG5cbi5jb2RlaGlsaXRlIC5uZSwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAubmUge1xuICBjb2xvcjogI0MyMTg1QjsgfVxuXG4uY29kZWhpbGl0ZSAubmYsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLm5mIHtcbiAgY29sb3I6ICNDMjE4NUI7IH1cblxuLmNvZGVoaWxpdGUgLm5sLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5ubCB7XG4gIGNvbG9yOiAjM0I1MTc5OyB9XG5cbi5jb2RlaGlsaXRlIC5ubiwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAubm4ge1xuICBjb2xvcjogI0VDNDA3QTsgfVxuXG4uY29kZWhpbGl0ZSAubnQsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLm50IHtcbiAgY29sb3I6ICMzQjc4RTc7IH1cblxuLmNvZGVoaWxpdGUgLm52LCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5udiB7XG4gIGNvbG9yOiAjM0U2MUEyOyB9XG5cbi5jb2RlaGlsaXRlIC52YywgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAudmMge1xuICBjb2xvcjogIzNFNjFBMjsgfVxuXG4uY29kZWhpbGl0ZSAudmcsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLnZnIHtcbiAgY29sb3I6ICMzRTYxQTI7IH1cblxuLmNvZGVoaWxpdGUgLnZpLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC52aSB7XG4gIGNvbG9yOiAjM0U2MUEyOyB9XG5cbi5jb2RlaGlsaXRlIC5ueCwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAubngge1xuICBjb2xvcjogI0VDNDA3QTsgfVxuXG4uY29kZWhpbGl0ZSAubSwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAubSB7XG4gIGNvbG9yOiAjRTc0QzNDOyB9XG5cbi5jb2RlaGlsaXRlIC5tZiwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAubWYge1xuICBjb2xvcjogI0U3NEMzQzsgfVxuXG4uY29kZWhpbGl0ZSAubWgsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLm1oIHtcbiAgY29sb3I6ICNFNzRDM0M7IH1cblxuLmNvZGVoaWxpdGUgLm1pLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5taSB7XG4gIGNvbG9yOiAjRTc0QzNDOyB9XG5cbi5jb2RlaGlsaXRlIC5pbCwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuaWwge1xuICBjb2xvcjogI0U3NEMzQzsgfVxuXG4uY29kZWhpbGl0ZSAubW8sIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLm1vIHtcbiAgY29sb3I6ICNFNzRDM0M7IH1cblxuLmNvZGVoaWxpdGUgLnMsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLnMge1xuICBjb2xvcjogIzBEOTA0RjsgfVxuXG4uY29kZWhpbGl0ZSAuc2IsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLnNiIHtcbiAgY29sb3I6ICMwRDkwNEY7IH1cblxuLmNvZGVoaWxpdGUgLnNjLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5zYyB7XG4gIGNvbG9yOiAjMEQ5MDRGOyB9XG5cbi5jb2RlaGlsaXRlIC5zZCwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuc2Qge1xuICBjb2xvcjogIzk5OTk5OTsgfVxuXG4uY29kZWhpbGl0ZSAuczIsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLnMyIHtcbiAgY29sb3I6ICMwRDkwNEY7IH1cblxuLmNvZGVoaWxpdGUgLnNlLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5zZSB7XG4gIGNvbG9yOiAjMTgzNjkxOyB9XG5cbi5jb2RlaGlsaXRlIC5zaCwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuc2gge1xuICBjb2xvcjogIzE4MzY5MTsgfVxuXG4uY29kZWhpbGl0ZSAuc2ksIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLnNpIHtcbiAgY29sb3I6ICMxODM2OTE7IH1cblxuLmNvZGVoaWxpdGUgLnN4LCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5zeCB7XG4gIGNvbG9yOiAjMTgzNjkxOyB9XG5cbi5jb2RlaGlsaXRlIC5zciwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuc3Ige1xuICBjb2xvcjogIzAwOTkyNjsgfVxuXG4uY29kZWhpbGl0ZSAuczEsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLnMxIHtcbiAgY29sb3I6ICMwRDkwNEY7IH1cblxuLmNvZGVoaWxpdGUgLnNzLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC5zcyB7XG4gIGNvbG9yOiAjMEQ5MDRGOyB9XG5cbi5jb2RlaGlsaXRlIC5lcnIsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmVyciB7XG4gIGNvbG9yOiAjQTYxNzE3OyB9XG5cbi5jb2RlaGlsaXRlIC53LCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IC53IHtcbiAgY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi5jb2RlaGlsaXRlIC5obGwsIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgLmhsbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgLTAuNnJlbTtcbiAgcGFkZGluZzogMCAwLjZyZW07XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyMzUsIDU5LCAwLjUpOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDQuOTM3NWVtKSB7XG4gICAgLmNvZGVoaWxpdGUgLmhsbCwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCAuaGxsIHtcbiAgICAgIG1hcmdpbjogMCAtMC44cmVtO1xuICAgICAgcGFkZGluZzogMCAwLjhyZW07IH0gfVxuXG4ubWQtdHlwZXNldCAuY29kZWhpbGl0ZSwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAxZW0gMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyLXJhZGl1czogMC4xcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIzNiwgMjM2LCAyMzYsIDAuNSk7XG4gIGNvbG9yOiAjMzc0NzRGO1xuICBsaW5lLWhlaWdodDogMS40O1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7IH1cbiAgLm1kLXR5cGVzZXQgLmNvZGVoaWxpdGUgcHJlLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IHByZSxcbiAgLm1kLXR5cGVzZXQgLmNvZGVoaWxpdGUgY29kZSxcbiAgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCBjb2RlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMC41MjVyZW0gMC42cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgICAubWQtdHlwZXNldCAuY29kZWhpbGl0ZSBwcmU6Oi13ZWJraXQtc2Nyb2xsYmFyLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IHByZTo6LXdlYmtpdC1zY3JvbGxiYXIsXG4gICAgLm1kLXR5cGVzZXQgLmNvZGVoaWxpdGUgY29kZTo6LXdlYmtpdC1zY3JvbGxiYXIsXG4gICAgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCBjb2RlOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgICB3aWR0aDogMC4ycmVtO1xuICAgICAgaGVpZ2h0OiAwLjJyZW07IH1cbiAgICAubWQtdHlwZXNldCAuY29kZWhpbGl0ZSBwcmU6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IHByZTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIsXG4gICAgLm1kLXR5cGVzZXQgLmNvZGVoaWxpdGUgY29kZTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIsXG4gICAgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodCBjb2RlOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMjYpOyB9XG4gICAgICAubWQtdHlwZXNldCAuY29kZWhpbGl0ZSBwcmU6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0IHByZTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIsXG4gICAgICAubWQtdHlwZXNldCAuY29kZWhpbGl0ZSBjb2RlOjotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlcixcbiAgICAgIC5tZC10eXBlc2V0IC5oaWdobGlnaHQgY29kZTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODJiMWZmOyB9XG5cbi5tZC10eXBlc2V0IHByZS5jb2RlaGlsaXRlLCAubWQtdHlwZXNldCBwcmUuaGlnaGxpZ2h0IHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cbiAgLm1kLXR5cGVzZXQgcHJlLmNvZGVoaWxpdGUgY29kZSwgLm1kLXR5cGVzZXQgcHJlLmhpZ2hsaWdodCBjb2RlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAwLjUyNXJlbSAwLjZyZW07XG4gICAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLm1kLXR5cGVzZXQgLmNvZGVoaWxpdGV0YWJsZSwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodHRhYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMWVtIDA7XG4gIGJvcmRlci1yYWRpdXM6IDAuMmVtO1xuICBmb250LXNpemU6IDAuOHJlbTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAubWQtdHlwZXNldCAuY29kZWhpbGl0ZXRhYmxlIHRib2R5LCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0dGFibGUgdGJvZHksXG4gIC5tZC10eXBlc2V0IC5jb2RlaGlsaXRldGFibGUgdGQsXG4gIC5tZC10eXBlc2V0IC5oaWdobGlnaHR0YWJsZSB0ZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogMDsgfVxuICAubWQtdHlwZXNldCAuY29kZWhpbGl0ZXRhYmxlIHRyLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0dGFibGUgdHIge1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgLm1kLXR5cGVzZXQgLmNvZGVoaWxpdGV0YWJsZSAuY29kZWhpbGl0ZSwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodHRhYmxlIC5jb2RlaGlsaXRlLCAubWQtdHlwZXNldCAuY29kZWhpbGl0ZXRhYmxlIC5oaWdobGlnaHQsIC5tZC10eXBlc2V0IC5oaWdobGlnaHR0YWJsZSAuaGlnaGxpZ2h0LFxuICAubWQtdHlwZXNldCAuY29kZWhpbGl0ZXRhYmxlIC5saW5lbm9kaXYsXG4gIC5tZC10eXBlc2V0IC5oaWdobGlnaHR0YWJsZSAubGluZW5vZGl2IHtcbiAgICBtYXJnaW46IDA7XG4gICAgYm9yZGVyLXJhZGl1czogMDsgfVxuICBcbiAgLm1kLXR5cGVzZXQgLmNvZGVoaWxpdGV0YWJsZSAubGluZW5vZGl2LFxuICAubWQtdHlwZXNldCAuaGlnaGxpZ2h0dGFibGUgLmxpbmVub2RpdiB7XG4gICAgcGFkZGluZzogMC41MjVyZW0gMC42cmVtOyB9XG4gIC5tZC10eXBlc2V0IC5jb2RlaGlsaXRldGFibGUgLmxpbmVub3MsIC5tZC10eXBlc2V0IC5oaWdobGlnaHR0YWJsZSAubGluZW5vcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA3KTtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTsgfVxuICAgIC5tZC10eXBlc2V0IC5jb2RlaGlsaXRldGFibGUgLmxpbmVub3MgcHJlLCAubWQtdHlwZXNldCAuaGlnaGxpZ2h0dGFibGUgLmxpbmVub3MgcHJlIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgLm1kLXR5cGVzZXQgLmNvZGVoaWxpdGV0YWJsZSAuY29kZSwgLm1kLXR5cGVzZXQgLmhpZ2hsaWdodHRhYmxlIC5jb2RlIHtcbiAgICBmbGV4OiAxO1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NC45Mzc1ZW0pIHtcbiAgLm1kLXR5cGVzZXQgPiAuY29kZWhpbGl0ZSwgLm1kLXR5cGVzZXQgPiAuaGlnaGxpZ2h0IHtcbiAgICBtYXJnaW46IDFlbSAtMC44cmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7IH1cbiAgICAubWQtdHlwZXNldCA+IC5jb2RlaGlsaXRlIHByZSwgLm1kLXR5cGVzZXQgPiAuaGlnaGxpZ2h0IHByZSxcbiAgICAubWQtdHlwZXNldCA+IC5jb2RlaGlsaXRlIGNvZGUsXG4gICAgLm1kLXR5cGVzZXQgPiAuaGlnaGxpZ2h0IGNvZGUge1xuICAgICAgcGFkZGluZzogMC41MjVyZW0gMC44cmVtOyB9IH1cblxuLm1kLXR5cGVzZXQgPiAuY29kZWhpbGl0ZXRhYmxlLCAubWQtdHlwZXNldCA+IC5oaWdobGlnaHR0YWJsZSB7XG4gIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NC45Mzc1ZW0pIHtcbiAgICAubWQtdHlwZXNldCA+IC5jb2RlaGlsaXRldGFibGUsIC5tZC10eXBlc2V0ID4gLmhpZ2hsaWdodHRhYmxlIHtcbiAgICAgIG1hcmdpbjogMWVtIC0wLjhyZW07XG4gICAgICBib3JkZXItcmFkaXVzOiAwOyB9XG4gICAgICAubWQtdHlwZXNldCA+IC5jb2RlaGlsaXRldGFibGUgLmNvZGVoaWxpdGUgPiBwcmUsIC5tZC10eXBlc2V0ID4gLmhpZ2hsaWdodHRhYmxlIC5jb2RlaGlsaXRlID4gcHJlLCAubWQtdHlwZXNldCA+IC5jb2RlaGlsaXRldGFibGUgLmhpZ2hsaWdodCA+IHByZSwgLm1kLXR5cGVzZXQgPiAuaGlnaGxpZ2h0dGFibGUgLmhpZ2hsaWdodCA+IHByZSxcbiAgICAgIC5tZC10eXBlc2V0ID4gLmNvZGVoaWxpdGV0YWJsZSAuY29kZWhpbGl0ZSA+IGNvZGUsXG4gICAgICAubWQtdHlwZXNldCA+IC5oaWdobGlnaHR0YWJsZSAuY29kZWhpbGl0ZSA+IGNvZGUsXG4gICAgICAubWQtdHlwZXNldCA+IC5jb2RlaGlsaXRldGFibGUgLmhpZ2hsaWdodCA+IGNvZGUsXG4gICAgICAubWQtdHlwZXNldCA+IC5oaWdobGlnaHR0YWJsZSAuaGlnaGxpZ2h0ID4gY29kZSxcbiAgICAgIC5tZC10eXBlc2V0ID4gLmNvZGVoaWxpdGV0YWJsZSAubGluZW5vZGl2LFxuICAgICAgLm1kLXR5cGVzZXQgPiAuaGlnaGxpZ2h0dGFibGUgLmxpbmVub2RpdiB7XG4gICAgICAgIHBhZGRpbmc6IDAuNXJlbSAwLjhyZW07IH0gfVxuXG4ubWQtdHlwZXNldCBbaWRePVwiZm5yZWY6XCJdIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIC5tZC10eXBlc2V0IFtpZF49XCJmbnJlZjpcIl06dGFyZ2V0IHtcbiAgICBtYXJnaW4tdG9wOiAtMy44cmVtO1xuICAgIHBhZGRpbmctdG9wOiAzLjhyZW07XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cblxuLm1kLXR5cGVzZXQgW2lkXj1cImZuOlwiXTo6YmVmb3JlIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xuICBjb250ZW50OiBcIlwiOyB9XG5cbi5tZC10eXBlc2V0IFtpZF49XCJmbjpcIl06dGFyZ2V0OjpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogLTMuNXJlbTtcbiAgcGFkZGluZy10b3A6IDMuNXJlbTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cblxuLm1kLXR5cGVzZXQgLmZvb3Rub3RlIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gIGZvbnQtc2l6ZTogMC42NHJlbTsgfVxuICAubWQtdHlwZXNldCAuZm9vdG5vdGUgb2wge1xuICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gIC5tZC10eXBlc2V0IC5mb290bm90ZSBsaSB7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4yNXM7IH1cbiAgICAubWQtdHlwZXNldCAuZm9vdG5vdGUgbGk6dGFyZ2V0IHtcbiAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG4gICAgLm1kLXR5cGVzZXQgLmZvb3Rub3RlIGxpIDpmaXJzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tdG9wOiAwOyB9XG4gICAgLm1kLXR5cGVzZXQgLmZvb3Rub3RlIGxpOmhvdmVyIC5mb290bm90ZS1iYWNrcmVmLFxuICAgIC5tZC10eXBlc2V0IC5mb290bm90ZSBsaTp0YXJnZXQgLmZvb3Rub3RlLWJhY2tyZWYge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5tZC10eXBlc2V0IC5mb290bm90ZSBsaTpob3ZlciAuZm9vdG5vdGUtYmFja3JlZjpob3ZlcixcbiAgICAubWQtdHlwZXNldCAuZm9vdG5vdGUgbGk6dGFyZ2V0IC5mb290bm90ZS1iYWNrcmVmIHtcbiAgICAgIGNvbG9yOiAjODJiMWZmOyB9XG5cbi5tZC10eXBlc2V0IC5mb290bm90ZS1yZWYge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvaW50ZXItZXZlbnRzOiBpbml0aWFsOyB9XG4gIC5tZC10eXBlc2V0IC5mb290bm90ZS1yZWY6OmJlZm9yZSB7XG4gICAgZGlzcGxheTogaW5saW5lO1xuICAgIG1hcmdpbjogMCAwLjJlbTtcbiAgICBib3JkZXItbGVmdDogMC4wNXJlbSBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMjYpO1xuICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgdmVydGljYWwtYWxpZ246IC0wLjI1cmVtOyB9XG5cbi5tZC10eXBlc2V0IC5mb290bm90ZS1iYWNrcmVmIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMC4yNXJlbSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI1cyAgMC4xMjVzLCBjb2xvciAgICAgMC4yNXMsIG9wYWNpdHkgICAwLjEyNXMgMC4xMjVzO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTtcbiAgZm9udC1zaXplOiAwO1xuICBvcGFjaXR5OiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207IH1cbiAgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuZm9vdG5vdGUtYmFja3JlZiB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0wLjI1cmVtKTsgfVxuICAubWQtdHlwZXNldCAuZm9vdG5vdGUtYmFja3JlZjo6YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1zaXplOiAwLjhyZW07XG4gICAgY29udGVudDogXCJcXEUzMUJcIjsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgLmZvb3Rub3RlLWJhY2tyZWY6OmJlZm9yZSB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlWCgtMSk7IH1cblxuLm1kLXR5cGVzZXQgLmhlYWRlcmxpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiAwLjVyZW07XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDAuMjVyZW0pO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yNXMgIDAuMjVzLCBjb2xvciAgICAgMC4yNXMsIG9wYWNpdHkgICAwLjEyNXMgMC4yNXM7XG4gIG9wYWNpdHk6IDA7IH1cbiAgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAuaGVhZGVybGluayB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG4gICAgbWFyZ2luLWxlZnQ6IGluaXRpYWw7IH1cbiAgaHRtbCBib2R5IC5tZC10eXBlc2V0IC5oZWFkZXJsaW5rIHtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTsgfVxuICBAbWVkaWEgcHJpbnQge1xuICAgIC5tZC10eXBlc2V0IC5oZWFkZXJsaW5rIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4ubWQtdHlwZXNldCBoMVtpZF06OmJlZm9yZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiAtOXB4O1xuICBwYWRkaW5nLXRvcDogOXB4O1xuICBjb250ZW50OiBcIlwiOyB9XG5cbi5tZC10eXBlc2V0IGgxW2lkXTp0YXJnZXQ6OmJlZm9yZSB7XG4gIG1hcmdpbi10b3A6IC0zLjQ1cmVtO1xuICBwYWRkaW5nLXRvcDogMy40NXJlbTsgfVxuXG4ubWQtdHlwZXNldCBoMVtpZF06aG92ZXIgLmhlYWRlcmxpbmssXG4ubWQtdHlwZXNldCBoMVtpZF06dGFyZ2V0IC5oZWFkZXJsaW5rLFxuLm1kLXR5cGVzZXQgaDFbaWRdIC5oZWFkZXJsaW5rOmZvY3VzIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XG4gIG9wYWNpdHk6IDE7IH1cblxuLm1kLXR5cGVzZXQgaDFbaWRdOmhvdmVyIC5oZWFkZXJsaW5rOmhvdmVyLFxuLm1kLXR5cGVzZXQgaDFbaWRdOnRhcmdldCAuaGVhZGVybGluayxcbi5tZC10eXBlc2V0IGgxW2lkXSAuaGVhZGVybGluazpmb2N1cyB7XG4gIGNvbG9yOiAjODJiMWZmOyB9XG5cbi5tZC10eXBlc2V0IGgyW2lkXTo6YmVmb3JlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IC04cHg7XG4gIHBhZGRpbmctdG9wOiA4cHg7XG4gIGNvbnRlbnQ6IFwiXCI7IH1cblxuLm1kLXR5cGVzZXQgaDJbaWRdOnRhcmdldDo6YmVmb3JlIHtcbiAgbWFyZ2luLXRvcDogLTMuNHJlbTtcbiAgcGFkZGluZy10b3A6IDMuNHJlbTsgfVxuXG4ubWQtdHlwZXNldCBoMltpZF06aG92ZXIgLmhlYWRlcmxpbmssXG4ubWQtdHlwZXNldCBoMltpZF06dGFyZ2V0IC5oZWFkZXJsaW5rLFxuLm1kLXR5cGVzZXQgaDJbaWRdIC5oZWFkZXJsaW5rOmZvY3VzIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XG4gIG9wYWNpdHk6IDE7IH1cblxuLm1kLXR5cGVzZXQgaDJbaWRdOmhvdmVyIC5oZWFkZXJsaW5rOmhvdmVyLFxuLm1kLXR5cGVzZXQgaDJbaWRdOnRhcmdldCAuaGVhZGVybGluayxcbi5tZC10eXBlc2V0IGgyW2lkXSAuaGVhZGVybGluazpmb2N1cyB7XG4gIGNvbG9yOiAjODJiMWZmOyB9XG5cbi5tZC10eXBlc2V0IGgzW2lkXTo6YmVmb3JlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IC05cHg7XG4gIHBhZGRpbmctdG9wOiA5cHg7XG4gIGNvbnRlbnQ6IFwiXCI7IH1cblxuLm1kLXR5cGVzZXQgaDNbaWRdOnRhcmdldDo6YmVmb3JlIHtcbiAgbWFyZ2luLXRvcDogLTMuNDVyZW07XG4gIHBhZGRpbmctdG9wOiAzLjQ1cmVtOyB9XG5cbi5tZC10eXBlc2V0IGgzW2lkXTpob3ZlciAuaGVhZGVybGluayxcbi5tZC10eXBlc2V0IGgzW2lkXTp0YXJnZXQgLmhlYWRlcmxpbmssXG4ubWQtdHlwZXNldCBoM1tpZF0gLmhlYWRlcmxpbms6Zm9jdXMge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTtcbiAgb3BhY2l0eTogMTsgfVxuXG4ubWQtdHlwZXNldCBoM1tpZF06aG92ZXIgLmhlYWRlcmxpbms6aG92ZXIsXG4ubWQtdHlwZXNldCBoM1tpZF06dGFyZ2V0IC5oZWFkZXJsaW5rLFxuLm1kLXR5cGVzZXQgaDNbaWRdIC5oZWFkZXJsaW5rOmZvY3VzIHtcbiAgY29sb3I6ICM4MmIxZmY7IH1cblxuLm1kLXR5cGVzZXQgaDRbaWRdOjpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogLTlweDtcbiAgcGFkZGluZy10b3A6IDlweDtcbiAgY29udGVudDogXCJcIjsgfVxuXG4ubWQtdHlwZXNldCBoNFtpZF06dGFyZ2V0OjpiZWZvcmUge1xuICBtYXJnaW4tdG9wOiAtMy40NXJlbTtcbiAgcGFkZGluZy10b3A6IDMuNDVyZW07IH1cblxuLm1kLXR5cGVzZXQgaDRbaWRdOmhvdmVyIC5oZWFkZXJsaW5rLFxuLm1kLXR5cGVzZXQgaDRbaWRdOnRhcmdldCAuaGVhZGVybGluayxcbi5tZC10eXBlc2V0IGg0W2lkXSAuaGVhZGVybGluazpmb2N1cyB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xuICBvcGFjaXR5OiAxOyB9XG5cbi5tZC10eXBlc2V0IGg0W2lkXTpob3ZlciAuaGVhZGVybGluazpob3Zlcixcbi5tZC10eXBlc2V0IGg0W2lkXTp0YXJnZXQgLmhlYWRlcmxpbmssXG4ubWQtdHlwZXNldCBoNFtpZF0gLmhlYWRlcmxpbms6Zm9jdXMge1xuICBjb2xvcjogIzgyYjFmZjsgfVxuXG4ubWQtdHlwZXNldCBoNVtpZF06OmJlZm9yZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiAtMTFweDtcbiAgcGFkZGluZy10b3A6IDExcHg7XG4gIGNvbnRlbnQ6IFwiXCI7IH1cblxuLm1kLXR5cGVzZXQgaDVbaWRdOnRhcmdldDo6YmVmb3JlIHtcbiAgbWFyZ2luLXRvcDogLTMuNTVyZW07XG4gIHBhZGRpbmctdG9wOiAzLjU1cmVtOyB9XG5cbi5tZC10eXBlc2V0IGg1W2lkXTpob3ZlciAuaGVhZGVybGluayxcbi5tZC10eXBlc2V0IGg1W2lkXTp0YXJnZXQgLmhlYWRlcmxpbmssXG4ubWQtdHlwZXNldCBoNVtpZF0gLmhlYWRlcmxpbms6Zm9jdXMge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTtcbiAgb3BhY2l0eTogMTsgfVxuXG4ubWQtdHlwZXNldCBoNVtpZF06aG92ZXIgLmhlYWRlcmxpbms6aG92ZXIsXG4ubWQtdHlwZXNldCBoNVtpZF06dGFyZ2V0IC5oZWFkZXJsaW5rLFxuLm1kLXR5cGVzZXQgaDVbaWRdIC5oZWFkZXJsaW5rOmZvY3VzIHtcbiAgY29sb3I6ICM4MmIxZmY7IH1cblxuLm1kLXR5cGVzZXQgaDZbaWRdOjpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogLTExcHg7XG4gIHBhZGRpbmctdG9wOiAxMXB4O1xuICBjb250ZW50OiBcIlwiOyB9XG5cbi5tZC10eXBlc2V0IGg2W2lkXTp0YXJnZXQ6OmJlZm9yZSB7XG4gIG1hcmdpbi10b3A6IC0zLjU1cmVtO1xuICBwYWRkaW5nLXRvcDogMy41NXJlbTsgfVxuXG4ubWQtdHlwZXNldCBoNltpZF06aG92ZXIgLmhlYWRlcmxpbmssXG4ubWQtdHlwZXNldCBoNltpZF06dGFyZ2V0IC5oZWFkZXJsaW5rLFxuLm1kLXR5cGVzZXQgaDZbaWRdIC5oZWFkZXJsaW5rOmZvY3VzIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XG4gIG9wYWNpdHk6IDE7IH1cblxuLm1kLXR5cGVzZXQgaDZbaWRdOmhvdmVyIC5oZWFkZXJsaW5rOmhvdmVyLFxuLm1kLXR5cGVzZXQgaDZbaWRdOnRhcmdldCAuaGVhZGVybGluayxcbi5tZC10eXBlc2V0IGg2W2lkXSAuaGVhZGVybGluazpmb2N1cyB7XG4gIGNvbG9yOiAjODJiMWZmOyB9XG5cbi5tZC10eXBlc2V0IC5NSlhjLWRpc3BsYXkge1xuICBtYXJnaW46IDAuNzVlbSAwO1xuICBwYWRkaW5nOiAwLjc1ZW0gMDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ0LjkzNzVlbSkge1xuICAubWQtdHlwZXNldCA+IHAgPiAuTUpYYy1kaXNwbGF5IHtcbiAgICBtYXJnaW46IDAuNzVlbSAtMC44cmVtO1xuICAgIHBhZGRpbmc6IDAuMjVlbSAwLjhyZW07IH0gfVxuXG4ubWQtdHlwZXNldCAuTWF0aEpheF9DSFRNTCB7XG4gIG91dGxpbmU6IDA7IH1cblxuLm1kLXR5cGVzZXQgZGVsLmNyaXRpYyxcbi5tZC10eXBlc2V0IGlucy5jcml0aWMsXG4ubWQtdHlwZXNldCAuY3JpdGljLmNvbW1lbnQge1xuICBtYXJnaW46IDAgMC4yNWVtO1xuICBwYWRkaW5nOiAwLjA2MjVlbSAwO1xuICBib3JkZXItcmFkaXVzOiAwLjFyZW07XG4gIGJveC1kZWNvcmF0aW9uLWJyZWFrOiBjbG9uZTsgfVxuXG4ubWQtdHlwZXNldCBkZWwuY3JpdGljIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRERERDtcbiAgYm94LXNoYWRvdzogMC4yNWVtIDAgMCAjRkZERERELCAtMC4yNWVtIDAgMCAjRkZEREREOyB9XG5cbi5tZC10eXBlc2V0IGlucy5jcml0aWMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRERGRkREO1xuICBib3gtc2hhZG93OiAwLjI1ZW0gMCAwICNEREZGREQsIC0wLjI1ZW0gMCAwICNEREZGREQ7IH1cblxuLm1kLXR5cGVzZXQgLmNyaXRpYy5jb21tZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMzYsIDIzNiwgMjM2LCAwLjUpO1xuICBjb2xvcjogIzM3NDc0RjtcbiAgYm94LXNoYWRvdzogMC4yNWVtIDAgMCByZ2JhKDIzNiwgMjM2LCAyMzYsIDAuNSksIC0wLjI1ZW0gMCAwIHJnYmEoMjM2LCAyMzYsIDIzNiwgMC41KTsgfVxuICAubWQtdHlwZXNldCAuY3JpdGljLmNvbW1lbnQ6OmJlZm9yZSB7XG4gICAgcGFkZGluZy1yaWdodDogMC4xMjVlbTtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTtcbiAgICBjb250ZW50OiBcIlxcRTBCN1wiO1xuICAgIHZlcnRpY2FsLWFsaWduOiAtMC4xMjVlbTsgfVxuXG4ubWQtdHlwZXNldCAuY3JpdGljLmJsb2NrIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMWVtIDA7XG4gIHBhZGRpbmctcmlnaHQ6IDAuOHJlbTtcbiAgcGFkZGluZy1sZWZ0OiAwLjhyZW07XG4gIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgLm1kLXR5cGVzZXQgLmNyaXRpYy5ibG9jayA6Zmlyc3QtY2hpbGQge1xuICAgIG1hcmdpbi10b3A6IDAuNWVtOyB9XG4gIC5tZC10eXBlc2V0IC5jcml0aWMuYmxvY2sgOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtOyB9XG5cbi5tZC10eXBlc2V0IGRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy10b3A6IDA7IH1cbiAgLm1kLXR5cGVzZXQgZGV0YWlsc1tvcGVuXSA+IHN1bW1hcnk6OmFmdGVyIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyB9XG4gIC5tZC10eXBlc2V0IGRldGFpbHM6bm90KFtvcGVuXSkge1xuICAgIHBhZGRpbmctYm90dG9tOiAwOyB9XG4gICAgLm1kLXR5cGVzZXQgZGV0YWlsczpub3QoW29wZW5dKSA+IHN1bW1hcnkge1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTsgfVxuICAubWQtdHlwZXNldCBkZXRhaWxzIHN1bW1hcnkge1xuICAgIHBhZGRpbmctcmlnaHQ6IDJyZW07IH1cbiAgICBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IGRldGFpbHMgc3VtbWFyeSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDJyZW07IH1cbiAgLm5vLWRldGFpbHMgLm1kLXR5cGVzZXQgZGV0YWlsczpub3QoW29wZW5dKSA+ICoge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLm5vLWRldGFpbHMgLm1kLXR5cGVzZXQgZGV0YWlsczpub3QoW29wZW5dKSBzdW1tYXJ5IHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4ubWQtdHlwZXNldCBzdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuICAubWQtdHlwZXNldCBzdW1tYXJ5Ojotd2Via2l0LWRldGFpbHMtbWFya2VyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5tZC10eXBlc2V0IHN1bW1hcnk6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwLjRyZW07XG4gICAgcmlnaHQ6IDAuNnJlbTtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgY29udGVudDogXCJcXEUzMTNcIjsgfVxuICAgIFtkaXI9XCJydGxcIl0gLm1kLXR5cGVzZXQgc3VtbWFyeTo6YWZ0ZXIge1xuICAgICAgcmlnaHQ6IGluaXRpYWw7XG4gICAgICBsZWZ0OiAwLjZyZW07IH1cblxuLm1kLXR5cGVzZXQgLmVtb2ppb25lIHtcbiAgd2lkdGg6IDFyZW07XG4gIHZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDsgfVxuXG4ubWQtdHlwZXNldCBjb2RlLmNvZGVoaWxpdGUsIC5tZC10eXBlc2V0IGNvZGUuaGlnaGxpZ2h0IHtcbiAgbWFyZ2luOiAwIDAuMjk0MTJlbTtcbiAgcGFkZGluZzogMC4wNzM1M2VtIDA7IH1cblxuLm1kLXR5cGVzZXQgLnN1cGVyZmVuY2VzLWNvbnRlbnQge1xuICBkaXNwbGF5OiBub25lO1xuICBvcmRlcjogOTk7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuICAubWQtdHlwZXNldCAuc3VwZXJmZW5jZXMtY29udGVudCA+ICoge1xuICAgIG1hcmdpbjogMDtcbiAgICBib3JkZXItcmFkaXVzOiAwOyB9XG5cbi5tZC10eXBlc2V0IC5zdXBlcmZlbmNlcy10YWJzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbjogMWVtIDA7XG4gIGJvcmRlcjogMC4wNXJlbSBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDcpO1xuICBib3JkZXItcmFkaXVzOiAwLjJlbTsgfVxuICAubWQtdHlwZXNldCAuc3VwZXJmZW5jZXMtdGFicyA+IGlucHV0IHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLm1kLXR5cGVzZXQgLnN1cGVyZmVuY2VzLXRhYnMgPiBpbnB1dDpjaGVja2VkICsgbGFiZWwge1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuICAgICAgLm1kLXR5cGVzZXQgLnN1cGVyZmVuY2VzLXRhYnMgPiBpbnB1dDpjaGVja2VkICsgbGFiZWwgKyAuc3VwZXJmZW5jZXMtY29udGVudCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5tZC10eXBlc2V0IC5zdXBlcmZlbmNlcy10YWJzID4gbGFiZWwge1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmc6IDAuNnJlbTtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjEyNXM7XG4gICAgZm9udC1zaXplOiAwLjY0cmVtO1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIGh0bWwgLm1kLXR5cGVzZXQgLnN1cGVyZmVuY2VzLXRhYnMgPiBsYWJlbDpob3ZlciB7XG4gICAgICBjb2xvcjogIzgyYjFmZjsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ0LjkzNzVlbSkge1xuICAubWQtdHlwZXNldCA+IC5zdXBlcmZlbmNlcy10YWJzIHtcbiAgICBtYXJnaW46IDFlbSAtMC44cmVtO1xuICAgIGJvcmRlcjogMDtcbiAgICBib3JkZXItdG9wOiAwLjA1cmVtIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNyk7XG4gICAgYm9yZGVyLXJhZGl1czogMDsgfVxuICAgIC5tZC10eXBlc2V0ID4gLnN1cGVyZmVuY2VzLXRhYnMgcHJlLFxuICAgIC5tZC10eXBlc2V0ID4gLnN1cGVyZmVuY2VzLXRhYnMgY29kZSB7XG4gICAgICBwYWRkaW5nOiAwLjUyNXJlbSAwLjhyZW07IH0gfVxuXG4ubWQtdHlwZXNldCAudGFzay1saXN0LWl0ZW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgfVxuICAubWQtdHlwZXNldCAudGFzay1saXN0LWl0ZW0gW3R5cGU9XCJjaGVja2JveFwiXSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMC40NWVtO1xuICAgIGxlZnQ6IC0yZW07IH1cbiAgICBbZGlyPVwicnRsXCJdIC5tZC10eXBlc2V0IC50YXNrLWxpc3QtaXRlbSBbdHlwZT1cImNoZWNrYm94XCJdIHtcbiAgICAgIHJpZ2h0OiAtMmVtO1xuICAgICAgbGVmdDogaW5pdGlhbDsgfVxuXG4ubWQtdHlwZXNldCAudGFzay1saXN0LWNvbnRyb2wgLnRhc2stbGlzdC1pbmRpY2F0b3I6OmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwLjE1ZW07XG4gIGxlZnQ6IC0xLjI1ZW07XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMjYpO1xuICBmb250LXNpemU6IDEuMjVlbTtcbiAgY29udGVudDogXCJcXEU4MzVcIjtcbiAgdmVydGljYWwtYWxpZ246IC0wLjI1ZW07IH1cbiAgW2Rpcj1cInJ0bFwiXSAubWQtdHlwZXNldCAudGFzay1saXN0LWNvbnRyb2wgLnRhc2stbGlzdC1pbmRpY2F0b3I6OmJlZm9yZSB7XG4gICAgcmlnaHQ6IC0xLjI1ZW07XG4gICAgbGVmdDogaW5pdGlhbDsgfVxuXG4ubWQtdHlwZXNldCAudGFzay1saXN0LWNvbnRyb2wgW3R5cGU9XCJjaGVja2JveFwiXTpjaGVja2VkICsgLnRhc2stbGlzdC1pbmRpY2F0b3I6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxFODM0XCI7IH1cblxuLm1kLXR5cGVzZXQgLnRhc2stbGlzdC1jb250cm9sIFt0eXBlPVwiY2hlY2tib3hcIl0ge1xuICBvcGFjaXR5OiAwO1xuICB6LWluZGV4OiAtMTsgfVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzOiBmb250IGRlZmluaXRpb25zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEVuYWJsZSBmb250LXNtb290aGluZyBpbiBXZWJraXQgYW5kIEZGXG5ib2R5IHtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG59XG5cbi8vIERlZmF1bHQgZm9udHNcbmJvZHksXG5pbnB1dCB7XG4gIGNvbG9yOiAkbWQtY29sb3ItYmxhY2s7XG4gIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJrZXJuXCIsIFwibGlnYVwiO1xuICBmb250LWZhbWlseTogXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xufVxuXG4vLyBQcm9wb3J0aW9uYWxseSBzcGFjZWQgZm9udHNcbnByZSxcbmNvZGUsXG5rYmQge1xuICBjb2xvcjogJG1kLWNvbG9yLWJsYWNrO1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiO1xuICBmb250LWZhbWlseTogXCJDb3VyaWVyIE5ld1wiLCBDb3VyaWVyLCBtb25vc3BhY2U7XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzOiB0eXBlc2V0dGVkIGNvbnRlbnRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQ29udGVudCB0aGF0IGlzIHR5cGVzZXQgLSBpZiBwb3NzaWJsZSwgYWxsIG1hcmdpbnMsIHBhZGRpbmdzIGFuZCBmb250IHNpemVzXG4vLyBzaG91bGQgYmUgc2V0IGluIGVtcywgc28gbmVzdGVkIGJsb2NrcyAoZS5nLiBBZG1vbml0aW9uKSByZW5kZXIgY29ycmVjdGx5LFxuLy8gZXhjZXB0IGhlYWRsaW5lcyB0aGF0IHNob3VsZCBvbmx5IGFwcGVhciBvbiB0aGUgdG9wIGxldmVsIGFuZCBuZWVkIHRvIGhhdmVcbi8vIGNvbnNpc3RlbnQgc3BhY2luZyBkdWUgdG8gbGF5b3V0IGNvbnN0cmFpbnRzLlxuLm1kLXR5cGVzZXQge1xuICBmb250LXNpemU6IG1zKDApO1xuICBsaW5lLWhlaWdodDogMS42O1xuXG4gIC8vIENvbG9ycyBzaG91bGQgYmUga2VwdCB3aGVuIHByaW50aW5nXG4gIC13ZWJraXQtcHJpbnQtY29sb3ItYWRqdXN0OiBleGFjdDtcblxuICAvLyBEZWZhdWx0IHNwYWNpbmdcbiAgcCxcbiAgdWwsXG4gIG9sLFxuICBibG9ja3F1b3RlIHtcbiAgICBtYXJnaW46IDFlbSAwO1xuICB9XG5cbiAgLy8gMXN0IGxldmVsIGhlYWRsaW5lXG4gIGgxIHtcbiAgICBtYXJnaW46IDAgMCBweDJyZW0oNDBweCk7XG4gICAgY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHQ7XG4gICAgZm9udC1zaXplOiBtcygzKTtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAtMC4wMWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIH1cblxuICAvLyAybmQgbGV2ZWwgaGVhZGxpbmVcbiAgaDIge1xuICAgIG1hcmdpbjogcHgycmVtKDQwcHgpIDAgcHgycmVtKDE2cHgpO1xuICAgIGZvbnQtc2l6ZTogbXMoMik7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcbiAgICBsaW5lLWhlaWdodDogMS40O1xuICB9XG5cbiAgLy8gM3JkIGxldmVsIGhlYWRsaW5lXG4gIGgzIHtcbiAgICBtYXJnaW46IHB4MnJlbSgzMnB4KSAwIHB4MnJlbSgxNnB4KTtcbiAgICBmb250LXNpemU6IG1zKDEpO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgfVxuXG4gIC8vIDNyZCBsZXZlbCBoZWFkbGluZSBmb2xsb3dpbmcgYW4gMm5kIGxldmVsIGhlYWRsaW5lXG4gIGgyICsgaDMge1xuICAgIG1hcmdpbi10b3A6IHB4MnJlbSgxNnB4KTtcbiAgfVxuXG4gIC8vIDR0aCBsZXZlbCBoZWFkbGluZVxuICBoNCB7XG4gICAgbWFyZ2luOiBweDJyZW0oMTZweCkgMDtcbiAgICBmb250LXNpemU6IG1zKDApO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07XG4gIH1cblxuICAvLyA1dGggYW5kIDZ0aCBsZXZlbCBoZWFkbGluZVxuICBoNSxcbiAgaDYge1xuICAgIG1hcmdpbjogcHgycmVtKDE2cHgpIDA7XG4gICAgY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHQ7XG4gICAgZm9udC1zaXplOiBtcygtMSk7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcbiAgfVxuXG4gIC8vIE92ZXJyaWRlcyBmb3IgNXRoIGxldmVsIGhlYWRsaW5lXG4gIGg1IHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG5cbiAgLy8gSG9yaXpvbnRhbCBzZXBhcmF0b3JzXG4gIGhyIHtcbiAgICBtYXJnaW46IDEuNWVtIDA7XG4gICAgYm9yZGVyLWJvdHRvbTogcHgycmVtKDFweCkgZG90dGVkICRtZC1jb2xvci1ibGFjay0tbGlnaHRlcjtcbiAgfVxuXG4gIC8vIExpbmtzXG4gIGEge1xuICAgIGNvbG9yOiAkbWQtY29sb3ItcHJpbWFyeTtcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuXG4gICAgLy8gQWxzbyBlbmFibGUgY29sb3IgdHJhbnNpdGlvbiBvbiBwc2V1ZG8gZWxlbWVudHNcbiAgICAmLFxuICAgICY6OmJlZm9yZSB7XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjEyNXM7XG4gICAgfVxuXG4gICAgLy8gSG92ZXJlZCBhbmQgYWN0aXZlIGxpbmtzXG4gICAgJjpob3ZlcixcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBjb2xvcjogJG1kLWNvbG9yLWFjY2VudDtcbiAgICB9XG5cbiAgICAvLyBBZGQgVVJMcyBmb3IgcHJpbnRcbiAgICBAbWVkaWEgcHJpbnQge1xuXG4gICAgICAvLyBTaG93IGxpbmsgVVJMXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbG9yOiAkbWQtY29sb3ItYmxhY2stLWxpZ2h0O1xuICAgICAgICBjb250ZW50OiBcIiBbXCIgYXR0cihocmVmKSBcIl1cIjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBDb2RlIGJsb2Nrc1xuICBjb2RlLFxuICBwcmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2RlLWJhY2tncm91bmQ7XG4gICAgY29sb3I6ICRtZC1jb2RlLWNvbG9yO1xuICAgIGZvbnQtc2l6ZTogODUlO1xuICAgIGRpcmVjdGlvbjogbHRyO1xuXG4gICAgLy8gV3JhcCB0ZXh0IGFuZCBoaWRlIHNjb2xsYmFyc1xuICAgIEBtZWRpYSBwcmludCB7XG4gICAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gICAgfVxuICB9XG5cbiAgLy8gSW5saW5lIGNvZGUgYmxvY2tzLCBjb3JyZWN0IHJlbGF0aXZlIGVtcyBmb3Igc21hbGxlciBmb250IHNpemVcbiAgY29kZSB7XG4gICAgJGNvcnJlY3Q6IDEgLyAwLjg1O1xuXG4gICAgbWFyZ2luOiAwIDAuMjVlbSAqICRjb3JyZWN0O1xuICAgIHBhZGRpbmc6IDAuMDYyNWVtICogJGNvcnJlY3QgMDtcbiAgICBib3JkZXItcmFkaXVzOiBweDJyZW0oMnB4KTtcbiAgICBib3gtc2hhZG93OlxuICAgICAgKzAuMjVlbSAqICRjb3JyZWN0IDAgMCAkbWQtY29kZS1iYWNrZ3JvdW5kLFxuICAgICAgLTAuMjVlbSAqICRjb3JyZWN0IDAgMCAkbWQtY29kZS1iYWNrZ3JvdW5kO1xuICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gICAgYm94LWRlY29yYXRpb24tYnJlYWs6IGNsb25lO1xuXG4gICAgLy8gUmVtb3ZlIGJveC1zaGFkb3dzIGZvciBwcmludFxuICAgIEBtZWRpYSBwcmludCB7XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgYm94LWRlY29yYXRpb24tYnJlYWs6IGluaXRpYWw7XG4gICAgfVxuICB9XG5cbiAgLy8gRGlzYWJsZSBjb250YWluaW5nIGJsb2NrIGluc2lkZSBoZWFkbGluZXNcbiAgaDEgY29kZSxcbiAgaDIgY29kZSxcbiAgaDMgY29kZSxcbiAgaDQgY29kZSxcbiAgaDUgY29kZSxcbiAgaDYgY29kZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gIH1cblxuICAvLyBSZXNldCBjb2RlIGlmIGl0J3MgaW5zaWRlIGEgbGlua1xuICBhID4gY29kZSB7XG4gICAgbWFyZ2luOiBpbmhlcml0O1xuICAgIHBhZGRpbmc6IGluaGVyaXQ7XG4gICAgYm9yZGVyLXJhZGl1czogaW5pdGlhbDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gIH1cblxuICAvLyBVbmZvcm1hdHRlZCBjb2RlIGJsb2Nrc1xuICBwcmUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW46IDFlbSAwO1xuICAgIGJvcmRlci1yYWRpdXM6IHB4MnJlbSgycHgpO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuXG4gICAgLy8gW21vYmlsZSAtXTogU3RyZXRjaCB0byB3aG9sZSB3aWR0aFxuICAgIEBpbmNsdWRlIGJyZWFrLXRvLWRldmljZShtb2JpbGUpIHtcbiAgICAgIG1hcmdpbjogMWVtIHB4MnJlbSgtMTZweCk7XG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIH1cblxuICAgIC8vIEFjdHVhbCBjb250YWluZXIgd2l0aCBjb2RlLCBvdmVyZmxvd2luZ1xuICAgID4gY29kZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IHB4MnJlbSgxMC41cHgpIHB4MnJlbSgxMnB4KTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgIGJveC1kZWNvcmF0aW9uLWJyZWFrOiBzbGljZTtcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xuXG4gICAgICAvLyBbbW9iaWxlIC1dOiBJbmNyZWFzZSBwYWRkaW5nIHRvIG1hdGNoIHRleHRcbiAgICAgIEBpbmNsdWRlIGJyZWFrLXRvLWRldmljZShtb2JpbGUpIHtcbiAgICAgICAgcGFkZGluZzogcHgycmVtKDEwLjVweCkgcHgycmVtKDE2cHgpO1xuICAgICAgfVxuXG4gICAgICAvLyBPdmVycmlkZSBuYXRpdmUgc2Nyb2xsYmFyIHN0eWxlc1xuICAgICAgJjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgICAgICB3aWR0aDogcHgycmVtKDRweCk7XG4gICAgICAgIGhlaWdodDogcHgycmVtKDRweCk7XG4gICAgICB9XG5cbiAgICAgIC8vIFN0eWxlIHNjcm9sbGJhciB0aHVtYlxuICAgICAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXI7XG5cbiAgICAgICAgLy8gSG92ZXJlZCBzY3JvbGxiYXIgdGh1bWJcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLWFjY2VudDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEtleXN0cm9rZXNcbiAga2JkIHtcbiAgICAkY29ycmVjdDogMSAvIDAuODU7XG5cbiAgICBwYWRkaW5nOiAwIDAuMjVlbSAqICRjb3JyZWN0O1xuICAgIGJvcmRlcjogcHgycmVtKDFweCkgc29saWQgZGFya2VuKCRtZC1rZXlib2FyZC1iYWNrZ3JvdW5kLCAyMCUpO1xuICAgIGJvcmRlci1yYWRpdXM6IHB4MnJlbSgzcHgpO1xuICAgIGJvcmRlci1ib3R0b20tY29sb3I6IGRhcmtlbigkbWQta2V5Ym9hcmQtYmFja2dyb3VuZCwgMjUlKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQta2V5Ym9hcmQtYmFja2dyb3VuZDtcbiAgICBjb2xvcjogJG1kLWtleWJvYXJkLWNvbG9yO1xuICAgIGZvbnQtc2l6ZTogODUlO1xuICAgIGJveC1zaGFkb3c6IDAgcHgycmVtKDFweCkgMCBkYXJrZW4oJG1kLWtleWJvYXJkLWJhY2tncm91bmQsIDMwJSk7XG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgfVxuXG4gIC8vIFRleHQgaGlnaGxpZ2h0aW5nIG1hcmtlclxuICBtYXJrIHtcbiAgICBtYXJnaW46IDAgMC4yNWVtO1xuICAgIHBhZGRpbmc6IDAuMDYyNWVtIDA7XG4gICAgYm9yZGVyLXJhZGl1czogcHgycmVtKDJweCk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnRpemUoJGNsci15ZWxsb3ctNTAwLCAwLjUpO1xuICAgIGJveC1zaGFkb3c6XG4gICAgICArMC4yNWVtIDAgMCB0cmFuc3BhcmVudGl6ZSgkY2xyLXllbGxvdy01MDAsIDAuNSksXG4gICAgICAtMC4yNWVtIDAgMCB0cmFuc3BhcmVudGl6ZSgkY2xyLXllbGxvdy01MDAsIDAuNSk7XG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICBib3gtZGVjb3JhdGlvbi1icmVhazogY2xvbmU7XG4gIH1cblxuICAvLyBBYmJyZXZpYXRpb25zXG4gIGFiYnIge1xuICAgIGJvcmRlci1ib3R0b206IHB4MnJlbSgxcHgpIGRvdHRlZCAkbWQtY29sb3ItYmxhY2stLWxpZ2h0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjdXJzb3I6IGhlbHA7XG4gIH1cblxuICAvLyBTbWFsbCB0ZXh0XG4gIHNtYWxsIHtcbiAgICBvcGFjaXR5OiAwLjc1O1xuICB9XG5cbiAgLy8gU3VwZXJzY3JpcHQgYW5kIHN1YnNjcmlwdFxuICBzdXAsXG4gIHN1YiB7XG4gICAgbWFyZ2luLWxlZnQ6IDAuMDYyNWVtICogMSAvIDAuODtcblxuICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuMDYyNWVtICogMSAvIDAuODtcbiAgICAgIG1hcmdpbi1sZWZ0OiBpbml0aWFsO1xuICAgIH1cbiAgfVxuXG4gIC8vIEJsb2NrcXVvdGVzLCBwb3NzaWJseSBuZXN0ZWRcbiAgYmxvY2txdW90ZSB7XG4gICAgcGFkZGluZy1sZWZ0OiBweDJyZW0oMTJweCk7XG4gICAgYm9yZGVyLWxlZnQ6IHB4MnJlbSg0cHgpIHNvbGlkICRtZC1jb2xvci1ibGFjay0tbGlnaHRlcjtcbiAgICBjb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodDtcblxuICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiBweDJyZW0oMTJweCk7XG4gICAgICBwYWRkaW5nLWxlZnQ6IGluaXRpYWw7XG4gICAgICBib3JkZXItcmlnaHQ6IHB4MnJlbSg0cHgpIHNvbGlkICRtZC1jb2xvci1ibGFjay0tbGlnaHRlcjtcbiAgICAgIGJvcmRlci1sZWZ0OiBpbml0aWFsO1xuICAgIH1cbiAgfVxuXG4gIC8vIFVub3JkZXJlZCBsaXN0c1xuICB1bCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBkaXNjO1xuICB9XG5cbiAgLy8gVW5vcmRlcmVkIGFuZCBvcmRlcmVkIGxpc3RzXG4gIHVsLFxuICBvbCB7XG4gICAgbWFyZ2luLWxlZnQ6IDAuNjI1ZW07XG4gICAgcGFkZGluZzogMDtcblxuICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuNjI1ZW07XG4gICAgICBtYXJnaW4tbGVmdDogaW5pdGlhbDtcbiAgICB9XG5cbiAgICAvLyBOZXN0ZWQgb3JkZXJlZCBsaXN0c1xuICAgIG9sIHtcbiAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbG93ZXItYWxwaGE7XG5cbiAgICAgIC8vIFRyaXBseSBuZXN0ZWQgb3JkZXJlZCBsaXN0XG4gICAgICBvbCB7XG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbG93ZXItcm9tYW47XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gTGlzdCBlbGVtZW50c1xuICAgIGxpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgICAgbWFyZ2luLWxlZnQ6IDEuMjVlbTtcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEuMjVlbTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGluaXRpYWw7XG4gICAgICB9XG5cbiAgICAgIC8vIERlY3JlYXNlIHZlcnRpY2FsIHNwYWNpbmdcbiAgICAgIHAsXG4gICAgICBibG9ja3F1b3RlIHtcbiAgICAgICAgbWFyZ2luOiAwLjVlbSAwO1xuICAgICAgfVxuXG4gICAgICAvLyBSZW1vdmUgbWFyZ2luIG9uIGxhc3QgZWxlbWVudFxuICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIH1cblxuICAgICAgLy8gTmVzdGVkIGxpc3RzXG4gICAgICB1bCxcbiAgICAgIG9sIHtcbiAgICAgICAgbWFyZ2luOiAwLjVlbSAwIDAuNWVtIDAuNjI1ZW07XG5cbiAgICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjYyNWVtO1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiBpbml0aWFsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gRGVmaW5pdGlvbiBsaXN0c1xuICBkZCB7XG4gICAgbWFyZ2luOiAxZW0gMCAxZW0gMS44NzVlbTtcblxuICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEuODc1ZW07XG4gICAgICBtYXJnaW4tbGVmdDogaW5pdGlhbDtcbiAgICB9XG4gIH1cblxuICAvLyBMaW1pdCB3aWR0aCB0byBjb250YWluZXJcbiAgaWZyYW1lLFxuICBpbWcsXG4gIHN2ZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLy8gRGF0YSB0YWJsZXNcbiAgdGFibGU6bm90KFtjbGFzc10pIHtcbiAgICBAaW5jbHVkZSB6LWRlcHRoKDIpO1xuXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBib3JkZXItcmFkaXVzOiBweDJyZW0oMnB4KTtcbiAgICBmb250LXNpemU6IG1zKC0xKTtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG5cbiAgICAvLyBEdWUgdG8gbWFyZ2luIGNvbGxhcHNlIGJlY2F1c2Ugb2YgdGhlIG5lY2Vzc2FyeSBpbmxpbmUtYmxvY2sgaGFjaywgd2VcbiAgICAvLyBjYW5ub3QgaW5jcmVhc2UgdGhlIGJvdHRvbSBtYXJnaW4gb24gdGhlIHRhYmxlLCBzbyB3ZSBqdXN0IGluY3JlYXNlIHRoZVxuICAgIC8vIHRvcCBtYXJnaW4gb24gdGhlIGZvbGxvd2luZyBlbGVtZW50XG4gICAgJiArICoge1xuICAgICAgbWFyZ2luLXRvcDogMS41ZW07XG4gICAgfVxuXG4gICAgLy8gVGFibGUgaGVhZGluZ3MgYW5kIGNlbGxzXG4gICAgdGg6bm90KFthbGlnbl0pLFxuICAgIHRkOm5vdChbYWxpZ25dKSB7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuXG4gICAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFRhYmxlIGhlYWRpbmdzXG4gICAgdGgge1xuICAgICAgbWluLXdpZHRoOiBweDJyZW0oMTAwcHgpO1xuICAgICAgcGFkZGluZzogcHgycmVtKDEycHgpIHB4MnJlbSgxNnB4KTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHQ7XG4gICAgICBjb2xvcjogJG1kLWNvbG9yLXdoaXRlO1xuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICB9XG5cbiAgICAvLyBUYWJsZSBjZWxsc1xuICAgIHRkIHtcbiAgICAgIHBhZGRpbmc6IHB4MnJlbSgxMnB4KSBweDJyZW0oMTZweCk7XG4gICAgICBib3JkZXItdG9wOiBweDJyZW0oMXB4KSBzb2xpZCAkbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXN0O1xuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICB9XG5cbiAgICAvLyBUYWJsZSByb3dzXG4gICAgdHIge1xuICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjEyNXM7XG5cbiAgICAgIC8vIEFkZCBiYWNrZ3JvdW5kIG9uIGhvdmVyXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjAzNSk7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgcHgycmVtKDFweCkgIDAgJG1kLWNvbG9yLXdoaXRlIGluc2V0O1xuICAgICAgfVxuXG4gICAgICAvLyBSZW1vdmUgdG9wIGJvcmRlciBvbiBmaXJzdCByb3dcbiAgICAgICY6Zmlyc3QtY2hpbGQgdGQge1xuICAgICAgICBib3JkZXItdG9wOiAwO1xuICAgICAgfVxuICAgIH1cblxuXG4gICAgLy8gRG8gbm90IHdyYXAgbGlua3MgaW4gdGFibGVzXG4gICAgYSB7XG4gICAgICB3b3JkLWJyZWFrOiBub3JtYWw7XG4gICAgfVxuICB9XG5cbiAgLy8gV3JhcHBlciBmb3Igc2Nyb2xsaW5nIG9uIG92ZXJmbG93XG4gICZfX3Njcm9sbHdyYXAge1xuICAgIG1hcmdpbjogMWVtIHB4MnJlbSgtMTZweCk7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIH1cblxuICAvLyBEYXRhIHRhYmxlIHdyYXBwZXIsIGluIGNhc2UgSmF2YVNjcmlwdCBpcyBhdmFpbGFibGVcbiAgLm1kLXR5cGVzZXRfX3RhYmxlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgcGFkZGluZzogMCBweDJyZW0oMTZweCk7XG5cbiAgICAvLyBEYXRhIHRhYmxlc1xuICAgIHRhYmxlIHtcbiAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgfVxufVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIHN0eWxlbGludC1kaXNhYmxlIHVuaXQtd2hpdGVsaXN0XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEhlbHBlcnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8vXG4vLy8gQ29udmVydCBmb250IHNpemUgaW4gcHggdG8gZW0uXG4vLy9cbi8vLyBAZ3JvdXAgIGhlbHBlcnNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSAge051bWJlcn0gJHNpemUgRm9udCBzaXplIGluIHB4XG4vLy8gQHBhcmFtICB7TnVtYmVyfSAkYmFzZSBCYXNlIGZvbnQgc2l6ZVxuLy8vIEByZXR1cm4ge051bWJlcn0gICAgICAgRm9udCBzaXplIGluIGVtXG4vLy9cbkBmdW5jdGlvbiBweDJlbSgkc2l6ZSwgJGJhc2U6IDE2cHgpIHtcbiAgQGlmIHVuaXQoJHNpemUpID09IHB4IHtcbiAgICBAaWYgdW5pdCgkYmFzZSkgPT0gcHgge1xuICAgICAgQHJldHVybiAoJHNpemUgLyAkYmFzZSkgKiAxZW07XG4gICAgfSBAZWxzZSB7XG4gICAgICBAZXJyb3IgXCJJbnZhbGlkIGJhc2U6ICN7JGJhc2V9IC0gdW5pdCBtdXN0IGJlICdweCdcIjtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBlcnJvciBcIkludmFsaWQgc2l6ZTogI3skc2l6ZX0gLSB1bml0IG11c3QgYmUgJ3B4J1wiO1xuICB9XG59XG5cbi8vL1xuLy8vIENvbnZlcnQgZm9udCBzaXplIGluIHB4IHRvIHJlbS5cbi8vL1xuLy8vIEBncm91cCAgaGVscGVyc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtICB7TnVtYmVyfSAkc2l6ZSBGb250IHNpemUgaW4gcHhcbi8vLyBAcGFyYW0gIHtOdW1iZXJ9ICRiYXNlIEJhc2UgZm9udCBzaXplXG4vLy8gQHJldHVybiB7TnVtYmVyfSAgICAgICBGb250IHNpemUgaW4gcmVtXG4vLy9cbkBmdW5jdGlvbiBweDJyZW0oJHNpemUsICRiYXNlOiAyMHB4KSB7XG4gIEBpZiB1bml0KCRzaXplKSA9PSBweCB7XG4gICAgQGlmIHVuaXQoJGJhc2UpID09IHB4IHtcbiAgICAgIEByZXR1cm4gKCRzaXplIC8gJGJhc2UpICogMS4wcmVtO1xuICAgIH0gQGVsc2Uge1xuICAgICAgQGVycm9yIFwiSW52YWxpZCBiYXNlOiAjeyRiYXNlfSAtIHVuaXQgbXVzdCBiZSAncHgnXCI7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAZXJyb3IgXCJJbnZhbGlkIHNpemU6ICN7JHNpemV9IC0gdW5pdCBtdXN0IGJlICdweCdcIjtcbiAgfVxufVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFZhcmlhYmxlczogdHlwb2dyYXBoeVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBNb2R1bGFyIHR5cG9ncmFwaGljIHNjYWxlXG4kbXMtYmFzZTogcHgycmVtKDE2cHgpO1xuJG1zLXJhdGlvOiAkbWFqb3ItdGhpcmQ7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFZhcmlhYmxlczogYnJlYWtwb2ludHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gc3R5bGVsaW50LWRpc2FibGUgdW5pdC13aGl0ZWxpc3RcblxuLy8gRGV2aWNlLXNwZWNpZmljIGJyZWFrcG9pbnRzXG4kYnJlYWstZGV2aWNlczogKFxuICBtb2JpbGU6IChcbiAgICBwb3J0cmFpdDogIHB4MmVtKDIyMHB4KSAgcHgyZW0oNDc5cHgpLFxuICAgIGxhbmRzY2FwZTogcHgyZW0oNDgwcHgpICBweDJlbSg3MTlweClcbiAgKSxcbiAgdGFibGV0OiAoXG4gICAgcG9ydHJhaXQ6ICBweDJlbSg3MjBweCkgIHB4MmVtKDk1OXB4KSxcbiAgICBsYW5kc2NhcGU6IHB4MmVtKDk2MHB4KSAgcHgyZW0oMTIxOXB4KVxuICApLFxuICBzY3JlZW46IChcbiAgICBzbWFsbDogICAgIHB4MmVtKDEyMjBweCkgcHgyZW0oMTU5OXB4KSxcbiAgICBtZWRpdW06ICAgIHB4MmVtKDE2MDBweCkgcHgyZW0oMTk5OXB4KSxcbiAgICBsYXJnZTogICAgIHB4MmVtKDIwMDBweClcbiAgKVxuKTtcblxuLy8gc3R5bGVsaW50LWVuYWJsZSB1bml0LXdoaXRlbGlzdFxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBWYXJpYWJsZXM6IGJhc2UgY29sb3JzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFByaW1hcnkgYW5kIGFjY2VudCBjb2xvcnNcbiRtZC1jb2xvci1wcmltYXJ5OiAgICAgICAgICAgICAgICAgICAgJGNsci1ibHVlLTkwMCAhZGVmYXVsdDtcbiRtZC1jb2xvci1hY2NlbnQ6ICAgICAgICAgICAgICAgICAgICAgJGNsci1ibHVlLWExMDAgIWRlZmF1bHQ7XG5cblxuLy8gU2hhZGVzIG9mIGJsYWNrXG4kbWQtY29sb3ItYmxhY2s6ICAgICAgICAgICAgICAgICAgICAgIGhzbGEoMCwgMCUsIDAlLCAwLjg3KSAhZGVmYXVsdDtcbiRtZC1jb2xvci1ibGFjay0tbGlnaHQ6ICAgICAgICAgICAgICAgaHNsYSgwLCAwJSwgMCUsIDAuNTQpICFkZWZhdWx0O1xuJG1kLWNvbG9yLWJsYWNrLS1saWdodGVyOiAgICAgICAgICAgICBoc2xhKDAsIDAlLCAwJSwgMC4yNikgIWRlZmF1bHQ7XG4kbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXN0OiAgICAgICAgICAgIGhzbGEoMCwgMCUsIDAlLCAwLjA3KSAhZGVmYXVsdDtcbiRtZC1jb2xvci1ibGFjay0tdHJhbnNwYXJlbnQ6ICAgICAgICAgaHNsYSgwLCAwJSwgMCUsIDApICFkZWZhdWx0O1xuXG4vLyBTaGFkZXMgb2Ygd2hpdGVcbiRtZC1jb2xvci13aGl0ZTogICAgICAgICAgICAgICAgICAgICAgaHNsYSgwLCAwJSwgMTAwJSwgMSkgIWRlZmF1bHQ7XG4kbWQtY29sb3Itd2hpdGUtLWxpZ2h0OiAgICAgICAgICAgICAgIGhzbGEoMCwgMCUsIDEwMCUsIDAuNykgIWRlZmF1bHQ7XG4kbWQtY29sb3Itd2hpdGUtLWxpZ2h0ZXI6ICAgICAgICAgICAgIGhzbGEoMCwgMCUsIDEwMCUsIDAuMykgIWRlZmF1bHQ7XG4kbWQtY29sb3Itd2hpdGUtLWxpZ2h0ZXN0OiAgICAgICAgICAgIGhzbGEoMCwgMCUsIDEwMCUsIDAuMTIpICFkZWZhdWx0O1xuJG1kLWNvbG9yLXdoaXRlLS10cmFuc3BhcmVudDogICAgICAgICBoc2xhKDAsIDAlLCAxMDAlLCAwKSAhZGVmYXVsdDtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVmFyaWFibGVzOiBzaXppbmcgYW5kIHNwYWNpbmdcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gSWNvbnNcbiRtZC1pY29uLXNpemU6ICAgICAgICAgICAgICAgICAgICAgICAgJG1zLWJhc2UgKiAxLjU7XG4kbWQtaWNvbi1wYWRkaW5nOiAgICAgICAgICAgICAgICAgICAgICRtcy1iYXNlICogMC41O1xuJG1kLWljb24tbWFyZ2luOiAgICAgICAgICAgICAgICAgICAgICAkbXMtYmFzZSAqIDAuMjU7XG5cbi8vIENvZGUgYmxvY2tzXG4kbWQtY29kZS1iYWNrZ3JvdW5kOiAgICAgICAgICAgICAgICAgIGhzbGEoMCwgMCUsIDkyLjUlLCAwLjUpO1xuJG1kLWNvZGUtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAjMzc0NzRGO1xuXG4vLyBLZXlzdHJva2VzXG4kbWQta2V5Ym9hcmQtYmFja2dyb3VuZDogICAgICAgICAgICAgICNGQ0ZDRkM7XG4kbWQta2V5Ym9hcmQtY29sb3I6ICAgICAgICAgICAgICAgICAgICM1NTU1NTU7XG4iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy9cbi8vIE5hbWU6ICAgICAgICBVSSBDb2xvciBQYWxldHRlXG4vLyBEZXNjcmlwdGlvbjogVGhlIGNvbG9yIHBhbGV0dGUgb2YgbWF0ZXJpYWwgZGVzaWduLlxuLy8gVmVyc2lvbjogICAgIDIuMy4xXG4vL1xuLy8gQXV0aG9yOiAgICAgIERlbmlzIE1hbGlub2Noa2luXG4vLyBHaXQ6ICAgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL21ybWxuYy9tYXRlcmlhbC1jb2xvclxuLy9cbi8vIHR3aXR0ZXI6ICAgICBAbXJtbG5jXG4vL1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG4vL1xuLy8gTGlzdCBvZiBiYXNlIGNvbG9yc1xuLy9cblxuLy8gJGNsci1yZWRcbi8vICRjbHItcGlua1xuLy8gJGNsci1wdXJwbGVcbi8vICRjbHItZGVlcC1wdXJwbGVcbi8vICRjbHItaW5kaWdvXG4vLyAkY2xyLWJsdWVcbi8vICRjbHItbGlnaHQtYmx1ZVxuLy8gJGNsci1jeWFuXG4vLyAkY2xyLXRlYWxcbi8vICRjbHItZ3JlZW5cbi8vICRjbHItbGlnaHQtZ3JlZW5cbi8vICRjbHItbGltZVxuLy8gJGNsci15ZWxsb3dcbi8vICRjbHItYW1iZXJcbi8vICRjbHItb3JhbmdlXG4vLyAkY2xyLWRlZXAtb3JhbmdlXG4vLyAkY2xyLWJyb3duXG4vLyAkY2xyLWdyZXlcbi8vICRjbHItYmx1ZS1ncmV5XG4vLyAkY2xyLWJsYWNrXG4vLyAkY2xyLXdoaXRlXG5cblxuLy9cbi8vIFJlZFxuLy9cblxuJGNsci1yZWQtbGlzdDogKFxuICBcImJhc2VcIjogI2Y0NDMzNixcbiAgXCI1MFwiOiAgICNmZmViZWUsXG4gIFwiMTAwXCI6ICAjZmZjZGQyLFxuICBcIjIwMFwiOiAgI2VmOWE5YSxcbiAgXCIzMDBcIjogICNlNTczNzMsXG4gIFwiNDAwXCI6ICAjZWY1MzUwLFxuICBcIjUwMFwiOiAgI2Y0NDMzNixcbiAgXCI2MDBcIjogICNlNTM5MzUsXG4gIFwiNzAwXCI6ICAjZDMyZjJmLFxuICBcIjgwMFwiOiAgI2M2MjgyOCxcbiAgXCI5MDBcIjogICNiNzFjMWMsXG4gIFwiYTEwMFwiOiAjZmY4YTgwLFxuICBcImEyMDBcIjogI2ZmNTI1MixcbiAgXCJhNDAwXCI6ICNmZjE3NDQsXG4gIFwiYTcwMFwiOiAjZDUwMDAwXG4pO1xuXG4kY2xyLXJlZDogICAgICBtYXAtZ2V0KCRjbHItcmVkLWxpc3QsIFwiYmFzZVwiKTtcblxuJGNsci1yZWQtNTA6ICAgbWFwLWdldCgkY2xyLXJlZC1saXN0LCBcIjUwXCIpO1xuJGNsci1yZWQtMTAwOiAgbWFwLWdldCgkY2xyLXJlZC1saXN0LCBcIjEwMFwiKTtcbiRjbHItcmVkLTIwMDogIG1hcC1nZXQoJGNsci1yZWQtbGlzdCwgXCIyMDBcIik7XG4kY2xyLXJlZC0zMDA6ICBtYXAtZ2V0KCRjbHItcmVkLWxpc3QsIFwiMzAwXCIpO1xuJGNsci1yZWQtNDAwOiAgbWFwLWdldCgkY2xyLXJlZC1saXN0LCBcIjQwMFwiKTtcbiRjbHItcmVkLTUwMDogIG1hcC1nZXQoJGNsci1yZWQtbGlzdCwgXCI1MDBcIik7XG4kY2xyLXJlZC02MDA6ICBtYXAtZ2V0KCRjbHItcmVkLWxpc3QsIFwiNjAwXCIpO1xuJGNsci1yZWQtNzAwOiAgbWFwLWdldCgkY2xyLXJlZC1saXN0LCBcIjcwMFwiKTtcbiRjbHItcmVkLTgwMDogIG1hcC1nZXQoJGNsci1yZWQtbGlzdCwgXCI4MDBcIik7XG4kY2xyLXJlZC05MDA6ICBtYXAtZ2V0KCRjbHItcmVkLWxpc3QsIFwiOTAwXCIpO1xuJGNsci1yZWQtYTEwMDogbWFwLWdldCgkY2xyLXJlZC1saXN0LCBcImExMDBcIik7XG4kY2xyLXJlZC1hMjAwOiBtYXAtZ2V0KCRjbHItcmVkLWxpc3QsIFwiYTIwMFwiKTtcbiRjbHItcmVkLWE0MDA6IG1hcC1nZXQoJGNsci1yZWQtbGlzdCwgXCJhNDAwXCIpO1xuJGNsci1yZWQtYTcwMDogbWFwLWdldCgkY2xyLXJlZC1saXN0LCBcImE3MDBcIik7XG5cblxuLy9cbi8vIFBpbmtcbi8vXG5cbiRjbHItcGluay1saXN0OiAoXG4gIFwiYmFzZVwiOiAjZTkxZTYzLFxuICBcIjUwXCI6ICAgI2ZjZTRlYyxcbiAgXCIxMDBcIjogICNmOGJiZDAsXG4gIFwiMjAwXCI6ICAjZjQ4ZmIxLFxuICBcIjMwMFwiOiAgI2YwNjI5MixcbiAgXCI0MDBcIjogICNlYzQwN2EsXG4gIFwiNTAwXCI6ICAjZTkxZTYzLFxuICBcIjYwMFwiOiAgI2Q4MWI2MCxcbiAgXCI3MDBcIjogICNjMjE4NWIsXG4gIFwiODAwXCI6ICAjYWQxNDU3LFxuICBcIjkwMFwiOiAgIzg4MGU0ZixcbiAgXCJhMTAwXCI6ICNmZjgwYWIsXG4gIFwiYTIwMFwiOiAjZmY0MDgxLFxuICBcImE0MDBcIjogI2Y1MDA1NyxcbiAgXCJhNzAwXCI6ICNjNTExNjJcbik7XG5cbiRjbHItcGluazogICAgICBtYXAtZ2V0KCRjbHItcGluay1saXN0LCBcImJhc2VcIik7XG5cbiRjbHItcGluay01MDogICBtYXAtZ2V0KCRjbHItcGluay1saXN0LCBcIjUwXCIpO1xuJGNsci1waW5rLTEwMDogIG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiMTAwXCIpO1xuJGNsci1waW5rLTIwMDogIG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiMjAwXCIpO1xuJGNsci1waW5rLTMwMDogIG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiMzAwXCIpO1xuJGNsci1waW5rLTQwMDogIG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiNDAwXCIpO1xuJGNsci1waW5rLTUwMDogIG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiNTAwXCIpO1xuJGNsci1waW5rLTYwMDogIG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiNjAwXCIpO1xuJGNsci1waW5rLTcwMDogIG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiNzAwXCIpO1xuJGNsci1waW5rLTgwMDogIG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiODAwXCIpO1xuJGNsci1waW5rLTkwMDogIG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiOTAwXCIpO1xuJGNsci1waW5rLWExMDA6IG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiYTEwMFwiKTtcbiRjbHItcGluay1hMjAwOiBtYXAtZ2V0KCRjbHItcGluay1saXN0LCBcImEyMDBcIik7XG4kY2xyLXBpbmstYTQwMDogbWFwLWdldCgkY2xyLXBpbmstbGlzdCwgXCJhNDAwXCIpO1xuJGNsci1waW5rLWE3MDA6IG1hcC1nZXQoJGNsci1waW5rLWxpc3QsIFwiYTcwMFwiKTtcblxuXG4vL1xuLy8gUHVycGxlXG4vL1xuXG4kY2xyLXB1cnBsZS1saXN0OiAoXG4gIFwiYmFzZVwiOiAjOWMyN2IwLFxuICBcIjUwXCI6ICAgI2YzZTVmNSxcbiAgXCIxMDBcIjogICNlMWJlZTcsXG4gIFwiMjAwXCI6ICAjY2U5M2Q4LFxuICBcIjMwMFwiOiAgI2JhNjhjOCxcbiAgXCI0MDBcIjogICNhYjQ3YmMsXG4gIFwiNTAwXCI6ICAjOWMyN2IwLFxuICBcIjYwMFwiOiAgIzhlMjRhYSxcbiAgXCI3MDBcIjogICM3YjFmYTIsXG4gIFwiODAwXCI6ICAjNmExYjlhLFxuICBcIjkwMFwiOiAgIzRhMTQ4YyxcbiAgXCJhMTAwXCI6ICNlYTgwZmMsXG4gIFwiYTIwMFwiOiAjZTA0MGZiLFxuICBcImE0MDBcIjogI2Q1MDBmOSxcbiAgXCJhNzAwXCI6ICNhYTAwZmZcbik7XG5cbiRjbHItcHVycGxlOiAgICAgIG1hcC1nZXQoJGNsci1wdXJwbGUtbGlzdCwgXCJiYXNlXCIpO1xuXG4kY2xyLXB1cnBsZS01MDogICBtYXAtZ2V0KCRjbHItcHVycGxlLWxpc3QsIFwiNTBcIik7XG4kY2xyLXB1cnBsZS0xMDA6ICBtYXAtZ2V0KCRjbHItcHVycGxlLWxpc3QsIFwiMTAwXCIpO1xuJGNsci1wdXJwbGUtMjAwOiAgbWFwLWdldCgkY2xyLXB1cnBsZS1saXN0LCBcIjIwMFwiKTtcbiRjbHItcHVycGxlLTMwMDogIG1hcC1nZXQoJGNsci1wdXJwbGUtbGlzdCwgXCIzMDBcIik7XG4kY2xyLXB1cnBsZS00MDA6ICBtYXAtZ2V0KCRjbHItcHVycGxlLWxpc3QsIFwiNDAwXCIpO1xuJGNsci1wdXJwbGUtNTAwOiAgbWFwLWdldCgkY2xyLXB1cnBsZS1saXN0LCBcIjUwMFwiKTtcbiRjbHItcHVycGxlLTYwMDogIG1hcC1nZXQoJGNsci1wdXJwbGUtbGlzdCwgXCI2MDBcIik7XG4kY2xyLXB1cnBsZS03MDA6ICBtYXAtZ2V0KCRjbHItcHVycGxlLWxpc3QsIFwiNzAwXCIpO1xuJGNsci1wdXJwbGUtODAwOiAgbWFwLWdldCgkY2xyLXB1cnBsZS1saXN0LCBcIjgwMFwiKTtcbiRjbHItcHVycGxlLTkwMDogIG1hcC1nZXQoJGNsci1wdXJwbGUtbGlzdCwgXCI5MDBcIik7XG4kY2xyLXB1cnBsZS1hMTAwOiBtYXAtZ2V0KCRjbHItcHVycGxlLWxpc3QsIFwiYTEwMFwiKTtcbiRjbHItcHVycGxlLWEyMDA6IG1hcC1nZXQoJGNsci1wdXJwbGUtbGlzdCwgXCJhMjAwXCIpO1xuJGNsci1wdXJwbGUtYTQwMDogbWFwLWdldCgkY2xyLXB1cnBsZS1saXN0LCBcImE0MDBcIik7XG4kY2xyLXB1cnBsZS1hNzAwOiBtYXAtZ2V0KCRjbHItcHVycGxlLWxpc3QsIFwiYTcwMFwiKTtcblxuXG4vL1xuLy8gRGVlcCBwdXJwbGVcbi8vXG5cbiRjbHItZGVlcC1wdXJwbGUtbGlzdDogKFxuICBcImJhc2VcIjogIzY3M2FiNyxcbiAgXCI1MFwiOiAgICNlZGU3ZjYsXG4gIFwiMTAwXCI6ICAjZDFjNGU5LFxuICBcIjIwMFwiOiAgI2IzOWRkYixcbiAgXCIzMDBcIjogICM5NTc1Y2QsXG4gIFwiNDAwXCI6ICAjN2U1N2MyLFxuICBcIjUwMFwiOiAgIzY3M2FiNyxcbiAgXCI2MDBcIjogICM1ZTM1YjEsXG4gIFwiNzAwXCI6ICAjNTEyZGE4LFxuICBcIjgwMFwiOiAgIzQ1MjdhMCxcbiAgXCI5MDBcIjogICMzMTFiOTIsXG4gIFwiYTEwMFwiOiAjYjM4OGZmLFxuICBcImEyMDBcIjogIzdjNGRmZixcbiAgXCJhNDAwXCI6ICM2NTFmZmYsXG4gIFwiYTcwMFwiOiAjNjIwMGVhXG4pO1xuXG4kY2xyLWRlZXAtcHVycGxlOiAgICAgIG1hcC1nZXQoJGNsci1kZWVwLXB1cnBsZS1saXN0LCBcImJhc2VcIik7XG5cbiRjbHItZGVlcC1wdXJwbGUtNTA6ICAgbWFwLWdldCgkY2xyLWRlZXAtcHVycGxlLWxpc3QsIFwiNTBcIik7XG4kY2xyLWRlZXAtcHVycGxlLTEwMDogIG1hcC1nZXQoJGNsci1kZWVwLXB1cnBsZS1saXN0LCBcIjEwMFwiKTtcbiRjbHItZGVlcC1wdXJwbGUtMjAwOiAgbWFwLWdldCgkY2xyLWRlZXAtcHVycGxlLWxpc3QsIFwiMjAwXCIpO1xuJGNsci1kZWVwLXB1cnBsZS0zMDA6ICBtYXAtZ2V0KCRjbHItZGVlcC1wdXJwbGUtbGlzdCwgXCIzMDBcIik7XG4kY2xyLWRlZXAtcHVycGxlLTQwMDogIG1hcC1nZXQoJGNsci1kZWVwLXB1cnBsZS1saXN0LCBcIjQwMFwiKTtcbiRjbHItZGVlcC1wdXJwbGUtNTAwOiAgbWFwLWdldCgkY2xyLWRlZXAtcHVycGxlLWxpc3QsIFwiNTAwXCIpO1xuJGNsci1kZWVwLXB1cnBsZS02MDA6ICBtYXAtZ2V0KCRjbHItZGVlcC1wdXJwbGUtbGlzdCwgXCI2MDBcIik7XG4kY2xyLWRlZXAtcHVycGxlLTcwMDogIG1hcC1nZXQoJGNsci1kZWVwLXB1cnBsZS1saXN0LCBcIjcwMFwiKTtcbiRjbHItZGVlcC1wdXJwbGUtODAwOiAgbWFwLWdldCgkY2xyLWRlZXAtcHVycGxlLWxpc3QsIFwiODAwXCIpO1xuJGNsci1kZWVwLXB1cnBsZS05MDA6ICBtYXAtZ2V0KCRjbHItZGVlcC1wdXJwbGUtbGlzdCwgXCI5MDBcIik7XG4kY2xyLWRlZXAtcHVycGxlLWExMDA6IG1hcC1nZXQoJGNsci1kZWVwLXB1cnBsZS1saXN0LCBcImExMDBcIik7XG4kY2xyLWRlZXAtcHVycGxlLWEyMDA6IG1hcC1nZXQoJGNsci1kZWVwLXB1cnBsZS1saXN0LCBcImEyMDBcIik7XG4kY2xyLWRlZXAtcHVycGxlLWE0MDA6IG1hcC1nZXQoJGNsci1kZWVwLXB1cnBsZS1saXN0LCBcImE0MDBcIik7XG4kY2xyLWRlZXAtcHVycGxlLWE3MDA6IG1hcC1nZXQoJGNsci1kZWVwLXB1cnBsZS1saXN0LCBcImE3MDBcIik7XG5cblxuLy9cbi8vIEluZGlnb1xuLy9cblxuJGNsci1pbmRpZ28tbGlzdDogKFxuICBcImJhc2VcIjogIzNmNTFiNSxcbiAgXCI1MFwiOiAgICNlOGVhZjYsXG4gIFwiMTAwXCI6ICAjYzVjYWU5LFxuICBcIjIwMFwiOiAgIzlmYThkYSxcbiAgXCIzMDBcIjogICM3OTg2Y2IsXG4gIFwiNDAwXCI6ICAjNWM2YmMwLFxuICBcIjUwMFwiOiAgIzNmNTFiNSxcbiAgXCI2MDBcIjogICMzOTQ5YWIsXG4gIFwiNzAwXCI6ICAjMzAzZjlmLFxuICBcIjgwMFwiOiAgIzI4MzU5MyxcbiAgXCI5MDBcIjogICMxYTIzN2UsXG4gIFwiYTEwMFwiOiAjOGM5ZWZmLFxuICBcImEyMDBcIjogIzUzNmRmZSxcbiAgXCJhNDAwXCI6ICMzZDVhZmUsXG4gIFwiYTcwMFwiOiAjMzA0ZmZlXG4pO1xuXG4kY2xyLWluZGlnbzogICAgICBtYXAtZ2V0KCRjbHItaW5kaWdvLWxpc3QsIFwiYmFzZVwiKTtcblxuJGNsci1pbmRpZ28tNTA6ICAgbWFwLWdldCgkY2xyLWluZGlnby1saXN0LCBcIjUwXCIpO1xuJGNsci1pbmRpZ28tMTAwOiAgbWFwLWdldCgkY2xyLWluZGlnby1saXN0LCBcIjEwMFwiKTtcbiRjbHItaW5kaWdvLTIwMDogIG1hcC1nZXQoJGNsci1pbmRpZ28tbGlzdCwgXCIyMDBcIik7XG4kY2xyLWluZGlnby0zMDA6ICBtYXAtZ2V0KCRjbHItaW5kaWdvLWxpc3QsIFwiMzAwXCIpO1xuJGNsci1pbmRpZ28tNDAwOiAgbWFwLWdldCgkY2xyLWluZGlnby1saXN0LCBcIjQwMFwiKTtcbiRjbHItaW5kaWdvLTUwMDogIG1hcC1nZXQoJGNsci1pbmRpZ28tbGlzdCwgXCI1MDBcIik7XG4kY2xyLWluZGlnby02MDA6ICBtYXAtZ2V0KCRjbHItaW5kaWdvLWxpc3QsIFwiNjAwXCIpO1xuJGNsci1pbmRpZ28tNzAwOiAgbWFwLWdldCgkY2xyLWluZGlnby1saXN0LCBcIjcwMFwiKTtcbiRjbHItaW5kaWdvLTgwMDogIG1hcC1nZXQoJGNsci1pbmRpZ28tbGlzdCwgXCI4MDBcIik7XG4kY2xyLWluZGlnby05MDA6ICBtYXAtZ2V0KCRjbHItaW5kaWdvLWxpc3QsIFwiOTAwXCIpO1xuJGNsci1pbmRpZ28tYTEwMDogbWFwLWdldCgkY2xyLWluZGlnby1saXN0LCBcImExMDBcIik7XG4kY2xyLWluZGlnby1hMjAwOiBtYXAtZ2V0KCRjbHItaW5kaWdvLWxpc3QsIFwiYTIwMFwiKTtcbiRjbHItaW5kaWdvLWE0MDA6IG1hcC1nZXQoJGNsci1pbmRpZ28tbGlzdCwgXCJhNDAwXCIpO1xuJGNsci1pbmRpZ28tYTcwMDogbWFwLWdldCgkY2xyLWluZGlnby1saXN0LCBcImE3MDBcIik7XG5cblxuLy9cbi8vIEJsdWVcbi8vXG5cbiRjbHItYmx1ZS1saXN0OiAoXG4gIFwiYmFzZVwiOiAjMjE5NmYzLFxuICBcIjUwXCI6ICAgI2UzZjJmZCxcbiAgXCIxMDBcIjogICNiYmRlZmIsXG4gIFwiMjAwXCI6ICAjOTBjYWY5LFxuICBcIjMwMFwiOiAgIzY0YjVmNixcbiAgXCI0MDBcIjogICM0MmE1ZjUsXG4gIFwiNTAwXCI6ICAjMjE5NmYzLFxuICBcIjYwMFwiOiAgIzFlODhlNSxcbiAgXCI3MDBcIjogICMxOTc2ZDIsXG4gIFwiODAwXCI6ICAjMTU2NWMwLFxuICBcIjkwMFwiOiAgIzBkNDdhMSxcbiAgXCJhMTAwXCI6ICM4MmIxZmYsXG4gIFwiYTIwMFwiOiAjNDQ4YWZmLFxuICBcImE0MDBcIjogIzI5NzlmZixcbiAgXCJhNzAwXCI6ICMyOTYyZmZcbik7XG5cbiRjbHItYmx1ZTogICAgICBtYXAtZ2V0KCRjbHItYmx1ZS1saXN0LCBcImJhc2VcIik7XG5cbiRjbHItYmx1ZS01MDogICBtYXAtZ2V0KCRjbHItYmx1ZS1saXN0LCBcIjUwXCIpO1xuJGNsci1ibHVlLTEwMDogIG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiMTAwXCIpO1xuJGNsci1ibHVlLTIwMDogIG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiMjAwXCIpO1xuJGNsci1ibHVlLTMwMDogIG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiMzAwXCIpO1xuJGNsci1ibHVlLTQwMDogIG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiNDAwXCIpO1xuJGNsci1ibHVlLTUwMDogIG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiNTAwXCIpO1xuJGNsci1ibHVlLTYwMDogIG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiNjAwXCIpO1xuJGNsci1ibHVlLTcwMDogIG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiNzAwXCIpO1xuJGNsci1ibHVlLTgwMDogIG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiODAwXCIpO1xuJGNsci1ibHVlLTkwMDogIG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiOTAwXCIpO1xuJGNsci1ibHVlLWExMDA6IG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiYTEwMFwiKTtcbiRjbHItYmx1ZS1hMjAwOiBtYXAtZ2V0KCRjbHItYmx1ZS1saXN0LCBcImEyMDBcIik7XG4kY2xyLWJsdWUtYTQwMDogbWFwLWdldCgkY2xyLWJsdWUtbGlzdCwgXCJhNDAwXCIpO1xuJGNsci1ibHVlLWE3MDA6IG1hcC1nZXQoJGNsci1ibHVlLWxpc3QsIFwiYTcwMFwiKTtcblxuXG4vL1xuLy8gTGlnaHQgQmx1ZVxuLy9cblxuJGNsci1saWdodC1ibHVlLWxpc3Q6IChcbiAgXCJiYXNlXCI6ICMwM2E5ZjQsXG4gIFwiNTBcIjogICAjZTFmNWZlLFxuICBcIjEwMFwiOiAgI2IzZTVmYyxcbiAgXCIyMDBcIjogICM4MWQ0ZmEsXG4gIFwiMzAwXCI6ICAjNGZjM2Y3LFxuICBcIjQwMFwiOiAgIzI5YjZmNixcbiAgXCI1MDBcIjogICMwM2E5ZjQsXG4gIFwiNjAwXCI6ICAjMDM5YmU1LFxuICBcIjcwMFwiOiAgIzAyODhkMSxcbiAgXCI4MDBcIjogICMwMjc3YmQsXG4gIFwiOTAwXCI6ICAjMDE1NzliLFxuICBcImExMDBcIjogIzgwZDhmZixcbiAgXCJhMjAwXCI6ICM0MGM0ZmYsXG4gIFwiYTQwMFwiOiAjMDBiMGZmLFxuICBcImE3MDBcIjogIzAwOTFlYVxuKTtcblxuJGNsci1saWdodC1ibHVlOiAgICAgIG1hcC1nZXQoJGNsci1saWdodC1ibHVlLWxpc3QsIFwiYmFzZVwiKTtcblxuJGNsci1saWdodC1ibHVlLTUwOiAgIG1hcC1nZXQoJGNsci1saWdodC1ibHVlLWxpc3QsIFwiNTBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtMTAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCIxMDBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtMjAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCIyMDBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtMzAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCIzMDBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtNDAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCI0MDBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtNTAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCI1MDBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtNjAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCI2MDBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtNzAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCI3MDBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtODAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCI4MDBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtOTAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCI5MDBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtYTEwMDogbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCJhMTAwXCIpO1xuJGNsci1saWdodC1ibHVlLWEyMDA6IG1hcC1nZXQoJGNsci1saWdodC1ibHVlLWxpc3QsIFwiYTIwMFwiKTtcbiRjbHItbGlnaHQtYmx1ZS1hNDAwOiBtYXAtZ2V0KCRjbHItbGlnaHQtYmx1ZS1saXN0LCBcImE0MDBcIik7XG4kY2xyLWxpZ2h0LWJsdWUtYTcwMDogbWFwLWdldCgkY2xyLWxpZ2h0LWJsdWUtbGlzdCwgXCJhNzAwXCIpO1xuXG5cbi8vXG4vLyBDeWFuXG4vL1xuXG4kY2xyLWN5YW4tbGlzdDogKFxuICBcImJhc2VcIjogIzAwYmNkNCxcbiAgXCI1MFwiOiAgICNlMGY3ZmEsXG4gIFwiMTAwXCI6ICAjYjJlYmYyLFxuICBcIjIwMFwiOiAgIzgwZGVlYSxcbiAgXCIzMDBcIjogICM0ZGQwZTEsXG4gIFwiNDAwXCI6ICAjMjZjNmRhLFxuICBcIjUwMFwiOiAgIzAwYmNkNCxcbiAgXCI2MDBcIjogICMwMGFjYzEsXG4gIFwiNzAwXCI6ICAjMDA5N2E3LFxuICBcIjgwMFwiOiAgIzAwODM4ZixcbiAgXCI5MDBcIjogICMwMDYwNjQsXG4gIFwiYTEwMFwiOiAjODRmZmZmLFxuICBcImEyMDBcIjogIzE4ZmZmZixcbiAgXCJhNDAwXCI6ICMwMGU1ZmYsXG4gIFwiYTcwMFwiOiAjMDBiOGQ0XG4pO1xuXG4kY2xyLWN5YW46ICAgICAgbWFwLWdldCgkY2xyLWN5YW4tbGlzdCwgXCJiYXNlXCIpO1xuXG4kY2xyLWN5YW4tNTA6ICAgbWFwLWdldCgkY2xyLWN5YW4tbGlzdCwgXCI1MFwiKTtcbiRjbHItY3lhbi0xMDA6ICBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcIjEwMFwiKTtcbiRjbHItY3lhbi0yMDA6ICBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcIjIwMFwiKTtcbiRjbHItY3lhbi0zMDA6ICBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcIjMwMFwiKTtcbiRjbHItY3lhbi00MDA6ICBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcIjQwMFwiKTtcbiRjbHItY3lhbi01MDA6ICBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcIjUwMFwiKTtcbiRjbHItY3lhbi02MDA6ICBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcIjYwMFwiKTtcbiRjbHItY3lhbi03MDA6ICBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcIjcwMFwiKTtcbiRjbHItY3lhbi04MDA6ICBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcIjgwMFwiKTtcbiRjbHItY3lhbi05MDA6ICBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcIjkwMFwiKTtcbiRjbHItY3lhbi1hMTAwOiBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcImExMDBcIik7XG4kY2xyLWN5YW4tYTIwMDogbWFwLWdldCgkY2xyLWN5YW4tbGlzdCwgXCJhMjAwXCIpO1xuJGNsci1jeWFuLWE0MDA6IG1hcC1nZXQoJGNsci1jeWFuLWxpc3QsIFwiYTQwMFwiKTtcbiRjbHItY3lhbi1hNzAwOiBtYXAtZ2V0KCRjbHItY3lhbi1saXN0LCBcImE3MDBcIik7XG5cblxuLy9cbi8vIFRlYWxcbi8vXG5cbiRjbHItdGVhbC1saXN0OiAoXG4gIFwiYmFzZVwiOiAjMDA5Njg4LFxuICBcIjUwXCI6ICAgI2UwZjJmMSxcbiAgXCIxMDBcIjogICNiMmRmZGIsXG4gIFwiMjAwXCI6ICAjODBjYmM0LFxuICBcIjMwMFwiOiAgIzRkYjZhYyxcbiAgXCI0MDBcIjogICMyNmE2OWEsXG4gIFwiNTAwXCI6ICAjMDA5Njg4LFxuICBcIjYwMFwiOiAgIzAwODk3YixcbiAgXCI3MDBcIjogICMwMDc5NmIsXG4gIFwiODAwXCI6ICAjMDA2OTVjLFxuICBcIjkwMFwiOiAgIzAwNGQ0MCxcbiAgXCJhMTAwXCI6ICNhN2ZmZWIsXG4gIFwiYTIwMFwiOiAjNjRmZmRhLFxuICBcImE0MDBcIjogIzFkZTliNixcbiAgXCJhNzAwXCI6ICMwMGJmYTVcbik7XG5cbiRjbHItdGVhbDogICAgICBtYXAtZ2V0KCRjbHItdGVhbC1saXN0LCBcImJhc2VcIik7XG5cbiRjbHItdGVhbC01MDogICBtYXAtZ2V0KCRjbHItdGVhbC1saXN0LCBcIjUwXCIpO1xuJGNsci10ZWFsLTEwMDogIG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiMTAwXCIpO1xuJGNsci10ZWFsLTIwMDogIG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiMjAwXCIpO1xuJGNsci10ZWFsLTMwMDogIG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiMzAwXCIpO1xuJGNsci10ZWFsLTQwMDogIG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiNDAwXCIpO1xuJGNsci10ZWFsLTUwMDogIG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiNTAwXCIpO1xuJGNsci10ZWFsLTYwMDogIG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiNjAwXCIpO1xuJGNsci10ZWFsLTcwMDogIG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiNzAwXCIpO1xuJGNsci10ZWFsLTgwMDogIG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiODAwXCIpO1xuJGNsci10ZWFsLTkwMDogIG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiOTAwXCIpO1xuJGNsci10ZWFsLWExMDA6IG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiYTEwMFwiKTtcbiRjbHItdGVhbC1hMjAwOiBtYXAtZ2V0KCRjbHItdGVhbC1saXN0LCBcImEyMDBcIik7XG4kY2xyLXRlYWwtYTQwMDogbWFwLWdldCgkY2xyLXRlYWwtbGlzdCwgXCJhNDAwXCIpO1xuJGNsci10ZWFsLWE3MDA6IG1hcC1nZXQoJGNsci10ZWFsLWxpc3QsIFwiYTcwMFwiKTtcblxuXG4vL1xuLy8gR3JlZW5cbi8vXG5cbiRjbHItZ3JlZW4tbGlzdDogKFxuICBcImJhc2VcIjogIzRjYWY1MCxcbiAgXCI1MFwiOiAgICNlOGY1ZTksXG4gIFwiMTAwXCI6ICAjYzhlNmM5LFxuICBcIjIwMFwiOiAgI2E1ZDZhNyxcbiAgXCIzMDBcIjogICM4MWM3ODQsXG4gIFwiNDAwXCI6ICAjNjZiYjZhLFxuICBcIjUwMFwiOiAgIzRjYWY1MCxcbiAgXCI2MDBcIjogICM0M2EwNDcsXG4gIFwiNzAwXCI6ICAjMzg4ZTNjLFxuICBcIjgwMFwiOiAgIzJlN2QzMixcbiAgXCI5MDBcIjogICMxYjVlMjAsXG4gIFwiYTEwMFwiOiAjYjlmNmNhLFxuICBcImEyMDBcIjogIzY5ZjBhZSxcbiAgXCJhNDAwXCI6ICMwMGU2NzYsXG4gIFwiYTcwMFwiOiAjMDBjODUzXG4pO1xuXG4kY2xyLWdyZWVuOiAgICAgIG1hcC1nZXQoJGNsci1ncmVlbi1saXN0LCBcImJhc2VcIik7XG5cbiRjbHItZ3JlZW4tNTA6ICAgbWFwLWdldCgkY2xyLWdyZWVuLWxpc3QsIFwiNTBcIik7XG4kY2xyLWdyZWVuLTEwMDogIG1hcC1nZXQoJGNsci1ncmVlbi1saXN0LCBcIjEwMFwiKTtcbiRjbHItZ3JlZW4tMjAwOiAgbWFwLWdldCgkY2xyLWdyZWVuLWxpc3QsIFwiMjAwXCIpO1xuJGNsci1ncmVlbi0zMDA6ICBtYXAtZ2V0KCRjbHItZ3JlZW4tbGlzdCwgXCIzMDBcIik7XG4kY2xyLWdyZWVuLTQwMDogIG1hcC1nZXQoJGNsci1ncmVlbi1saXN0LCBcIjQwMFwiKTtcbiRjbHItZ3JlZW4tNTAwOiAgbWFwLWdldCgkY2xyLWdyZWVuLWxpc3QsIFwiNTAwXCIpO1xuJGNsci1ncmVlbi02MDA6ICBtYXAtZ2V0KCRjbHItZ3JlZW4tbGlzdCwgXCI2MDBcIik7XG4kY2xyLWdyZWVuLTcwMDogIG1hcC1nZXQoJGNsci1ncmVlbi1saXN0LCBcIjcwMFwiKTtcbiRjbHItZ3JlZW4tODAwOiAgbWFwLWdldCgkY2xyLWdyZWVuLWxpc3QsIFwiODAwXCIpO1xuJGNsci1ncmVlbi05MDA6ICBtYXAtZ2V0KCRjbHItZ3JlZW4tbGlzdCwgXCI5MDBcIik7XG4kY2xyLWdyZWVuLWExMDA6IG1hcC1nZXQoJGNsci1ncmVlbi1saXN0LCBcImExMDBcIik7XG4kY2xyLWdyZWVuLWEyMDA6IG1hcC1nZXQoJGNsci1ncmVlbi1saXN0LCBcImEyMDBcIik7XG4kY2xyLWdyZWVuLWE0MDA6IG1hcC1nZXQoJGNsci1ncmVlbi1saXN0LCBcImE0MDBcIik7XG4kY2xyLWdyZWVuLWE3MDA6IG1hcC1nZXQoJGNsci1ncmVlbi1saXN0LCBcImE3MDBcIik7XG5cblxuLy9cbi8vIExpZ2h0IGdyZWVuXG4vL1xuXG4kY2xyLWxpZ2h0LWdyZWVuLWxpc3Q6IChcbiAgXCJiYXNlXCI6ICM4YmMzNGEsXG4gIFwiNTBcIjogICAjZjFmOGU5LFxuICBcIjEwMFwiOiAgI2RjZWRjOCxcbiAgXCIyMDBcIjogICNjNWUxYTUsXG4gIFwiMzAwXCI6ICAjYWVkNTgxLFxuICBcIjQwMFwiOiAgIzljY2M2NSxcbiAgXCI1MDBcIjogICM4YmMzNGEsXG4gIFwiNjAwXCI6ICAjN2NiMzQyLFxuICBcIjcwMFwiOiAgIzY4OWYzOCxcbiAgXCI4MDBcIjogICM1NThiMmYsXG4gIFwiOTAwXCI6ICAjMzM2OTFlLFxuICBcImExMDBcIjogI2NjZmY5MCxcbiAgXCJhMjAwXCI6ICNiMmZmNTksXG4gIFwiYTQwMFwiOiAjNzZmZjAzLFxuICBcImE3MDBcIjogIzY0ZGQxN1xuKTtcblxuJGNsci1saWdodC1ncmVlbjogICAgICBtYXAtZ2V0KCRjbHItbGlnaHQtZ3JlZW4tbGlzdCwgXCJiYXNlXCIpO1xuXG4kY2xyLWxpZ2h0LWdyZWVuLTUwOiAgIG1hcC1nZXQoJGNsci1saWdodC1ncmVlbi1saXN0LCBcIjUwXCIpO1xuJGNsci1saWdodC1ncmVlbi0xMDA6ICBtYXAtZ2V0KCRjbHItbGlnaHQtZ3JlZW4tbGlzdCwgXCIxMDBcIik7XG4kY2xyLWxpZ2h0LWdyZWVuLTIwMDogIG1hcC1nZXQoJGNsci1saWdodC1ncmVlbi1saXN0LCBcIjIwMFwiKTtcbiRjbHItbGlnaHQtZ3JlZW4tMzAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWdyZWVuLWxpc3QsIFwiMzAwXCIpO1xuJGNsci1saWdodC1ncmVlbi00MDA6ICBtYXAtZ2V0KCRjbHItbGlnaHQtZ3JlZW4tbGlzdCwgXCI0MDBcIik7XG4kY2xyLWxpZ2h0LWdyZWVuLTUwMDogIG1hcC1nZXQoJGNsci1saWdodC1ncmVlbi1saXN0LCBcIjUwMFwiKTtcbiRjbHItbGlnaHQtZ3JlZW4tNjAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWdyZWVuLWxpc3QsIFwiNjAwXCIpO1xuJGNsci1saWdodC1ncmVlbi03MDA6ICBtYXAtZ2V0KCRjbHItbGlnaHQtZ3JlZW4tbGlzdCwgXCI3MDBcIik7XG4kY2xyLWxpZ2h0LWdyZWVuLTgwMDogIG1hcC1nZXQoJGNsci1saWdodC1ncmVlbi1saXN0LCBcIjgwMFwiKTtcbiRjbHItbGlnaHQtZ3JlZW4tOTAwOiAgbWFwLWdldCgkY2xyLWxpZ2h0LWdyZWVuLWxpc3QsIFwiOTAwXCIpO1xuJGNsci1saWdodC1ncmVlbi1hMTAwOiBtYXAtZ2V0KCRjbHItbGlnaHQtZ3JlZW4tbGlzdCwgXCJhMTAwXCIpO1xuJGNsci1saWdodC1ncmVlbi1hMjAwOiBtYXAtZ2V0KCRjbHItbGlnaHQtZ3JlZW4tbGlzdCwgXCJhMjAwXCIpO1xuJGNsci1saWdodC1ncmVlbi1hNDAwOiBtYXAtZ2V0KCRjbHItbGlnaHQtZ3JlZW4tbGlzdCwgXCJhNDAwXCIpO1xuJGNsci1saWdodC1ncmVlbi1hNzAwOiBtYXAtZ2V0KCRjbHItbGlnaHQtZ3JlZW4tbGlzdCwgXCJhNzAwXCIpO1xuXG5cbi8vXG4vLyBMaW1lXG4vL1xuXG4kY2xyLWxpbWUtbGlzdDogKFxuICBcImJhc2VcIjogI2NkZGMzOSxcbiAgXCI1MFwiOiAgICNmOWZiZTcsXG4gIFwiMTAwXCI6ICAjZjBmNGMzLFxuICBcIjIwMFwiOiAgI2U2ZWU5YyxcbiAgXCIzMDBcIjogICNkY2U3NzUsXG4gIFwiNDAwXCI6ICAjZDRlMTU3LFxuICBcIjUwMFwiOiAgI2NkZGMzOSxcbiAgXCI2MDBcIjogICNjMGNhMzMsXG4gIFwiNzAwXCI6ICAjYWZiNDJiLFxuICBcIjgwMFwiOiAgIzllOWQyNCxcbiAgXCI5MDBcIjogICM4Mjc3MTcsXG4gIFwiYTEwMFwiOiAjZjRmZjgxLFxuICBcImEyMDBcIjogI2VlZmY0MSxcbiAgXCJhNDAwXCI6ICNjNmZmMDAsXG4gIFwiYTcwMFwiOiAjYWVlYTAwXG4pO1xuXG4kY2xyLWxpbWU6ICAgICAgbWFwLWdldCgkY2xyLWxpbWUtbGlzdCwgXCJiYXNlXCIpO1xuXG4kY2xyLWxpbWUtNTA6ICAgbWFwLWdldCgkY2xyLWxpbWUtbGlzdCwgXCI1MFwiKTtcbiRjbHItbGltZS0xMDA6ICBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcIjEwMFwiKTtcbiRjbHItbGltZS0yMDA6ICBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcIjIwMFwiKTtcbiRjbHItbGltZS0zMDA6ICBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcIjMwMFwiKTtcbiRjbHItbGltZS00MDA6ICBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcIjQwMFwiKTtcbiRjbHItbGltZS01MDA6ICBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcIjUwMFwiKTtcbiRjbHItbGltZS02MDA6ICBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcIjYwMFwiKTtcbiRjbHItbGltZS03MDA6ICBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcIjcwMFwiKTtcbiRjbHItbGltZS04MDA6ICBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcIjgwMFwiKTtcbiRjbHItbGltZS05MDA6ICBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcIjkwMFwiKTtcbiRjbHItbGltZS1hMTAwOiBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcImExMDBcIik7XG4kY2xyLWxpbWUtYTIwMDogbWFwLWdldCgkY2xyLWxpbWUtbGlzdCwgXCJhMjAwXCIpO1xuJGNsci1saW1lLWE0MDA6IG1hcC1nZXQoJGNsci1saW1lLWxpc3QsIFwiYTQwMFwiKTtcbiRjbHItbGltZS1hNzAwOiBtYXAtZ2V0KCRjbHItbGltZS1saXN0LCBcImE3MDBcIik7XG5cblxuLy9cbi8vIFllbGxvd1xuLy9cblxuJGNsci15ZWxsb3ctbGlzdDogKFxuICBcImJhc2VcIjogI2ZmZWIzYixcbiAgXCI1MFwiOiAgICNmZmZkZTcsXG4gIFwiMTAwXCI6ICAjZmZmOWM0LFxuICBcIjIwMFwiOiAgI2ZmZjU5ZCxcbiAgXCIzMDBcIjogICNmZmYxNzYsXG4gIFwiNDAwXCI6ICAjZmZlZTU4LFxuICBcIjUwMFwiOiAgI2ZmZWIzYixcbiAgXCI2MDBcIjogICNmZGQ4MzUsXG4gIFwiNzAwXCI6ICAjZmJjMDJkLFxuICBcIjgwMFwiOiAgI2Y5YTgyNSxcbiAgXCI5MDBcIjogICNmNTdmMTcsXG4gIFwiYTEwMFwiOiAjZmZmZjhkLFxuICBcImEyMDBcIjogI2ZmZmYwMCxcbiAgXCJhNDAwXCI6ICNmZmVhMDAsXG4gIFwiYTcwMFwiOiAjZmZkNjAwXG4pO1xuXG4kY2xyLXllbGxvdzogICAgICBtYXAtZ2V0KCRjbHIteWVsbG93LWxpc3QsIFwiYmFzZVwiKTtcblxuJGNsci15ZWxsb3ctNTA6ICAgbWFwLWdldCgkY2xyLXllbGxvdy1saXN0LCBcIjUwXCIpO1xuJGNsci15ZWxsb3ctMTAwOiAgbWFwLWdldCgkY2xyLXllbGxvdy1saXN0LCBcIjEwMFwiKTtcbiRjbHIteWVsbG93LTIwMDogIG1hcC1nZXQoJGNsci15ZWxsb3ctbGlzdCwgXCIyMDBcIik7XG4kY2xyLXllbGxvdy0zMDA6ICBtYXAtZ2V0KCRjbHIteWVsbG93LWxpc3QsIFwiMzAwXCIpO1xuJGNsci15ZWxsb3ctNDAwOiAgbWFwLWdldCgkY2xyLXllbGxvdy1saXN0LCBcIjQwMFwiKTtcbiRjbHIteWVsbG93LTUwMDogIG1hcC1nZXQoJGNsci15ZWxsb3ctbGlzdCwgXCI1MDBcIik7XG4kY2xyLXllbGxvdy02MDA6ICBtYXAtZ2V0KCRjbHIteWVsbG93LWxpc3QsIFwiNjAwXCIpO1xuJGNsci15ZWxsb3ctNzAwOiAgbWFwLWdldCgkY2xyLXllbGxvdy1saXN0LCBcIjcwMFwiKTtcbiRjbHIteWVsbG93LTgwMDogIG1hcC1nZXQoJGNsci15ZWxsb3ctbGlzdCwgXCI4MDBcIik7XG4kY2xyLXllbGxvdy05MDA6ICBtYXAtZ2V0KCRjbHIteWVsbG93LWxpc3QsIFwiOTAwXCIpO1xuJGNsci15ZWxsb3ctYTEwMDogbWFwLWdldCgkY2xyLXllbGxvdy1saXN0LCBcImExMDBcIik7XG4kY2xyLXllbGxvdy1hMjAwOiBtYXAtZ2V0KCRjbHIteWVsbG93LWxpc3QsIFwiYTIwMFwiKTtcbiRjbHIteWVsbG93LWE0MDA6IG1hcC1nZXQoJGNsci15ZWxsb3ctbGlzdCwgXCJhNDAwXCIpO1xuJGNsci15ZWxsb3ctYTcwMDogbWFwLWdldCgkY2xyLXllbGxvdy1saXN0LCBcImE3MDBcIik7XG5cblxuLy9cbi8vIGFtYmVyXG4vL1xuXG4kY2xyLWFtYmVyLWxpc3Q6IChcbiAgXCJiYXNlXCI6ICNmZmMxMDcsXG4gIFwiNTBcIjogICAjZmZmOGUxLFxuICBcIjEwMFwiOiAgI2ZmZWNiMyxcbiAgXCIyMDBcIjogICNmZmUwODIsXG4gIFwiMzAwXCI6ICAjZmZkNTRmLFxuICBcIjQwMFwiOiAgI2ZmY2EyOCxcbiAgXCI1MDBcIjogICNmZmMxMDcsXG4gIFwiNjAwXCI6ICAjZmZiMzAwLFxuICBcIjcwMFwiOiAgI2ZmYTAwMCxcbiAgXCI4MDBcIjogICNmZjhmMDAsXG4gIFwiOTAwXCI6ICAjZmY2ZjAwLFxuICBcImExMDBcIjogI2ZmZTU3ZixcbiAgXCJhMjAwXCI6ICNmZmQ3NDAsXG4gIFwiYTQwMFwiOiAjZmZjNDAwLFxuICBcImE3MDBcIjogI2ZmYWIwMFxuKTtcblxuJGNsci1hbWJlcjogICAgICBtYXAtZ2V0KCRjbHItYW1iZXItbGlzdCwgXCJiYXNlXCIpO1xuXG4kY2xyLWFtYmVyLTUwOiAgIG1hcC1nZXQoJGNsci1hbWJlci1saXN0LCBcIjUwXCIpO1xuJGNsci1hbWJlci0xMDA6ICBtYXAtZ2V0KCRjbHItYW1iZXItbGlzdCwgXCIxMDBcIik7XG4kY2xyLWFtYmVyLTIwMDogIG1hcC1nZXQoJGNsci1hbWJlci1saXN0LCBcIjIwMFwiKTtcbiRjbHItYW1iZXItMzAwOiAgbWFwLWdldCgkY2xyLWFtYmVyLWxpc3QsIFwiMzAwXCIpO1xuJGNsci1hbWJlci00MDA6ICBtYXAtZ2V0KCRjbHItYW1iZXItbGlzdCwgXCI0MDBcIik7XG4kY2xyLWFtYmVyLTUwMDogIG1hcC1nZXQoJGNsci1hbWJlci1saXN0LCBcIjUwMFwiKTtcbiRjbHItYW1iZXItNjAwOiAgbWFwLWdldCgkY2xyLWFtYmVyLWxpc3QsIFwiNjAwXCIpO1xuJGNsci1hbWJlci03MDA6ICBtYXAtZ2V0KCRjbHItYW1iZXItbGlzdCwgXCI3MDBcIik7XG4kY2xyLWFtYmVyLTgwMDogIG1hcC1nZXQoJGNsci1hbWJlci1saXN0LCBcIjgwMFwiKTtcbiRjbHItYW1iZXItOTAwOiAgbWFwLWdldCgkY2xyLWFtYmVyLWxpc3QsIFwiOTAwXCIpO1xuJGNsci1hbWJlci1hMTAwOiBtYXAtZ2V0KCRjbHItYW1iZXItbGlzdCwgXCJhMTAwXCIpO1xuJGNsci1hbWJlci1hMjAwOiBtYXAtZ2V0KCRjbHItYW1iZXItbGlzdCwgXCJhMjAwXCIpO1xuJGNsci1hbWJlci1hNDAwOiBtYXAtZ2V0KCRjbHItYW1iZXItbGlzdCwgXCJhNDAwXCIpO1xuJGNsci1hbWJlci1hNzAwOiBtYXAtZ2V0KCRjbHItYW1iZXItbGlzdCwgXCJhNzAwXCIpO1xuXG5cbi8vXG4vLyBPcmFuZ2Vcbi8vXG5cbiRjbHItb3JhbmdlLWxpc3Q6IChcbiAgXCJiYXNlXCI6ICNmZjk4MDAsXG4gIFwiNTBcIjogICAjZmZmM2UwLFxuICBcIjEwMFwiOiAgI2ZmZTBiMixcbiAgXCIyMDBcIjogICNmZmNjODAsXG4gIFwiMzAwXCI6ICAjZmZiNzRkLFxuICBcIjQwMFwiOiAgI2ZmYTcyNixcbiAgXCI1MDBcIjogICNmZjk4MDAsXG4gIFwiNjAwXCI6ICAjZmI4YzAwLFxuICBcIjcwMFwiOiAgI2Y1N2MwMCxcbiAgXCI4MDBcIjogICNlZjZjMDAsXG4gIFwiOTAwXCI6ICAjZTY1MTAwLFxuICBcImExMDBcIjogI2ZmZDE4MCxcbiAgXCJhMjAwXCI6ICNmZmFiNDAsXG4gIFwiYTQwMFwiOiAjZmY5MTAwLFxuICBcImE3MDBcIjogI2ZmNmQwMFxuKTtcblxuJGNsci1vcmFuZ2U6ICAgICAgbWFwLWdldCgkY2xyLW9yYW5nZS1saXN0LCBcImJhc2VcIik7XG5cbiRjbHItb3JhbmdlLTUwOiAgIG1hcC1nZXQoJGNsci1vcmFuZ2UtbGlzdCwgXCI1MFwiKTtcbiRjbHItb3JhbmdlLTEwMDogIG1hcC1nZXQoJGNsci1vcmFuZ2UtbGlzdCwgXCIxMDBcIik7XG4kY2xyLW9yYW5nZS0yMDA6ICBtYXAtZ2V0KCRjbHItb3JhbmdlLWxpc3QsIFwiMjAwXCIpO1xuJGNsci1vcmFuZ2UtMzAwOiAgbWFwLWdldCgkY2xyLW9yYW5nZS1saXN0LCBcIjMwMFwiKTtcbiRjbHItb3JhbmdlLTQwMDogIG1hcC1nZXQoJGNsci1vcmFuZ2UtbGlzdCwgXCI0MDBcIik7XG4kY2xyLW9yYW5nZS01MDA6ICBtYXAtZ2V0KCRjbHItb3JhbmdlLWxpc3QsIFwiNTAwXCIpO1xuJGNsci1vcmFuZ2UtNjAwOiAgbWFwLWdldCgkY2xyLW9yYW5nZS1saXN0LCBcIjYwMFwiKTtcbiRjbHItb3JhbmdlLTcwMDogIG1hcC1nZXQoJGNsci1vcmFuZ2UtbGlzdCwgXCI3MDBcIik7XG4kY2xyLW9yYW5nZS04MDA6ICBtYXAtZ2V0KCRjbHItb3JhbmdlLWxpc3QsIFwiODAwXCIpO1xuJGNsci1vcmFuZ2UtOTAwOiAgbWFwLWdldCgkY2xyLW9yYW5nZS1saXN0LCBcIjkwMFwiKTtcbiRjbHItb3JhbmdlLWExMDA6IG1hcC1nZXQoJGNsci1vcmFuZ2UtbGlzdCwgXCJhMTAwXCIpO1xuJGNsci1vcmFuZ2UtYTIwMDogbWFwLWdldCgkY2xyLW9yYW5nZS1saXN0LCBcImEyMDBcIik7XG4kY2xyLW9yYW5nZS1hNDAwOiBtYXAtZ2V0KCRjbHItb3JhbmdlLWxpc3QsIFwiYTQwMFwiKTtcbiRjbHItb3JhbmdlLWE3MDA6IG1hcC1nZXQoJGNsci1vcmFuZ2UtbGlzdCwgXCJhNzAwXCIpO1xuXG5cbi8vXG4vLyBEZWVwIG9yYW5nZVxuLy9cblxuJGNsci1kZWVwLW9yYW5nZS1saXN0OiAoXG4gIFwiYmFzZVwiOiAjZmY1NzIyLFxuICBcIjUwXCI6ICAgI2ZiZTllNyxcbiAgXCIxMDBcIjogICNmZmNjYmMsXG4gIFwiMjAwXCI6ICAjZmZhYjkxLFxuICBcIjMwMFwiOiAgI2ZmOGE2NSxcbiAgXCI0MDBcIjogICNmZjcwNDMsXG4gIFwiNTAwXCI6ICAjZmY1NzIyLFxuICBcIjYwMFwiOiAgI2Y0NTExZSxcbiAgXCI3MDBcIjogICNlNjRhMTksXG4gIFwiODAwXCI6ICAjZDg0MzE1LFxuICBcIjkwMFwiOiAgI2JmMzYwYyxcbiAgXCJhMTAwXCI6ICNmZjllODAsXG4gIFwiYTIwMFwiOiAjZmY2ZTQwLFxuICBcImE0MDBcIjogI2ZmM2QwMCxcbiAgXCJhNzAwXCI6ICNkZDJjMDBcbik7XG5cbiRjbHItZGVlcC1vcmFuZ2U6ICAgICAgbWFwLWdldCgkY2xyLWRlZXAtb3JhbmdlLWxpc3QsIFwiYmFzZVwiKTtcblxuJGNsci1kZWVwLW9yYW5nZS01MDogICBtYXAtZ2V0KCRjbHItZGVlcC1vcmFuZ2UtbGlzdCwgXCI1MFwiKTtcbiRjbHItZGVlcC1vcmFuZ2UtMTAwOiAgbWFwLWdldCgkY2xyLWRlZXAtb3JhbmdlLWxpc3QsIFwiMTAwXCIpO1xuJGNsci1kZWVwLW9yYW5nZS0yMDA6ICBtYXAtZ2V0KCRjbHItZGVlcC1vcmFuZ2UtbGlzdCwgXCIyMDBcIik7XG4kY2xyLWRlZXAtb3JhbmdlLTMwMDogIG1hcC1nZXQoJGNsci1kZWVwLW9yYW5nZS1saXN0LCBcIjMwMFwiKTtcbiRjbHItZGVlcC1vcmFuZ2UtNDAwOiAgbWFwLWdldCgkY2xyLWRlZXAtb3JhbmdlLWxpc3QsIFwiNDAwXCIpO1xuJGNsci1kZWVwLW9yYW5nZS01MDA6ICBtYXAtZ2V0KCRjbHItZGVlcC1vcmFuZ2UtbGlzdCwgXCI1MDBcIik7XG4kY2xyLWRlZXAtb3JhbmdlLTYwMDogIG1hcC1nZXQoJGNsci1kZWVwLW9yYW5nZS1saXN0LCBcIjYwMFwiKTtcbiRjbHItZGVlcC1vcmFuZ2UtNzAwOiAgbWFwLWdldCgkY2xyLWRlZXAtb3JhbmdlLWxpc3QsIFwiNzAwXCIpO1xuJGNsci1kZWVwLW9yYW5nZS04MDA6ICBtYXAtZ2V0KCRjbHItZGVlcC1vcmFuZ2UtbGlzdCwgXCI4MDBcIik7XG4kY2xyLWRlZXAtb3JhbmdlLTkwMDogIG1hcC1nZXQoJGNsci1kZWVwLW9yYW5nZS1saXN0LCBcIjkwMFwiKTtcbiRjbHItZGVlcC1vcmFuZ2UtYTEwMDogbWFwLWdldCgkY2xyLWRlZXAtb3JhbmdlLWxpc3QsIFwiYTEwMFwiKTtcbiRjbHItZGVlcC1vcmFuZ2UtYTIwMDogbWFwLWdldCgkY2xyLWRlZXAtb3JhbmdlLWxpc3QsIFwiYTIwMFwiKTtcbiRjbHItZGVlcC1vcmFuZ2UtYTQwMDogbWFwLWdldCgkY2xyLWRlZXAtb3JhbmdlLWxpc3QsIFwiYTQwMFwiKTtcbiRjbHItZGVlcC1vcmFuZ2UtYTcwMDogbWFwLWdldCgkY2xyLWRlZXAtb3JhbmdlLWxpc3QsIFwiYTcwMFwiKTtcblxuXG4vL1xuLy8gQnJvd25cbi8vXG5cbiRjbHItYnJvd24tbGlzdDogKFxuICBcImJhc2VcIjogIzc5NTU0OCxcbiAgXCI1MFwiOiAgICNlZmViZTksXG4gIFwiMTAwXCI6ICAjZDdjY2M4LFxuICBcIjIwMFwiOiAgI2JjYWFhNCxcbiAgXCIzMDBcIjogICNhMTg4N2YsXG4gIFwiNDAwXCI6ICAjOGQ2ZTYzLFxuICBcIjUwMFwiOiAgIzc5NTU0OCxcbiAgXCI2MDBcIjogICM2ZDRjNDEsXG4gIFwiNzAwXCI6ICAjNWQ0MDM3LFxuICBcIjgwMFwiOiAgIzRlMzQyZSxcbiAgXCI5MDBcIjogICMzZTI3MjMsXG4pO1xuXG4kY2xyLWJyb3duOiAgICAgbWFwLWdldCgkY2xyLWJyb3duLWxpc3QsIFwiYmFzZVwiKTtcblxuJGNsci1icm93bi01MDogIG1hcC1nZXQoJGNsci1icm93bi1saXN0LCBcIjUwXCIpO1xuJGNsci1icm93bi0xMDA6IG1hcC1nZXQoJGNsci1icm93bi1saXN0LCBcIjEwMFwiKTtcbiRjbHItYnJvd24tMjAwOiBtYXAtZ2V0KCRjbHItYnJvd24tbGlzdCwgXCIyMDBcIik7XG4kY2xyLWJyb3duLTMwMDogbWFwLWdldCgkY2xyLWJyb3duLWxpc3QsIFwiMzAwXCIpO1xuJGNsci1icm93bi00MDA6IG1hcC1nZXQoJGNsci1icm93bi1saXN0LCBcIjQwMFwiKTtcbiRjbHItYnJvd24tNTAwOiBtYXAtZ2V0KCRjbHItYnJvd24tbGlzdCwgXCI1MDBcIik7XG4kY2xyLWJyb3duLTYwMDogbWFwLWdldCgkY2xyLWJyb3duLWxpc3QsIFwiNjAwXCIpO1xuJGNsci1icm93bi03MDA6IG1hcC1nZXQoJGNsci1icm93bi1saXN0LCBcIjcwMFwiKTtcbiRjbHItYnJvd24tODAwOiBtYXAtZ2V0KCRjbHItYnJvd24tbGlzdCwgXCI4MDBcIik7XG4kY2xyLWJyb3duLTkwMDogbWFwLWdldCgkY2xyLWJyb3duLWxpc3QsIFwiOTAwXCIpO1xuXG5cbi8vXG4vLyBHcmV5XG4vL1xuXG4kY2xyLWdyZXktbGlzdDogKFxuICBcImJhc2VcIjogIzllOWU5ZSxcbiAgXCI1MFwiOiAgICNmYWZhZmEsXG4gIFwiMTAwXCI6ICAjZjVmNWY1LFxuICBcIjIwMFwiOiAgI2VlZWVlZSxcbiAgXCIzMDBcIjogICNlMGUwZTAsXG4gIFwiNDAwXCI6ICAjYmRiZGJkLFxuICBcIjUwMFwiOiAgIzllOWU5ZSxcbiAgXCI2MDBcIjogICM3NTc1NzUsXG4gIFwiNzAwXCI6ICAjNjE2MTYxLFxuICBcIjgwMFwiOiAgIzQyNDI0MixcbiAgXCI5MDBcIjogICMyMTIxMjEsXG4pO1xuXG4kY2xyLWdyZXk6ICAgICBtYXAtZ2V0KCRjbHItZ3JleS1saXN0LCBcImJhc2VcIik7XG5cbiRjbHItZ3JleS01MDogIG1hcC1nZXQoJGNsci1ncmV5LWxpc3QsIFwiNTBcIik7XG4kY2xyLWdyZXktMTAwOiBtYXAtZ2V0KCRjbHItZ3JleS1saXN0LCBcIjEwMFwiKTtcbiRjbHItZ3JleS0yMDA6IG1hcC1nZXQoJGNsci1ncmV5LWxpc3QsIFwiMjAwXCIpO1xuJGNsci1ncmV5LTMwMDogbWFwLWdldCgkY2xyLWdyZXktbGlzdCwgXCIzMDBcIik7XG4kY2xyLWdyZXktNDAwOiBtYXAtZ2V0KCRjbHItZ3JleS1saXN0LCBcIjQwMFwiKTtcbiRjbHItZ3JleS01MDA6IG1hcC1nZXQoJGNsci1ncmV5LWxpc3QsIFwiNTAwXCIpO1xuJGNsci1ncmV5LTYwMDogbWFwLWdldCgkY2xyLWdyZXktbGlzdCwgXCI2MDBcIik7XG4kY2xyLWdyZXktNzAwOiBtYXAtZ2V0KCRjbHItZ3JleS1saXN0LCBcIjcwMFwiKTtcbiRjbHItZ3JleS04MDA6IG1hcC1nZXQoJGNsci1ncmV5LWxpc3QsIFwiODAwXCIpO1xuJGNsci1ncmV5LTkwMDogbWFwLWdldCgkY2xyLWdyZXktbGlzdCwgXCI5MDBcIik7XG5cblxuLy9cbi8vIEJsdWUgZ3JleVxuLy9cblxuJGNsci1ibHVlLWdyZXktbGlzdDogKFxuICBcImJhc2VcIjogIzYwN2Q4YixcbiAgXCI1MFwiOiAgICNlY2VmZjEsXG4gIFwiMTAwXCI6ICAjY2ZkOGRjLFxuICBcIjIwMFwiOiAgI2IwYmVjNSxcbiAgXCIzMDBcIjogICM5MGE0YWUsXG4gIFwiNDAwXCI6ICAjNzg5MDljLFxuICBcIjUwMFwiOiAgIzYwN2Q4YixcbiAgXCI2MDBcIjogICM1NDZlN2EsXG4gIFwiNzAwXCI6ICAjNDU1YTY0LFxuICBcIjgwMFwiOiAgIzM3NDc0ZixcbiAgXCI5MDBcIjogICMyNjMyMzgsXG4pO1xuXG4kY2xyLWJsdWUtZ3JleTogICAgIG1hcC1nZXQoJGNsci1ibHVlLWdyZXktbGlzdCwgXCJiYXNlXCIpO1xuXG4kY2xyLWJsdWUtZ3JleS01MDogIG1hcC1nZXQoJGNsci1ibHVlLWdyZXktbGlzdCwgXCI1MFwiKTtcbiRjbHItYmx1ZS1ncmV5LTEwMDogbWFwLWdldCgkY2xyLWJsdWUtZ3JleS1saXN0LCBcIjEwMFwiKTtcbiRjbHItYmx1ZS1ncmV5LTIwMDogbWFwLWdldCgkY2xyLWJsdWUtZ3JleS1saXN0LCBcIjIwMFwiKTtcbiRjbHItYmx1ZS1ncmV5LTMwMDogbWFwLWdldCgkY2xyLWJsdWUtZ3JleS1saXN0LCBcIjMwMFwiKTtcbiRjbHItYmx1ZS1ncmV5LTQwMDogbWFwLWdldCgkY2xyLWJsdWUtZ3JleS1saXN0LCBcIjQwMFwiKTtcbiRjbHItYmx1ZS1ncmV5LTUwMDogbWFwLWdldCgkY2xyLWJsdWUtZ3JleS1saXN0LCBcIjUwMFwiKTtcbiRjbHItYmx1ZS1ncmV5LTYwMDogbWFwLWdldCgkY2xyLWJsdWUtZ3JleS1saXN0LCBcIjYwMFwiKTtcbiRjbHItYmx1ZS1ncmV5LTcwMDogbWFwLWdldCgkY2xyLWJsdWUtZ3JleS1saXN0LCBcIjcwMFwiKTtcbiRjbHItYmx1ZS1ncmV5LTgwMDogbWFwLWdldCgkY2xyLWJsdWUtZ3JleS1saXN0LCBcIjgwMFwiKTtcbiRjbHItYmx1ZS1ncmV5LTkwMDogbWFwLWdldCgkY2xyLWJsdWUtZ3JleS1saXN0LCBcIjkwMFwiKTtcblxuXG4vL1xuLy8gQmxhY2tcbi8vXG5cbiRjbHItYmxhY2stbGlzdDogKFxuICBcImJhc2VcIjogIzAwMFxuKTtcblxuJGNsci1ibGFjazogbWFwLWdldCgkY2xyLWJsYWNrLWxpc3QsIFwiYmFzZVwiKTtcblxuXG4vL1xuLy8gV2hpdGVcbi8vXG5cbiRjbHItd2hpdGUtbGlzdDogKFxuICBcImJhc2VcIjogI2ZmZlxuKTtcblxuJGNsci13aGl0ZTogbWFwLWdldCgkY2xyLXdoaXRlLWxpc3QsIFwiYmFzZVwiKTtcblxuXG4vL1xuLy8gTGlzdCBmb3IgYWxsIENvbG9ycyBmb3IgbG9vcGluZ1xuLy9cblxuJGNsci1saXN0LWFsbDogKFxuICBcInJlZFwiOiAgICAgICAgICRjbHItcmVkLWxpc3QsXG4gIFwicGlua1wiOiAgICAgICAgJGNsci1waW5rLWxpc3QsXG4gIFwicHVycGxlXCI6ICAgICAgJGNsci1wdXJwbGUtbGlzdCxcbiAgXCJkZWVwLXB1cnBsZVwiOiAkY2xyLWRlZXAtcHVycGxlLWxpc3QsXG4gIFwiaW5kaWdvXCI6ICAgICAgJGNsci1pbmRpZ28tbGlzdCxcbiAgXCJibHVlXCI6ICAgICAgICAkY2xyLWJsdWUtbGlzdCxcbiAgXCJsaWdodC1ibHVlXCI6ICAkY2xyLWxpZ2h0LWJsdWUtbGlzdCxcbiAgXCJjeWFuXCI6ICAgICAgICAkY2xyLWN5YW4tbGlzdCxcbiAgXCJ0ZWFsXCI6ICAgICAgICAkY2xyLXRlYWwtbGlzdCxcbiAgXCJncmVlblwiOiAgICAgICAkY2xyLWdyZWVuLWxpc3QsXG4gIFwibGlnaHQtZ3JlZW5cIjogJGNsci1saWdodC1ncmVlbi1saXN0LFxuICBcImxpbWVcIjogICAgICAgICRjbHItbGltZS1saXN0LFxuICBcInllbGxvd1wiOiAgICAgICRjbHIteWVsbG93LWxpc3QsXG4gIFwiYW1iZXJcIjogICAgICAgJGNsci1hbWJlci1saXN0LFxuICBcIm9yYW5nZVwiOiAgICAgICRjbHItb3JhbmdlLWxpc3QsXG4gIFwiZGVlcC1vcmFuZ2VcIjogJGNsci1kZWVwLW9yYW5nZS1saXN0LFxuICBcImJyb3duXCI6ICAgICAgICRjbHItYnJvd24tbGlzdCxcbiAgXCJncmV5XCI6ICAgICAgICAkY2xyLWdyZXktbGlzdCxcbiAgXCJibHVlLWdyZXlcIjogICAkY2xyLWJsdWUtZ3JleS1saXN0LFxuICBcImJsYWNrXCI6ICAgICAgICRjbHItYmxhY2stbGlzdCxcbiAgXCJ3aGl0ZVwiOiAgICAgICAkY2xyLXdoaXRlLWxpc3Rcbik7XG5cblxuLy9cbi8vIFR5cG9ncmFwaHlcbi8vXG5cbiRjbHItdWktZGlzcGxheS00OiAkY2xyLWdyZXktNjAwO1xuJGNsci11aS1kaXNwbGF5LTM6ICRjbHItZ3JleS02MDA7XG4kY2xyLXVpLWRpc3BsYXktMjogJGNsci1ncmV5LTYwMDtcbiRjbHItdWktZGlzcGxheS0xOiAkY2xyLWdyZXktNjAwO1xuJGNsci11aS1oZWFkbGluZTogICRjbHItZ3JleS05MDA7XG4kY2xyLXVpLXRpdGxlOiAgICAgJGNsci1ncmV5LTkwMDtcbiRjbHItdWktc3ViaGVhZC0xOiAkY2xyLWdyZXktOTAwO1xuJGNsci11aS1ib2R5LTI6ICAgICRjbHItZ3JleS05MDA7XG4kY2xyLXVpLWJvZHktMTogICAgJGNsci1ncmV5LTkwMDtcbiRjbHItdWktY2FwdGlvbjogICAkY2xyLWdyZXktNjAwO1xuJGNsci11aS1tZW51OiAgICAgICRjbHItZ3JleS05MDA7XG4kY2xyLXVpLWJ1dHRvbjogICAgJGNsci1ncmV5LTkwMDtcbiIsIi8vXG4vLyBOYW1lOiAgICAgICAgICAgTWF0ZXJpYWwgU2hhZG93c1xuLy8gRGVzY3JpcHRpb246ICAgIE1peGlucyBmb3IgTWF0ZXJpYWwgRGVzaWduIFNoYWRvd3MuXG4vLyBWZXJzaW9uOiAgICAgICAgMy4wLjFcbi8vXG4vLyBBdXRob3I6ICAgICAgICAgRGVuaXMgTWFsaW5vY2hraW5cbi8vIEdpdDogICAgICAgICAgICBodHRwczovL2dpdGh1Yi5jb20vbXJtbG5jL21hdGVyaWFsLXNoYWRvd3Ncbi8vXG4vLyB0d2l0dGVyOiAgICAgICAgQG1ybWxuY1xuLy9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIE1peGluc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiB6LWRlcHRoLXRyYW5zaXRpb24oKSB7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgLjI4cyBjdWJpYy1iZXppZXIoLjQsIDAsIC4yLCAxKTtcbn1cblxuQG1peGluIHotZGVwdGgtZm9jdXMoKSB7XG4gIGJveC1zaGFkb3c6IDAgMCA4cHggcmdiYSgwLCAwLCAwLCAuMTgpLCAwIDhweCAxNnB4IHJnYmEoMCwgMCwgMCwgLjM2KTtcbn1cblxuQG1peGluIHotZGVwdGgtMmRwKCkge1xuICBib3gtc2hhZG93OiAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIC4xNCksXG4gICAgICAgICAgICAgIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgLjEyKSxcbiAgICAgICAgICAgICAgMCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAuMik7XG59XG5cbkBtaXhpbiB6LWRlcHRoLTNkcCgpIHtcbiAgYm94LXNoYWRvdzogMCAzcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAuMTQpLFxuICAgICAgICAgICAgICAwIDFweCA4cHggMCByZ2JhKDAsIDAsIDAsIC4xMiksXG4gICAgICAgICAgICAgIDAgM3B4IDNweCAtMnB4IHJnYmEoMCwgMCwgMCwgLjQpO1xufVxuXG5AbWl4aW4gei1kZXB0aC00ZHAoKSB7XG4gIGJveC1zaGFkb3c6IDAgNHB4IDVweCAwIHJnYmEoMCwgMCwgMCwgLjE0KSxcbiAgICAgICAgICAgICAgMCAxcHggMTBweCAwIHJnYmEoMCwgMCwgMCwgLjEyKSxcbiAgICAgICAgICAgICAgMCAycHggNHB4IC0xcHggcmdiYSgwLCAwLCAwLCAuNCk7XG59XG5cbkBtaXhpbiB6LWRlcHRoLTZkcCgpIHtcbiAgYm94LXNoYWRvdzogMCA2cHggMTBweCAwIHJnYmEoMCwgMCwgMCwgLjE0KSxcbiAgICAgICAgICAgICAgMCAxcHggMThweCAwIHJnYmEoMCwgMCwgMCwgLjEyKSxcbiAgICAgICAgICAgICAgMCAzcHggNXB4IC0xcHggcmdiYSgwLCAwLCAwLCAuNCk7XG59XG5cbkBtaXhpbiB6LWRlcHRoLThkcCgpIHtcbiAgYm94LXNoYWRvdzogMCA4cHggMTBweCAxcHggcmdiYSgwLCAwLCAwLCAuMTQpLFxuICAgICAgICAgICAgICAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIC4xMiksXG4gICAgICAgICAgICAgIDAgNXB4IDVweCAtM3B4IHJnYmEoMCwgMCwgMCwgLjQpO1xufVxuXG5AbWl4aW4gei1kZXB0aC0xNmRwKCkge1xuICBib3gtc2hhZG93OiAwIDE2cHggMjRweCAycHggcmdiYSgwLCAwLCAwLCAuMTQpLFxuICAgICAgICAgICAgICAwICA2cHggMzBweCA1cHggcmdiYSgwLCAwLCAwLCAuMTIpLFxuICAgICAgICAgICAgICAwICA4cHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgLjQpO1xufVxuXG5AbWl4aW4gei1kZXB0aC0yNGRwKCkge1xuICBib3gtc2hhZG93OiAwICA5cHggNDZweCAgOHB4IHJnYmEoMCwgMCwgMCwgLjE0KSxcbiAgICAgICAgICAgICAgMCAyNHB4IDM4cHggIDNweCByZ2JhKDAsIDAsIDAsIC4xMiksXG4gICAgICAgICAgICAgIDAgMTFweCAxNXB4IC03cHggcmdiYSgwLCAwLCAwLCAuNCk7XG59XG5cbkBtaXhpbiB6LWRlcHRoKCRkcDogMikge1xuICBAaWYgJGRwID09IDIge1xuICAgIEBpbmNsdWRlIHotZGVwdGgtMmRwKCk7XG4gIH0gQGVsc2UgaWYgJGRwID09IDMge1xuICAgIEBpbmNsdWRlIHotZGVwdGgtM2RwKCk7XG4gIH0gQGVsc2UgaWYgJGRwID09IDQge1xuICAgIEBpbmNsdWRlIHotZGVwdGgtNGRwKCk7XG4gIH0gQGVsc2UgaWYgJGRwID09IDYge1xuICAgIEBpbmNsdWRlIHotZGVwdGgtNmRwKCk7XG4gIH0gQGVsc2UgaWYgJGRwID09IDgge1xuICAgIEBpbmNsdWRlIHotZGVwdGgtOGRwKCk7XG4gIH0gQGVsc2UgaWYgJGRwID09IDE2IHtcbiAgICBAaW5jbHVkZSB6LWRlcHRoLTE2ZHAoKTtcbiAgfSBAZWxzZSBpZiAkZHAgPT0gMjQge1xuICAgIEBpbmNsdWRlIHotZGVwdGgtMjRkcCgpO1xuICB9XG59XG5cblxuLy8gQ2xhc3MgZ2VuZXJhdG9yXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQG1peGluIHotZGVwdGgtY2xhc3NlcygkdHJhbnNpdGlvbjogZmFsc2UsICRmb2N1czogZmFsc2UpIHtcbiAgQGlmICR0cmFuc2l0aW9uID09IHRydWUge1xuICAgICYtdHJhbnNpdGlvbiB7XG4gICAgICBAaW5jbHVkZSB6LWRlcHRoLXRyYW5zaXRpb24oKTtcbiAgICB9XG4gIH1cblxuICBAaWYgJGZvY3VzID09IHRydWUge1xuICAgICYtZm9jdXMge1xuICAgICAgQGluY2x1ZGUgei1kZXB0aC1mb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIC8vIFRoZSBhdmFpbGFibGUgdmFsdWVzIGZvciB0aGUgc2hhZG93IGRlcHRoXG4gIEBlYWNoICRkZXB0aCBpbiAyLCAzLCA0LCA2LCA4LCAxNiwgMjQge1xuICAgICYtI3skZGVwdGh9ZHAge1xuICAgICAgQGluY2x1ZGUgei1kZXB0aCgkZGVwdGgpO1xuICAgIH1cbiAgfVxufVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFZhcmlhYmxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBBY3RpdmUgKHRvZ2dsZWQpIGRyYXdlclxuJG1kLXRvZ2dsZV9fZHJhd2VyLS1jaGVja2VkOlxuICBcIltkYXRhLW1kLXRvZ2dsZT1cXFwiZHJhd2VyXFxcIl06Y2hlY2tlZCB+XCI7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzOiBiYXNlIGdyaWQgYW5kIGNvbnRhaW5lcnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU3RyZXRjaCBjb250YWluZXIgdG8gdmlld3BvcnQgYW5kIHNldCBiYXNlIGZvbnQtc2l6ZSB0byAxMHB4IGZvciBzaW1wbGVcbi8vIGNhbGN1bGF0aW9ucyBiYXNlIG9uIHJlbGF0aXZlIGVtcyAocmVtcylcbmh0bWwge1xuICBoZWlnaHQ6IDEwMCU7XG4gIC8vIEhhY2s6IG5vcm1hbGx5LCB3ZSB3b3VsZCBzZXQgdGhlIGJhc2UgZm9udC1zaXplIHRvIDYyLjUlLCBzbyB3ZSBjYW4gYmFzZVxuICAvLyBhbGwgY2FsY3VsYXRpb25zIG9uIDEwcHgsIGJ1dCBDaHJvbWl1bSBhbmQgQ2hyb21lIGRlZmluZSBhIG1pbmltYWwgZm9udFxuICAvLyBzaXplIG9mIDEyIGlmIHRoZSBzeXN0ZW0gbGFuZ3VhZ2UgaXMgc2V0IHRvIENoaW5lc2UuIEZvciB0aGlzIHJlYXNvbiB3ZVxuICAvLyBqdXN0IGRvdWJsZSB0aGUgZm9udC1zaXplLCBzZXQgaXQgdG8gMjBweCB3aGljaCBzZWVtcyB0byBkbyB0aGUgdHJpY2suXG4gIC8vXG4gIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vc3F1aWRmdW5rL21rZG9jcy1tYXRlcmlhbC9pc3N1ZXMvOTExXG4gIGZvbnQtc2l6ZTogMTI1JTtcbiAgLy8gSGFjazogc29tZSBicm93c2VycyBvbiBzb21lIG9wZXJhdGluZyBzeXN0ZW1zIGRvbid0IGFjY291bnQgZm9yIHNjcm9sbFxuICAvLyBiYXJzIHdoZW4gZmlyaW5nIG1lZGlhIHF1ZXJpZXMsIHNvIHdlIG5lZWQgdG8gZG8gdGhpcyBmb3Igc2FmZXR5LiBUaGlzXG4gIC8vIGN1cnJlbnRseSBpbXBhY3RzIHRoZSB0YWJsZSBvZiBjb250ZW50cyBjb21wb25lbnQgYmV0d2VlbiAxMjIwIGFuZCAxMjM0cHhcbiAgLy8gYW5kIGlzIHRvIGN1cnJlbnQga25vd2xlZGdlIG5vdCBmaXhhYmxlLlxuICBvdmVyZmxvdy14OiBoaWRkZW47XG5cbiAgLy8gW3NjcmVlbiBtZWRpdW0gK106IFNldCBiYXNlIGZvbnQtc2l6ZSB0byAxMXB4XG4gIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHNjcmVlbiBtZWRpdW0pIHtcbiAgICBmb250LXNpemU6IDEzNy41MCU7XG4gIH1cblxuICAvLyBbc2NyZWVuIGxhcmdlICtdOiBTZXQgYmFzZSBmb250LXNpemUgdG8gMTJweFxuICBAaW5jbHVkZSBicmVhay1mcm9tLWRldmljZShzY3JlZW4gbGFyZ2UpIHtcbiAgICBmb250LXNpemU6IDE1MCU7XG4gIH1cbn1cblxuLy8gU3RyZXRjaCBib2R5IHRvIGNvbnRhaW5lciBhbmQgbGVhdmUgcm9vbSBmb3IgZm9vdGVyXG5ib2R5IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIC8vIEhhY2s6IHJlc2V0IGZvbnQtc2l6ZSB0byAxMHB4LCBzbyB0aGUgc3BhY2luZyBmb3IgYWxsIGlubGluZSBlbGVtZW50cyBpc1xuICAvLyBjb3JyZWN0IGFnYWluLiBPdGhlcndpc2UgdGhlIHNwYWNpbmcgd291bGQgYmUgYmFzZWQgb24gMjBweC5cbiAgZm9udC1zaXplOiAwLjVyZW07IC8vIHN0eWxlbGludC1kaXNhYmxlLWxpbmUgdW5pdC13aGl0ZWxpc3RcblxuICAvLyBbdGFibGV0IHBvcnRyYWl0IC1dOiBMb2NrIGJvZHkgdG8gZGlzYWJsZSBzY3JvbGwgYnViYmxpbmdcbiAgQGluY2x1ZGUgYnJlYWstdG8tZGV2aWNlKHRhYmxldCBwb3J0cmFpdCkge1xuXG4gICAgLy8gTG9jayBib2R5IHRvIHZpZXdwb3J0IGhlaWdodCAoZS5nLiBpbiBzZWFyY2ggbW9kZSlcbiAgICAmW2RhdGEtbWQtc3RhdGU9XCJsb2NrXCJdIHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgIC8vIEhpZGUgY29udGFpbmVyIG9uIGlPUywgb3IgdGhlIGJvZHkgd2lsbCBub3QgYmUgbG9ja2VkIGNvcnJlY3RseVxuICAgICAgLmlvcyAmIC5tZC1jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBIb3Jpem9udGFsIHNlcGFyYXRvcnNcbmhyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogcHgycmVtKDFweCk7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbn1cblxuLy8gSW5saW5lIFNWRyBjb250YWluZXJcbi5tZC1zdmcge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vLyBUZW1wbGF0ZS13aWRlIGdyaWRcbi5tZC1ncmlkIHtcbiAgbWF4LXdpZHRoOiBweDJyZW0oMTIyMHB4KTtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn1cblxuLy8gUHJldmVudCBjb2xsYXBzZSBvZiBtYXJnaW4gd2hlbiBzZXR0aW5nIG1hcmdpbiBvbiBjaGlsZCBlbGVtZW50XG4ubWQtY29udGFpbmVyLFxuLm1kLW1haW4ge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLy8gQ29udGVudCB3cmFwcGVyIC0gdXNlIGRpc3BsYXk6IHRhYmxlIHRvIG1ha2UgdmFyaWFibGUtaGVpZ2h0IHN0aWNreSBmb290ZXJzXG4vLyB3b3JrIGFuZCBmaXhlZCB0YWJsZS1sYXlvdXQgZm9yIElFLCBzZWUgaHR0cDovL2JpdC5seS8yaFpvaFhMXG4ubWQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmctdG9wOiBweDJyZW0oNDhweCk7XG4gIHRhYmxlLWxheW91dDogZml4ZWQ7XG59XG5cbi8vIFRoZSBtYWluIGNvbnRlbnQgc2hvdWxkIHN0cmV0Y2ggdG8gbWF4aW11bSBoZWlnaHQgaW4gdGhlIHRhYmxlXG4ubWQtbWFpbiB7XG4gIGRpc3BsYXk6IHRhYmxlLXJvdztcbiAgaGVpZ2h0OiAxMDAlO1xuXG4gIC8vIEluY3JlYXNlIHRvcCBzcGFjaW5nIG9mIGNvbnRlbnQgYXJlYSB0byBnaXZlIHR5cG9ncmFwaHkgbW9yZSByb29tXG4gICZfX2lubmVyIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcGFkZGluZy10b3A6IHB4MnJlbSgyNHB4ICsgNnB4KTtcbiAgICAvLyBIYWNrOiBpbmR1Y2UgbWFyZ2luLWNvbGxhcHNlLCBiZWNhdXNlIG90aGVyd2lzZSB0aGUgc2lkZWJhciBoZWlnaHQgaXNcbiAgICAvLyBub3QgY2FsY3VsYXRlZCBjb3JyZWN0bHkgYW5kIHRoZSBvdmVyZmxvdyBwcm9wZXJ0eSBvbiB0aGlzIGVsZW1lbnQgbXVzdFxuICAgIC8vIGJlIGxlZnQgaW4gaW5pdGlhbCBzdGF0ZSBmb3IgdGFyZ2V0dGVkIGxpbmsgb2Zmc2V0cyB0byB3b3JrIHByb3Blcmx5XG4gICAgcGFkZGluZy1ib3R0b206IHB4MnJlbSgxcHgpO1xuICB9XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzOiBuYXZpZ2F0aW9uYWwgZWxlbWVudHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gVG9nZ2xlIGNoZWNrYm94XG4ubWQtdG9nZ2xlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLy8gT3ZlcmxheSBiZWxvdyBleHBhbmRlZCBkcmF3ZXJcbi5tZC1vdmVybGF5IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG4gIHRyYW5zaXRpb246XG4gICAgd2lkdGggICAwcyAwLjI1cyxcbiAgICBoZWlnaHQgIDBzIDAuMjVzLFxuICAgIG9wYWNpdHkgMC4yNXM7XG4gIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHQ7XG4gIG9wYWNpdHk6IDA7XG4gIHotaW5kZXg6IDM7XG5cbiAgLy8gW3RhYmxldCAtXTogVHJpZ2dlciBvdmVybGF5XG4gIEBpbmNsdWRlIGJyZWFrLXRvLWRldmljZSh0YWJsZXQpIHtcblxuICAgIC8vIEV4cGFuZGVkIGRyYXdlclxuICAgICN7JG1kLXRvZ2dsZV9fZHJhd2VyLS1jaGVja2VkfSAmIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgd2lkdGggICAwcyxcbiAgICAgICAgaGVpZ2h0ICAwcyxcbiAgICAgICAgb3BhY2l0eSAwLjI1cztcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuICB9XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzOiBmbGV4aWJsZSBlbGVtZW50cywgaW1wbGVtZW50ZWQgd2l0aCB0YWJsZSBsYXlvdXRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRmxleGlibGUgbGF5b3V0IGNvbnRhaW5lclxuLm1kLWZsZXgge1xuICBkaXNwbGF5OiB0YWJsZTtcblxuICAvLyBGbGV4aWJsZSBsYXlvdXQgY29udGFpbmVyIGNlbGwvZWxlbWVudFxuICAmX19jZWxsIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuXG4gICAgLy8gU2hyaW5rIHRvIG1pbmltdW0gd2lkdGhcbiAgICAmLS1zaHJpbmsge1xuICAgICAgd2lkdGg6IDAlO1xuICAgIH1cblxuICAgIC8vIFN0cmV0Y2ggdG8gbWF4aW11bSB3aWR0aFxuICAgICYtLXN0cmV0Y2gge1xuICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRhYmxlLWxheW91dDogZml4ZWQ7XG4gICAgfVxuICB9XG5cbiAgLy8gQXBwbHkgZWxsaXBzaXMgaW4gY2FzZSBvZiBvdmVyZmxvd2luZyB0ZXh0XG4gICZfX2VsbGlwc2lzIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSdWxlczogc2tpcCBsaW5rXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFNraXAgbGlua1xuLm1kLXNraXAge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiBweDJyZW0oMXB4KTtcbiAgaGVpZ2h0OiBweDJyZW0oMXB4KTtcbiAgbWFyZ2luOiBweDJyZW0oMTBweCk7XG4gIHBhZGRpbmc6IHB4MnJlbSg2cHgpIHB4MnJlbSgxMHB4KTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKHB4MnJlbSg4cHgpKTtcbiAgYm9yZGVyLXJhZGl1czogcHgycmVtKDJweCk7XG4gIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci1ibGFjaztcbiAgY29sb3I6ICRtZC1jb2xvci13aGl0ZTtcbiAgZm9udC1zaXplOiBtcygtMSk7XG4gIG9wYWNpdHk6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgLy8gU2hvdyBza2lwIGxpbmsgb24gZm9jdXNcbiAgJjpmb2N1cyB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGNsaXA6IGF1dG87XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zaXRpb246XG4gICAgICB0cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKSxcbiAgICAgIG9wYWNpdHkgICAwLjE3NXMgMC4wNzVzO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgei1pbmRleDogMTA7XG4gIH1cbn1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZXM6IHByaW50IHN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBBZGQgbWFyZ2lucyB0byBwYWdlXG5AcGFnZSB7XG4gIG1hcmdpbjogMjVtbTtcbn1cbiIsIi8vLy9cbi8vLyBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBNYXJ0aW4gRG9uYXRoIDxtYXJ0aW4uZG9uYXRoQHNxdWlkZnVuay5jb20+XG4vLy9cbi8vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSxcbi8vLyB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uXG4vLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsXG4vLy8gYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlXG4vLy8gU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vL1xuLy8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vLy9cbi8vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTi1JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMXG4vLy8gVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lOR1xuLy8vIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVJcbi8vLyBERUFMSU5HU1xuLy8vL1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSdWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBDb3B5IHRvIGNsaXBib2FyZFxuLm1kLWNsaXBib2FyZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBweDJyZW0oNnB4KTtcbiAgcmlnaHQ6IHB4MnJlbSg2cHgpO1xuICB3aWR0aDogcHgycmVtKDI4cHgpO1xuICBoZWlnaHQ6IHB4MnJlbSgyOHB4KTtcbiAgYm9yZGVyLXJhZGl1czogcHgycmVtKDJweCk7XG4gIGZvbnQtc2l6ZTogcHgycmVtKDE2cHgpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHotaW5kZXg6IDE7XG4gIC8vIEhhY2s6IHB1dCBldmVyeXRoaW5nIG9uIHRoZSBHUFUgdG8gb21pdCBmbGlja2VyaW5nXG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcblxuICAvLyBIaWRlIGZvciBwcmludFxuICBAbWVkaWEgcHJpbnQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAvLyBJY29uXG4gICY6OmJlZm9yZSB7XG4gICAgQGV4dGVuZCAlbWQtaWNvbjtcblxuICAgIHRyYW5zaXRpb246XG4gICAgICBjb2xvciAgIDAuMjVzLFxuICAgICAgb3BhY2l0eSAwLjI1cztcbiAgICBjb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodGVzdDtcbiAgICBjb250ZW50OiBcIlxcRTE0RFwiOyAvLyBjb250ZW50X2NvcHlcblxuICAgIC8vIFNob3cgb24gY29udGFpbmVyIGhvdmVyXG4gICAgcHJlOmhvdmVyICYsXG4gICAgLmNvZGVoaWxpdGU6aG92ZXIgJiB7XG4gICAgICBjb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodDtcbiAgICB9XG4gIH1cblxuICAvLyBGb2N1c2VkIG9yIGhvdmVyZWQgaWNvblxuICAmOmZvY3VzOjpiZWZvcmUsXG4gICY6aG92ZXI6OmJlZm9yZSB7XG4gICAgY29sb3I6ICRtZC1jb2xvci1hY2NlbnQ7XG4gIH1cblxuICAvLyBNZXNzYWdlXG4gICZfX21lc3NhZ2Uge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IHB4MnJlbSgzNHB4KTtcbiAgICBwYWRkaW5nOiBweDJyZW0oNnB4KSBweDJyZW0oMTBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKHB4MnJlbSg4cHgpKTtcbiAgICB0cmFuc2l0aW9uOlxuICAgICAgdHJhbnNmb3JtIDAuMjVzIGN1YmljLWJlemllcigwLjksIDAuMSwgMC45LCAwKSxcbiAgICAgIG9wYWNpdHkgICAwLjE3NXM7XG4gICAgYm9yZGVyLXJhZGl1czogcHgycmVtKDJweCk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodDtcbiAgICBjb2xvcjogJG1kLWNvbG9yLXdoaXRlO1xuICAgIGZvbnQtc2l6ZTogbXMoLTEpO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3BhY2l0eTogMDtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAgIC8vIEFjdGl2ZSBtZXNzYWdlXG4gICAgJi0tYWN0aXZlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgIHRyYW5zaXRpb246XG4gICAgICAgIHRyYW5zZm9ybSAwLjI1cyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLFxuICAgICAgICBvcGFjaXR5ICAgMC4xNzVzIDAuMDc1cztcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgICBwb2ludGVyLWV2ZW50czogaW5pdGlhbDtcbiAgICB9XG5cbiAgICAvLyBJbmplY3QgY29udGVudCBmcm9tIEFSSUEgbGFiZWxcbiAgICAmOjpiZWZvcmUge1xuICAgICAgY29udGVudDogYXR0cihhcmlhLWxhYmVsKTtcbiAgICB9XG5cbiAgICAvLyBQYWludCBhIG5pY2Ugc3BlZWNoIGJ1YmJsZVxuICAgICY6OmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICByaWdodDogcHgycmVtKC00cHgpO1xuICAgICAgd2lkdGg6IDA7XG4gICAgICBtYXJnaW4tdG9wOiBweDJyZW0oLTRweCk7XG4gICAgICBib3JkZXItd2lkdGg6IHB4MnJlbSg0cHgpIDAgcHgycmVtKDRweCkgcHgycmVtKDRweCk7XG4gICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCAkbWQtY29sb3ItYmxhY2stLWxpZ2h0O1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICB9XG4gIH1cbn1cbiIsIi8vLy9cbi8vLyBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBNYXJ0aW4gRG9uYXRoIDxtYXJ0aW4uZG9uYXRoQHNxdWlkZnVuay5jb20+XG4vLy9cbi8vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSxcbi8vLyB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uXG4vLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsXG4vLy8gYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlXG4vLy8gU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vL1xuLy8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vLy9cbi8vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTi1JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMXG4vLy8gVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lOR1xuLy8vIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVJcbi8vLyBERUFMSU5HU1xuLy8vL1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSdWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBDb250ZW50IGNvbnRhaW5lclxuLm1kLWNvbnRlbnQge1xuXG4gIC8vIFt0YWJsZXQgbGFuZHNjYXBlICtdOiBBZGQgc3BhY2UgZm9yIHRhYmxlIG9mIGNvbnRlbnRzXG4gIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHRhYmxldCBsYW5kc2NhcGUpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IHB4MnJlbSgyNDJweCk7XG5cbiAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgbWFyZ2luLXJpZ2h0OiBpbml0aWFsO1xuICAgICAgbWFyZ2luLWxlZnQ6IHB4MnJlbSgyNDJweCk7XG4gICAgfVxuICB9XG5cbiAgLy8gW3NjcmVlbiArXTogQWRkIHNwYWNlIGZvciB0YWJsZSBvZiBjb250ZW50c1xuICBAaW5jbHVkZSBicmVhay1mcm9tLWRldmljZShzY3JlZW4pIHtcbiAgICBtYXJnaW4tbGVmdDogcHgycmVtKDI0MnB4KTtcblxuICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IHB4MnJlbSgyNDJweCk7XG4gICAgfVxuICB9XG5cbiAgLy8gRGVmaW5lIHNwYWNpbmdcbiAgJl9faW5uZXIge1xuICAgIG1hcmdpbjogMCBweDJyZW0oMTZweCkgcHgycmVtKDI0cHgpO1xuICAgIHBhZGRpbmctdG9wOiBweDJyZW0oMTJweCk7XG5cbiAgICAvLyBbc2NyZWVuICtdOiBJbmNyZWFzZSBob3Jpem9udGFsIHNwYWNpbmdcbiAgICBAaW5jbHVkZSBicmVhay1mcm9tLWRldmljZShzY3JlZW4pIHtcbiAgICAgIG1hcmdpbi1yaWdodDogcHgycmVtKDI0cHgpO1xuICAgICAgbWFyZ2luLWxlZnQ6IHB4MnJlbSgyNHB4KTtcbiAgICB9XG5cbiAgICAvLyBIYWNrOiBhZGQgcHNldWRvIGVsZW1lbnQgZm9yIHNwYWNpbmcsIGFzIHRoZSBvdmVyZmxvdyBvZiB0aGUgY29udGVudFxuICAgIC8vIGNvbnRhaW5lciBtYXkgbm90IGJlIGhpZGRlbiBkdWUgdG8gYW4gaW1taW5lbnQgb2Zmc2V0IGVycm9yIG9uIHRhcmdldHNcbiAgICAmOjpiZWZvcmUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBoZWlnaHQ6IHB4MnJlbSg4cHgpO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICB9XG5cbiAgICAvLyBIYWNrOiByZW1vdmUgYm90dG9tIHNwYWNpbmcgb2YgbGFzdCBlbGVtZW50LCBkdWUgdG8gbWFyZ2luIGNvbGxhcHNlXG4gICAgPiA6bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbiAgfVxuXG4gIC8vIEljb25zXG4gICZfX2ljb24ge1xuICAgIEBleHRlbmQgJW1kLWljb25fX2J1dHRvbjtcblxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW46IHB4MnJlbSg4cHgpIDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBmbG9hdDogcmlnaHQ7XG5cbiAgICAvLyBPdmVycmlkZSBkZWZhdWx0IGxpbmsgY29sb3IgZm9yIGljb25zXG4gICAgLm1kLXR5cGVzZXQgJiB7XG4gICAgICBjb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodGVyO1xuICAgIH1cblxuICAgIC8vIEhpZGUgZm9yIHByaW50XG4gICAgQG1lZGlhIHByaW50IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG4iLCIvLy8vXG4vLy8gQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgTWFydGluIERvbmF0aCA8bWFydGluLmRvbmF0aEBzcXVpZGZ1bmsuY29tPlxuLy8vXG4vLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksXG4vLy8gdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8vIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLFxuLy8vIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZVxuLy8vIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vLy9cbi8vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy8vXG4vLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT04tSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTFxuLy8vIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkdcbi8vLyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSXG4vLy8gREVBTElOR1Ncbi8vLy9cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQXBwbGljYXRpb24gaGVhZGVyIChzdGF5cyBhbHdheXMgb24gdG9wKVxuLm1kLWhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiBweDJyZW0oNDhweCk7XG4gIHRyYW5zaXRpb246XG4gICAgYmFja2dyb3VuZC1jb2xvciAwLjI1cyxcbiAgICBjb2xvciAwLjI1cztcbiAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLXByaW1hcnk7XG4gIGNvbG9yOiAkbWQtY29sb3Itd2hpdGU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIHotaW5kZXg6IDI7XG4gIC8vIEhhY2s6IHB1dHRpbmcgdGhlIGhlYWRlciBvbiB0aGUgR1BVIGF2b2lkcyB1bm5lY2Vzc2FyeSByZXBhaW50c1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cbiAgLy8gQWx3YXlzIHNob3cgc2hhZG93LCBpbiBjYXNlIEphdmFTY3JpcHQgaXMgbm90IGF2YWlsYWJsZVxuICAubm8tanMgJiB7XG4gICAgdHJhbnNpdGlvbjogbm9uZTtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICB9XG5cbiAgLy8gU2hvdyBhbmQgYW5pbWF0ZSBzaGFkb3dcbiAgJltkYXRhLW1kLXN0YXRlPVwic2hhZG93XCJdIHtcbiAgICB0cmFuc2l0aW9uOlxuICAgICAgYmFja2dyb3VuZC1jb2xvciAwLjI1cyxcbiAgICAgIGNvbG9yIDAuMjVzLFxuICAgICAgYm94LXNoYWRvdyAwLjI1cztcbiAgICBib3gtc2hhZG93OlxuICAgICAgMCAwICAgICAgICAgICBweDJyZW0oNHB4KSByZ2JhKDAsIDAsIDAsIDAuMSksXG4gICAgICAwIHB4MnJlbSg0cHgpIHB4MnJlbSg4cHgpIHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgfVxuXG4gIC8vIEhpZGUgZm9yIHByaW50XG4gIEBtZWRpYSBwcmludCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4vLyBOYXZpZ2F0aW9uIHdpdGhpbiBoZWFkZXJcbi5tZC1oZWFkZXItbmF2IHtcbiAgcGFkZGluZzogMCBweDJyZW0oNHB4KTtcblxuICAvLyBJY29uIGJ1dHRvbnNcbiAgJl9fYnV0dG9uIHtcbiAgICBAZXh0ZW5kICVtZC1pY29uX19idXR0b247XG5cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cztcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgLy8gSG92ZXJlZCBpY29uXG4gICAgJjpob3ZlciB7XG4gICAgICBvcGFjaXR5OiAwLjc7XG4gICAgfVxuXG4gICAgLy8gU2V0IGNvcnJlY3QgZGlzcGxheSBvbiBpbWFnZSBvciBpY29uXG4gICAgJi5tZC1sb2dvICoge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgLy8gSGlkZSBzZWFyY2ggaWNvbiwgaWYgSmF2YVNjcmlwdCBpcyBub3QgYXZhaWxhYmxlLlxuICAgIC5uby1qcyAmLm1kLWljb24tLXNlYXJjaCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIC8vIFt0YWJsZXQgbGFuZHNjYXBlICtdOiBIaWRlIHRoZSBzZWFyY2ggaWNvblxuICAgIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHRhYmxldCBsYW5kc2NhcGUpIHtcblxuICAgICAgLy8gU2VhcmNoIGljb25cbiAgICAgICYubWQtaWNvbi0tc2VhcmNoIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBbdGFibGV0IC1dOiBIaWRlIHRoZSBob21lIGljb24gb3IgbG9nb1xuICAgIEBpbmNsdWRlIGJyZWFrLXRvLWRldmljZSh0YWJsZXQpIHtcblxuICAgICAgLy8gSG9tZSBpY29uIG9yIGxvZ29cbiAgICAgICYubWQtaWNvbi0taG9tZSxcbiAgICAgICYubWQtbG9nbyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gW3NjcmVlbiArXTogSGlkZSB0aGUgbWVudSBpY29uXG4gICAgQGluY2x1ZGUgYnJlYWstZnJvbS1kZXZpY2Uoc2NyZWVuKSB7XG5cbiAgICAgIC8vIE1lbnUgaWNvblxuICAgICAgJi5tZC1pY29uLS1tZW51IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBIZWFkZXIgdG9waWNzXG4gICZfX3RvcGljIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdHJhbnNpdGlvbjpcbiAgICAgIHRyYW5zZm9ybSAwLjRzIGN1YmljLWJlemllcigwLjEsIDAuNywgMC4xLCAxKSxcbiAgICAgIG9wYWNpdHkgICAwLjE1cztcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAvLyBQYWdlIHRpdGxlXG4gICAgJiArICYge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKHB4MnJlbSgyNXB4KSk7XG4gICAgICB0cmFuc2l0aW9uOlxuICAgICAgICB0cmFuc2Zvcm0gMC40cyBjdWJpYy1iZXppZXIoMSwgMC43LCAwLjEsIDAuMSksXG4gICAgICAgIG9wYWNpdHkgICAwLjE1cztcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuXG4gICAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWChweDJyZW0oLTI1cHgpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBJbmR1Y2UgZWxsaXBzaXMsIGlmIG5vIEphdmFTY3JpcHQgaXMgYXZhaWxhYmxlXG4gICAgLm5vLWpzICYge1xuICAgICAgcG9zaXRpb246IGluaXRpYWw7XG4gICAgfVxuXG4gICAgLy8gSGlkZSBwYWdlIHRpdGxlIGFzIGl0IGlzIGludmlzaWJsZSBhbnl3YXkgYW5kIHdpbGwgb3ZlcmZsb3cgdGhlIGhlYWRlclxuICAgIC5uby1qcyAmICsgJiB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIC8vIEhlYWRlciB0aXRsZSAtIHNldCBsaW5lIGhlaWdodCB0byBtYXRjaCBpY29uIGZvciBjb3JyZWN0IGFsaWdubWVudFxuICAmX190aXRsZSB7XG4gICAgcGFkZGluZzogMCBweDJyZW0oMjBweCk7XG4gICAgZm9udC1zaXplOiBweDJyZW0oMThweCk7XG4gICAgbGluZS1oZWlnaHQ6IHB4MnJlbSg0OHB4KTtcblxuICAgIC8vIFNob3cgcGFnZSB0aXRsZVxuICAgICZbZGF0YS1tZC1zdGF0ZT1cImFjdGl2ZVwiXSAubWQtaGVhZGVyLW5hdl9fdG9waWMge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKHB4MnJlbSgtMjVweCkpO1xuICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgdHJhbnNmb3JtIDAuNHMgY3ViaWMtYmV6aWVyKDEsIDAuNywgMC4xLCAwLjEpLFxuICAgICAgICBvcGFjaXR5ICAgMC4xNXM7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgei1pbmRleDogLTE7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgocHgycmVtKDI1cHgpKTtcbiAgICAgIH1cblxuICAgICAgLy8gUGFnZSB0aXRsZVxuICAgICAgJiArIC5tZC1oZWFkZXItbmF2X190b3BpYyB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgICB0cmFuc2Zvcm0gMC40cyBjdWJpYy1iZXppZXIoMC4xLCAwLjcsIDAuMSwgMSksXG4gICAgICAgICAgb3BhY2l0eSAgIDAuMTVzO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB6LWluZGV4OiAwO1xuICAgICAgICBwb2ludGVyLWV2ZW50czogaW5pdGlhbDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBSZXBvc2l0b3J5IGNvbnRhaW5pbmcgc291cmNlXG4gICZfX3NvdXJjZSB7XG4gICAgZGlzcGxheTogbm9uZTtcblxuICAgIC8vIFt0YWJsZXQgbGFuZHNjYXBlICtdOiBTaG93IHRoZSByZXBvc2lzdG9yeSBmcm9tIHRhYmxldFxuICAgIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHRhYmxldCBsYW5kc2NhcGUpIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IHB4MnJlbSgyMzRweCk7XG4gICAgICBtYXgtd2lkdGg6IHB4MnJlbSgyMzRweCk7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiBweDJyZW0oMTJweCk7XG5cbiAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogaW5pdGlhbDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiBweDJyZW0oMTJweCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvLy8vXG4vLy8gQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgTWFydGluIERvbmF0aCA8bWFydGluLmRvbmF0aEBzcXVpZGZ1bmsuY29tPlxuLy8vXG4vLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksXG4vLy8gdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8vIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLFxuLy8vIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZVxuLy8vIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vLy9cbi8vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy8vXG4vLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT04tSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTFxuLy8vIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkdcbi8vLyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSXG4vLy8gREVBTElOR1Ncbi8vLy9cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gSGVybyB0ZWFzZXJcbi5tZC1oZXJvIHtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjI1cztcbiAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLXByaW1hcnk7XG4gIGNvbG9yOiAkbWQtY29sb3Itd2hpdGU7XG4gIGZvbnQtc2l6ZTogbXMoMSk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgLy8gSW5uZXIgd3JhcHBlclxuICAmX19pbm5lciB7XG4gICAgbWFyZ2luLXRvcDogcHgycmVtKDIwcHgpO1xuICAgIHBhZGRpbmc6IHB4MnJlbSgxNnB4KSBweDJyZW0oMTZweCkgcHgycmVtKDhweCk7XG4gICAgdHJhbnNpdGlvbjpcbiAgICAgIHRyYW5zZm9ybSAwLjRzIGN1YmljLWJlemllcigwLjEsIDAuNywgMC4xLCAxKSxcbiAgICAgIG9wYWNpdHkgICAwLjI1cztcbiAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjFzO1xuXG4gICAgLy8gW3RhYmxldCAtXTogQ29tcGVuc2F0ZSBmb3IgbWlzc2luZyB0YWJzXG4gICAgQGluY2x1ZGUgYnJlYWstdG8tZGV2aWNlKHRhYmxldCkge1xuICAgICAgbWFyZ2luLXRvcDogcHgycmVtKDQ4cHgpO1xuICAgICAgbWFyZ2luLWJvdHRvbTogcHgycmVtKDI0cHgpO1xuICAgIH1cblxuICAgIC8vIEZhZGUtb3V0IHRhYnMgYmFja2dyb3VuZCB1cG9uIHNjcm9sbGluZ1xuICAgIFtkYXRhLW1kLXN0YXRlPVwiaGlkZGVuXCJdICYge1xuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkocHgycmVtKDEyLjVweCkpO1xuICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgdHJhbnNmb3JtIDBzICAgMC40cyxcbiAgICAgICAgb3BhY2l0eSAgIDAuMXMgMHM7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cblxuICAgIC8vIEFkanVzdCBib3R0b20gc3BhY2luZyBpZiB0aGVyZSBhcmUgbm8gdGFic1xuICAgIC5tZC1oZXJvLS1leHBhbmQgJiB7XG4gICAgICBtYXJnaW4tYm90dG9tOiBweDJyZW0oMjRweCk7XG4gICAgfVxuICB9XG59XG4iLCIvLy8vXG4vLy8gQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgTWFydGluIERvbmF0aCA8bWFydGluLmRvbmF0aEBzcXVpZGZ1bmsuY29tPlxuLy8vXG4vLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksXG4vLy8gdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8vIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLFxuLy8vIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZVxuLy8vIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vLy9cbi8vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy8vXG4vLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT04tSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTFxuLy8vIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkdcbi8vLyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSXG4vLy8gREVBTElOR1Ncbi8vLy9cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQXBwbGljYXRpb24gZm9vdGVyXG4ubWQtZm9vdGVyIHtcblxuICAvLyBIaWRlIGZvciBwcmludFxuICBAbWVkaWEgcHJpbnQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLy8gTmF2aWdhdGlvbiB3aXRoaW4gZm9vdGVyXG4ubWQtZm9vdGVyLW5hdiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci1ibGFjaztcbiAgY29sb3I6ICRtZC1jb2xvci13aGl0ZTtcblxuICAvLyBTZXQgc3BhY2luZ1xuICAmX19pbm5lciB7XG4gICAgcGFkZGluZzogcHgycmVtKDRweCk7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gIH1cblxuICAvLyBMaW5rcyB0byBwcmV2aW91cyBhbmQgbmV4dCBwYWdlXG4gICZfX2xpbmsge1xuICAgIHBhZGRpbmctdG9wOiBweDJyZW0oMjhweCk7XG4gICAgcGFkZGluZy1ib3R0b206IHB4MnJlbSg4cHgpO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXM7XG5cbiAgICAvLyBbdGFibGV0ICtdOiBTZXQgcHJvcG9ydGlvbmFsIHdpZHRoXG4gICAgQGluY2x1ZGUgYnJlYWstZnJvbS1kZXZpY2UodGFibGV0KSB7XG4gICAgICB3aWR0aDogNTAlO1xuICAgIH1cblxuICAgIC8vIEhvdmVyZWQgbGlua1xuICAgICY6aG92ZXIge1xuICAgICAgb3BhY2l0eTogMC43O1xuICAgIH1cblxuICAgIC8vIExpbmsgdG8gcHJldmlvdXMgcGFnZVxuICAgICYtLXByZXYge1xuICAgICAgd2lkdGg6IDI1JTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIH1cblxuICAgICAgLy8gVGl0bGVcbiAgICAgIC5tZC1mb290ZXItbmF2X190aXRsZSB7XG5cbiAgICAgICAgLy8gW21vYmlsZSAtXTogSGlkZSB0aXRsZSBmb3IgcHJldmlvdXMgcGFnZVxuICAgICAgICBAaW5jbHVkZSBicmVhay10by1kZXZpY2UobW9iaWxlKSB7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIExpbmsgdG8gbmV4dCBwYWdlXG4gICAgJi0tbmV4dCB7XG4gICAgICB3aWR0aDogNzUlO1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG5cbiAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gSWNvbiBidXR0b25zXG4gICZfX2J1dHRvbiB7XG4gICAgQGV4dGVuZCAlbWQtaWNvbl9fYnV0dG9uO1xuXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjI1cztcbiAgfVxuXG4gIC8vIExpbmsgdGl0bGUgLSBzZXQgbGluZSBoZWlnaHQgdG8gbWF0Y2ggaWNvbiBmb3IgY29ycmVjdCBhbGlnbm1lbnRcbiAgJl9fdGl0bGUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAwIHB4MnJlbSgyMHB4KTtcbiAgICBmb250LXNpemU6IHB4MnJlbSgxOHB4KTtcbiAgICBsaW5lLWhlaWdodDogcHgycmVtKDQ4cHgpO1xuICB9XG5cbiAgLy8gTGluayBkaXJlY3Rpb25cbiAgJl9fZGlyZWN0aW9uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBtYXJnaW4tdG9wOiBweDJyZW0oLTIwcHgpO1xuICAgIHBhZGRpbmc6IDAgcHgycmVtKDIwcHgpO1xuICAgIGNvbG9yOiAkbWQtY29sb3Itd2hpdGUtLWxpZ2h0O1xuICAgIGZvbnQtc2l6ZTogcHgycmVtKDE1cHgpO1xuICB9XG59XG5cbi8vIE5vbi1uYXZpZ2F0aW9uYWwgaW5mb3JtYXRpb25cbi5tZC1mb290ZXItbWV0YSB7XG4gIGJhY2tncm91bmQtY29sb3I6IG9wYWNpZnkoJG1kLWNvbG9yLWJsYWNrLCAwLjAyNSk7XG5cbiAgLy8gU2V0IHNwYWNpbmdcbiAgJl9faW5uZXIge1xuICAgIHBhZGRpbmc6IHB4MnJlbSg0cHgpO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICB9XG5cbiAgLy8gVXNlIGEgZGVjZW50IGNvbG9yIGZvciBub24taG92ZXJlZCBsaW5rcyBhbmQgZW5zdXJlIHNwZWNpZmljaXR5XG4gIGh0bWwgJi5tZC10eXBlc2V0IGEge1xuICAgIGNvbG9yOiAkbWQtY29sb3Itd2hpdGUtLWxpZ2h0O1xuXG4gICAgLy8gRm9jdXNlZCBvciBob3ZlcmVkIGxpbmtcbiAgICAmOmZvY3VzLFxuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6ICRtZC1jb2xvci13aGl0ZTtcbiAgICB9XG4gIH1cbn1cblxuLy8gQ29weXJpZ2h0IGFuZCB0aGVtZSBpbmZvcm1hdGlvblxuLm1kLWZvb3Rlci1jb3B5cmlnaHQge1xuICBtYXJnaW46IDAgcHgycmVtKDEycHgpO1xuICBwYWRkaW5nOiBweDJyZW0oOHB4KSAwO1xuICBjb2xvcjogJG1kLWNvbG9yLXdoaXRlLS1saWdodGVyO1xuICBmb250LXNpemU6IG1zKC0xKTtcblxuICAvLyBbdGFibGV0IHBvcnRyYWl0ICtdOiBTaG93IG5leHQgdG8gc29jaWFsIG1lZGlhIGxpbmtzXG4gIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHRhYmxldCBwb3J0cmFpdCkge1xuICAgIG1heC13aWR0aDogNzUlO1xuICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICB9XG4gIH1cblxuICAvLyBIaWdobGlnaHQgY29weXJpZ2h0IGluZm9ybWF0aW9uXG4gICZfX2hpZ2hsaWdodCB7XG4gICAgY29sb3I6ICRtZC1jb2xvci13aGl0ZS0tbGlnaHQ7XG4gIH1cbn1cblxuLy8gU29jaWFsIG1lZGlhIGxpbmtzXG4ubWQtZm9vdGVyLXNvY2lhbCB7XG4gIG1hcmdpbjogMCBweDJyZW0oOHB4KTtcbiAgcGFkZGluZzogcHgycmVtKDRweCkgMCBweDJyZW0oMTJweCk7XG5cbiAgLy8gW3RhYmxldCBwb3J0cmFpdCArXTogU2hvdyBuZXh0IHRvIGNvcHlyaWdodCBpbmZvcm1hdGlvblxuICBAaW5jbHVkZSBicmVhay1mcm9tLWRldmljZSh0YWJsZXQgcG9ydHJhaXQpIHtcbiAgICBwYWRkaW5nOiBweDJyZW0oMTJweCkgMDtcbiAgICBmbG9hdDogcmlnaHQ7XG5cbiAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICB9XG5cbiAgLy8gTGluayB3aXRoIGljb25cbiAgJl9fbGluayB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiBweDJyZW0oMzJweCk7XG4gICAgaGVpZ2h0OiBweDJyZW0oMzJweCk7XG4gICAgZm9udC1zaXplOiBweDJyZW0oMTZweCk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgLy8gQWRqdXN0IGxpbmUtaGVpZ2h0IHRvIG1hdGNoIGhlaWdodCBmb3IgY29ycmVjdCBhbGlnbm1lbnRcbiAgICAmOjpiZWZvcmUge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuOTtcbiAgICB9XG4gIH1cbn1cbiIsIkBmdW5jdGlvbiBtcy1mdW5jdGlvbigkdjogMCwgJGJhc2U6IGZhbHNlLCAkcmF0aW86IGZhbHNlLCAkdGhyZWFkOiBmYWxzZSwgJHNldHRpbmdzOiAkbW9kdWxhcnNjYWxlKSB7XG5cbiAgLy8gUGFyc2Ugc2V0dGluZ3NcbiAgJG1zLXNldHRpbmdzOiBtcy1zZXR0aW5ncygkYmFzZSwkcmF0aW8sJHRocmVhZCwkc2V0dGluZ3MpO1xuICAkYmFzZTogbnRoKCRtcy1zZXR0aW5ncywgMSk7XG4gICRyYXRpbzogbnRoKCRtcy1zZXR0aW5ncywgMik7XG5cbiAgLy8gUmVuZGVyIHRhcmdldCB2YWx1ZXMgZnJvbSBzZXR0aW5ncy5cbiAgQGlmIHVuaXQoJHJhdGlvKSAhPSAnJyB7XG4gICAgJHJhdGlvOiBtcy10YXJnZXQoJHJhdGlvLCRiYXNlKVxuICB9XG5cbiAgLy8gRmFzdCBjYWxjIGlmIG5vdCBtdWx0aSBzdHJhbmRlZFxuICBAaWYobGVuZ3RoKCRiYXNlKSA9PSAxKSB7XG4gICAgQHJldHVybiBtcy1wb3coJHJhdGlvLCAkdikgKiAkYmFzZTtcbiAgfVxuXG4gIC8vIENyZWF0ZSBuZXcgYmFzZSBhcnJheVxuICAkbXMtYmFzZXM6IG50aCgkYmFzZSwxKTtcblxuICAvLyBOb3JtYWxpemUgYmFzZSB2YWx1ZXNcbiAgQGZvciAkaSBmcm9tIDIgdGhyb3VnaCBsZW5ndGgoJGJhc2UpIHtcbiAgICAvLyBpbml0aWFsIGJhc2UgdmFsdWVcbiAgICAkbXMtYmFzZTogbnRoKCRiYXNlLCRpKTtcbiAgICAvLyBJZiB0aGUgYmFzZSBpcyBiaWdnZXIgdGhhbiB0aGUgbWFpbiBiYXNlXG4gICAgQGlmKCRtcy1iYXNlID4gbnRoKCRiYXNlLDEpKSB7XG4gICAgICAvLyBkaXZpZGUgdGhlIHZhbHVlIHVudGlsIGl0IGFsaWducyB3aXRoIG1haW4gYmFzZS5cbiAgICAgIEB3aGlsZSgkbXMtYmFzZSA+IG50aCgkYmFzZSwxKSkge1xuICAgICAgICAkbXMtYmFzZTogJG1zLWJhc2UgLyAkcmF0aW87XG4gICAgICB9XG4gICAgICAkbXMtYmFzZTogJG1zLWJhc2UgKiAkcmF0aW87XG4gICAgfVxuICAgIC8vIElmIHRoZSBiYXNlIGlzIHNtYWxsZXIgdGhhbiB0aGUgbWFpbiBiYXNlLlxuICAgIEBlbHNlIGlmICgkbXMtYmFzZSA8IG50aCgkYmFzZSwxKSkge1xuICAgICAgLy8gcHVtcCB1cCB0aGUgdmFsdWUgdW50aWwgaXQgYWxpZ25zIHdpdGggbWFpbiBiYXNlLlxuICAgICAgQHdoaWxlICRtcy1iYXNlIDwgbnRoKCRiYXNlLDEpIHtcbiAgICAgICAgJG1zLWJhc2U6ICRtcy1iYXNlICogJHJhdGlvO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBQdXNoIGludG8gbmV3IGFycmF5XG4gICAgJG1zLWJhc2VzOiBhcHBlbmQoJG1zLWJhc2VzLCRtcy1iYXNlKTtcbiAgfVxuXG4gIC8vIFNvcnQgYXJyYXkgZnJvbSBzbWFsbGVzdCB0byBsYXJnZXN0LlxuICAkbXMtYmFzZXM6IG1zLXNvcnQoJG1zLWJhc2VzKTtcblxuICAvLyBGaW5kIHN0ZXAgdG8gdXNlIGluIGNhbGN1bGF0aW9uXG4gICR2dGVwOiBmbG9vcigkdiAvIGxlbmd0aCgkbXMtYmFzZXMpKTtcbiAgLy8gRmluZCBiYXNlIHRvIHVzZSBpbiBjYWxjdWxhdGlvblxuICAkbXMtYmFzZTogcm91bmQoKCR2IC8gbGVuZ3RoKCRtcy1iYXNlcykgLSAkdnRlcCkgKiBsZW5ndGgoJG1zLWJhc2VzKSkgKyAxO1xuXG4gIEByZXR1cm4gbXMtcG93KCRyYXRpbywgJHZ0ZXApICogbnRoKCRtcy1iYXNlcywkbXMtYmFzZSk7XG59IiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIE5hdmlnYXRpb24gY29udGFpbmVyXG4ubWQtbmF2IHtcbiAgZm9udC1zaXplOiBweDJyZW0oMTRweCk7XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG5cbiAgLy8gTGlzdCB0aXRsZVxuICAmX190aXRsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogMCBweDJyZW0oMTJweCk7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgLy8gSWNvbiwgaGlkZGVuIGJ5IGRlZmF1bHRcbiAgICAmOjpiZWZvcmUge1xuICAgICAgQGV4dGVuZCAlbWQtaWNvbiwgJW1kLWljb25fX2J1dHRvbjtcblxuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGNvbnRlbnQ6IFwiXFxFNUM0XCI7IC8vIGFycm93X2JhY2tcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICBjb250ZW50OiBcIlxcRTVDOFwiOyAvLyBhcnJvd19mb3J3YXJkXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGlkZSBidXR0b24gYnkgZGVmYXVsdFxuICAgIC5tZC1uYXZfX2J1dHRvbiB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIC8vIExpc3Qgb2YgaXRlbXNcbiAgJl9fbGlzdCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgfVxuXG4gIC8vIExpc3QgaXRlbVxuICAmX19pdGVtIHtcbiAgICBwYWRkaW5nOiAwIHB4MnJlbSgxMnB4KTtcblxuICAgIC8vIEFkZCBib3R0b20gc3BhY2luZyB0byBsYXN0IGl0ZW1cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgcGFkZGluZy1ib3R0b206IHB4MnJlbSgxMnB4KTtcbiAgICB9XG5cbiAgICAvLyAybmQrIGxldmVsIGl0ZW1zXG4gICAgJiAmIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG5cbiAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogcHgycmVtKDEycHgpO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICB9XG5cbiAgICAgIC8vIFJlbW92ZSBib3R0b20gc3BhY2luZyBmb3IgbmVzdGVkIGl0ZW1zXG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBCdXR0b24gd2l0aCBsb2dvXG4gICZfX2J1dHRvbiB7XG4gICAgQGV4dGVuZCAlbWQtaWNvbiwgJW1kLWljb25fX2J1dHRvbjtcblxuICAgIC8vIFN0cmV0Y2ggaW1hZ2VcbiAgICBpbWcge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuICB9XG5cbiAgLy8gTGluayBpbnNpZGUgaXRlbVxuICAmX19saW5rIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAwLjYyNWVtO1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMTI1cztcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgIC8vIEljb25cbiAgICAmOjphZnRlciB7XG4gICAgICBAZXh0ZW5kICVtZC1pY29uO1xuXG4gICAgICAvLyBJdGVtIGNvbnRhaW5zIGEgbmVzdGVkIGxpc3RcbiAgICAgIC5tZC1uYXZfX2l0ZW0tLW5lc3RlZCA+ICYge1xuICAgICAgICBjb250ZW50OiBcIlxcRTMxM1wiOyAvLyBrZXlib2FyZF9hcnJvd19kb3duXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGlkZSBsaW5rIHRvIHRhYmxlIG9mIGNvbnRlbnRzIGJ5IGRlZmF1bHQgLSB0aGlzIHdpbGwgb25seSBtYXRjaCB0aGVcbiAgICAvLyB0YWJsZSBvZiBjb250ZW50cyBpbnNpZGUgdGhlIGRyYXdlciBiZWxvdyBhbmQgaW5jbHVkaW5nIHRhYmxldCBwb3J0cmFpdFxuICAgIGh0bWwgJltmb3I9XCJfX3RvY1wiXSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgICAvLyBIaWRlIHRhYmxlIG9mIGNvbnRlbnRzIGJ5IGRlZmF1bHRcbiAgICAgICYgfiAubWQtbmF2IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cblxuICAgICAgLy8gSGlkZSBpY29uIGZvciBjdXJyZW50IGl0ZW1cbiAgICAgICsgLm1kLW5hdl9fbGluazo6YWZ0ZXIge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEJsdXJyZWQgbGlua1xuICAgICZbZGF0YS1tZC1zdGF0ZT1cImJsdXJcIl0ge1xuICAgICAgY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHQ7XG4gICAgfVxuXG4gICAgLy8gQWN0aXZlIGxpbmtcbiAgICAmOmFjdGl2ZSxcbiAgICAmLS1hY3RpdmUge1xuICAgICAgY29sb3I6ICRtZC1jb2xvci1wcmltYXJ5O1xuICAgIH1cblxuICAgIC8vIFJlc2V0IGFjdGl2ZSBjb2xvciBmb3IgbmVzdGVkIGxpc3QgdGl0bGVzXG4gICAgLm1kLW5hdl9faXRlbS0tbmVzdGVkID4gJiB7XG4gICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB9XG5cbiAgICAvLyBGb2N1c2VkIG9yIGhvdmVyZWQgbGlua1xuICAgICY6Zm9jdXMsXG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogJG1kLWNvbG9yLWFjY2VudDtcbiAgICB9XG4gIH1cblxuICAvLyBSZXBvc2l0b3J5IGNvbnRhaW5pbmcgc291cmNlXG4gICZfX3NvdXJjZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC8vIFt0YWJsZXQgLV06IExheWVyZWQgbmF2aWdhdGlvblxuICBAaW5jbHVkZSBicmVhay10by1kZXZpY2UodGFibGV0KSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLXdoaXRlO1xuXG4gICAgLy8gU3RyZXRjaCBwcmltYXJ5IG5hdmlnYXRpb24gdG8gZHJhd2VyXG4gICAgJi0tcHJpbWFyeSxcbiAgICAmLS1wcmltYXJ5IC5tZC1uYXYge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB6LWluZGV4OiAxO1xuICAgIH1cblxuICAgIC8vIEFkanVzdCBzdHlsZXMgZm9yIHByaW1hcnkgbmF2aWdhdGlvblxuICAgICYtLXByaW1hcnkge1xuXG4gICAgICAvLyBMaXN0IHRpdGxlIGFuZCBpdGVtXG4gICAgICAubWQtbmF2X190aXRsZSxcbiAgICAgIC5tZC1uYXZfX2l0ZW0ge1xuICAgICAgICBmb250LXNpemU6IHB4MnJlbSgxNnB4KTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICAgIH1cblxuICAgICAgLy8gTGlzdCB0aXRsZSAtIGhpZ2hlciBzcGVjaWZpY2l0eSBpcyBuZWNlc3NhcnkgdG8gZW5zdXJlIHRoYXQgdGhlIHRpdGxlXG4gICAgICAvLyBpbnNpZGUgdGhlIGRyYXdlciBpcyBhbHdheXMgc3R5bGVkIGFjY29yZGluZ2x5XG4gICAgICBodG1sICYgLm1kLW5hdl9fdGl0bGUge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGhlaWdodDogcHgycmVtKDExMnB4KTtcbiAgICAgICAgcGFkZGluZzogcHgycmVtKDYwcHgpIHB4MnJlbSgxNnB4KSBweDJyZW0oNHB4KTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodGVzdDtcbiAgICAgICAgY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiBweDJyZW0oNDhweCk7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICAgICAvLyBJY29uXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHRvcDogcHgycmVtKDRweCk7XG4gICAgICAgICAgbGVmdDogcHgycmVtKDRweCk7XG4gICAgICAgICAgd2lkdGg6IHB4MnJlbSg0MHB4KTtcbiAgICAgICAgICBoZWlnaHQ6IHB4MnJlbSg0MHB4KTtcbiAgICAgICAgICBjb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE1haW4gbGlzdHNcbiAgICAgICAgfiAubWQtbmF2X19saXN0IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQtY29sb3Itd2hpdGU7XG4gICAgICAgICAgYm94LXNoYWRvdzogMCBweDJyZW0oMXB4KSAwICRtZC1jb2xvci1ibGFjay0tbGlnaHRlc3QgaW5zZXQ7XG5cbiAgICAgICAgICAvLyBSZW1vdmUgYm9yZGVyIGZvciBmaXJzdCBsaXN0IGl0ZW1cbiAgICAgICAgICAmID4gLm1kLW5hdl9faXRlbTpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFNpdGUgdGl0bGUgaW4gbWFpbiBuYXZpZ2F0aW9uXG4gICAgICAgICYtLXNpdGUge1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQtY29sb3ItcHJpbWFyeTtcbiAgICAgICAgICBjb2xvcjogJG1kLWNvbG9yLXdoaXRlO1xuXG4gICAgICAgICAgLy8gU2l0ZSBsb2dvXG4gICAgICAgICAgLm1kLW5hdl9fYnV0dG9uIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiBweDJyZW0oNHB4KTtcbiAgICAgICAgICAgIGxlZnQ6IHB4MnJlbSg0cHgpO1xuICAgICAgICAgICAgd2lkdGg6IHB4MnJlbSg2NHB4KTtcbiAgICAgICAgICAgIGhlaWdodDogcHgycmVtKDY0cHgpO1xuICAgICAgICAgICAgZm9udC1zaXplOiBweDJyZW0oNDhweCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gSGlkZSBiYWNrIGFycm93IGljb25cbiAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBodG1sIFtkaXI9XCJydGxcIl0gJiAubWQtbmF2X190aXRsZSB7XG5cbiAgICAgICAgLy8gSWNvblxuICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgIHJpZ2h0OiBweDJyZW0oNHB4KTtcbiAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU2l0ZSB0aXRsZSBpbiBtYWluIG5hdmlnYXRpb25cbiAgICAgICAgJi0tc2l0ZSAubWQtbmF2X19idXR0b24ge1xuICAgICAgICAgIHJpZ2h0OiBweDJyZW0oNHB4KTtcbiAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIExpc3Qgb2YgaXRlbXNcbiAgICAgIC5tZC1uYXZfX2xpc3Qge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgICAgfVxuXG4gICAgICAvLyBMaXN0IGl0ZW1cbiAgICAgIC5tZC1uYXZfX2l0ZW0ge1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBib3JkZXItdG9wOiBweDJyZW0oMXB4KSBzb2xpZCAkbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXN0O1xuXG4gICAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBJbmNyZWFzZSBzcGFjaW5nIHRvIGFjY291bnQgZm9yIGljb25cbiAgICAgICAgJi0tbmVzdGVkID4gLm1kLW5hdl9fbGluayB7XG4gICAgICAgICAgcGFkZGluZy1yaWdodDogcHgycmVtKDQ4cHgpO1xuXG4gICAgICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IHB4MnJlbSgxNnB4KTtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogcHgycmVtKDQ4cHgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIFJlcGxhY2UgaWNvbiB3aXRoIHJpZ2h0IGFycm93XG4gICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcXEUzMTVcIjsgLy8ga2V5Ym9hcmRfYXJyb3dfcmlnaHRcblxuICAgICAgICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICAgICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICAgICAgICBjb250ZW50OiBcIlxcRTMxNFwiOyAvLyBrZXlib2FyZF9hcnJvd19sZWZ0XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIExpbmsgaW5zaWRlIGl0ZW1cbiAgICAgIC5tZC1uYXZfX2xpbmsge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIHBhZGRpbmc6IHB4MnJlbSgxMnB4KSBweDJyZW0oMTZweCk7XG5cbiAgICAgICAgLy8gUm90YXRlIGljb25cbiAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICByaWdodDogcHgycmVtKDEycHgpO1xuICAgICAgICAgIG1hcmdpbi10b3A6IHB4MnJlbSgtMTJweCk7XG4gICAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICAgICAgZm9udC1zaXplOiBweDJyZW0oMjRweCk7XG5cbiAgICAgICAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICAgICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICAgICAgcmlnaHQ6IGluaXRpYWw7XG4gICAgICAgICAgICBsZWZ0OiBweDJyZW0oMTJweCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRhYmxlIG9mIGNvbnRlbnRzIGluc2lkZSBuYXZpZ2F0aW9uXG4gICAgICAubWQtbmF2LS1zZWNvbmRhcnkge1xuXG4gICAgICAgIC8vIFNldCBsaW5rcyB0byBzdGF0aWMgdG8gYXZvaWQgdW5uZWNlc3NhcnkgbGF5ZXJpbmdcbiAgICAgICAgLm1kLW5hdl9fbGluayB7XG4gICAgICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFNldCBuZXN0ZWQgbmF2aWdhdGlvbiBmb3IgdGFibGUgb2YgY29udGVudHMgdG8gc3RhdGljXG4gICAgICAgIC5tZC1uYXYge1xuICAgICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cbiAgICAgICAgICAvLyAzcmQgbGV2ZWwgbGlua1xuICAgICAgICAgIC5tZC1uYXZfX2xpbmsge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiBweDJyZW0oMjhweCk7XG5cbiAgICAgICAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogcHgycmVtKDI4cHgpO1xuICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IGluaXRpYWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gNHRoIGxldmVsIGxpbmtcbiAgICAgICAgICAubWQtbmF2IC5tZC1uYXZfX2xpbmsge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiBweDJyZW0oNDBweCk7XG5cbiAgICAgICAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogcHgycmVtKDQwcHgpO1xuICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IGluaXRpYWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gNXRoIGxldmVsIGxpbmtcbiAgICAgICAgICAubWQtbmF2IC5tZC1uYXYgLm1kLW5hdl9fbGluayB7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IHB4MnJlbSg1MnB4KTtcblxuICAgICAgICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICAgICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiBweDJyZW0oNTJweCk7XG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogaW5pdGlhbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyA2dGggbGV2ZWwgbGlua1xuICAgICAgICAgIC5tZC1uYXYgLm1kLW5hdiAubWQtbmF2IC5tZC1uYXZfX2xpbmsge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiBweDJyZW0oNjRweCk7XG5cbiAgICAgICAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogcHgycmVtKDY0cHgpO1xuICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IGluaXRpYWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGlkZSBuZXN0ZWQgbmF2aWdhdGlvbiBieSBkZWZhdWx0XG4gICAgLm1kLW5hdl9fdG9nZ2xlIH4gJiB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xuICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgdHJhbnNmb3JtIDAuMjVzIGN1YmljLWJlemllcigwLjgsIDAsIDAuNiwgMSksXG4gICAgICAgIG9wYWNpdHkgICAwLjEyNXMgMC4wNXM7XG4gICAgICBvcGFjaXR5OiAwO1xuXG4gICAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gICAgICB9XG5cbiAgICAgIC8vIEp1c3QgaGlkZSBuYXZpZ2F0aW9uLCBpZiBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydHMgM0QgdHJhbnNmb3Jtc1xuICAgICAgLm5vLWNzc3RyYW5zZm9ybXMzZCAmIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBFeHBhbmQgbmVzdGVkIG5hdmlnYXRpb24sIGlmIHRvZ2dsZSBpcyBjaGVja2VkXG4gICAgLm1kLW5hdl9fdG9nZ2xlOmNoZWNrZWQgfiAmIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgIHRyYW5zaXRpb246XG4gICAgICAgIHRyYW5zZm9ybSAwLjI1cyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLFxuICAgICAgICBvcGFjaXR5ICAgMC4xMjVzIDAuMTI1cztcbiAgICAgIG9wYWNpdHk6IDE7XG5cbiAgICAgIC8vIEp1c3Qgc2hvdyBuYXZpZ2F0aW9uLCBpZiBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydHMgM0QgdHJhbnNmb3Jtc1xuICAgICAgLm5vLWNzc3RyYW5zZm9ybXMzZCAmIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBbdGFibGV0IHBvcnRyYWl0IC1dOiBTaG93IHRhYmxlIG9mIGNvbnRlbnRzIGluIGRyYXdlclxuICBAaW5jbHVkZSBicmVhay10by1kZXZpY2UodGFibGV0IHBvcnRyYWl0KSB7XG5cbiAgICAvLyBTaG93IGxpbmsgdG8gdGFibGUgb2YgY29udGVudHMgLSBoaWdoZXIgc3BlY2lmaWNpdHkgaXMgbmVjZXNzYXJ5IHRvXG4gICAgLy8gZGlzcGxheSB0aGUgdGFibGUgb2YgY29udGVudHMgaW5zaWRlIHRoZSBkcmF3ZXJcbiAgICBodG1sICZfX2xpbmtbZm9yPVwiX190b2NcIl0ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiBweDJyZW0oNDhweCk7XG5cbiAgICAgIC8vIFVucm90YXRlIGljb24gZm9yIHRhYmxlIG9mIGNvbnRlbnRzXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgICBjb250ZW50OiBcIlxcRThERVwiOyAvLyB0b2NcbiAgICAgIH1cblxuICAgICAgLy8gSGlkZSBsaW5rIHRvIGN1cnJlbnQgaXRlbVxuICAgICAgKyAubWQtbmF2X19saW5rIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cblxuICAgICAgLy8gU2hvdyB0YWJsZSBvZiBjb250ZW50c1xuICAgICAgJiB+IC5tZC1uYXYge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgIGh0bWwgW2Rpcj1cInJ0bFwiXSAmX19saW5rIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IHB4MnJlbSgxNnB4KTtcbiAgICAgIHBhZGRpbmctbGVmdDogcHgycmVtKDQ4cHgpO1xuICAgIH1cblxuICAgIC8vIFJlcG9zaXRvcnkgY29udGFpbmluZyBzb3VyY2VcbiAgICAmX19zb3VyY2Uge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nOiAwIHB4MnJlbSg0cHgpO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbWl4KCRtZC1jb2xvci1wcmltYXJ5LCAkbWQtY29sb3ItYmxhY2ssIDc1JSk7XG4gICAgICBjb2xvcjogJG1kLWNvbG9yLXdoaXRlO1xuICAgIH1cbiAgfVxuXG4gIC8vIFtzY3JlZW4gK106IFRyZWUtbGlrZSBuYXZpZ2F0aW9uXG4gIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHNjcmVlbikge1xuXG4gICAgLy8gQW5pbWF0aW9uIGlzIG9ubHkgcG9zc2libGUgaWYgSmF2YVNjcmlwdCBpcyBhdmFpbGFibGUsIGFzIHRoZSBtYXgtaGVpZ2h0XG4gICAgLy8gcHJvcGVydHkgbXVzdCBiZSBjYWxjdWxhdGVkIGJlZm9yZSB0cmFuc2l0aW9uaW5nXG4gICAgJltkYXRhLW1kLXN0YXRlPVwiYW5pbWF0ZVwiXSB7XG4gICAgICB0cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuMjVzIGN1YmljLWJlemllcigwLjg2LCAwLCAwLjA3LCAxKTtcbiAgICB9XG5cbiAgICAvLyBIaWRlIG5lc3RlZCBuYXZpZ2F0aW9uIGJ5IGRlZmF1bHRcbiAgICAubWQtbmF2X190b2dnbGUgfiAmIHtcbiAgICAgIG1heC1oZWlnaHQ6IDA7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgICAvLyBKdXN0IGhpZGUgbGlua3MgZm9yIGFjY2Vzc2liaWxpdHkgaWYgSmF2YVNjcmlwdCBpcyBub3QgYXZhaWxhYmxlXG4gICAgICAubm8tanMgJiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRXhwYW5kIG5lc3RlZCBuYXZpZ2F0aW9uLCBpZiB0b2dnbGUgaXMgY2hlY2tlZFxuICAgIC5tZC1uYXZfX3RvZ2dsZTpjaGVja2VkIH4gJixcbiAgICAmW2RhdGEtbWQtc3RhdGU9XCJleHBhbmRcIl0ge1xuICAgICAgbWF4LWhlaWdodDogMTAwJTtcblxuICAgICAgLy8gSnVzdCBzaG93IGZvciBhY2Nlc3NpYmlsaXR5IGxpbmtzIGlmIEphdmFTY3JpcHQgaXMgbm90IGF2YWlsYWJsZVxuICAgICAgLm5vLWpzICYge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBIaWRlIHRpdGxlcyBmb3IgbmVzdGVkIG5hdmlnYXRpb25cbiAgICAmX19pdGVtLS1uZXN0ZWQgPiAubWQtbmF2ID4gJl9fdGl0bGUge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAvLyBMaW5rIGluc2lkZSBpdGVtIC0gaWRlYWxseSB0aGUgbGluayBkaXNwbGF5IG1ldGhvZCB3b3VsZCBiZSBzZXQgdG9cbiAgICAvLyBpbmxpbmUgb24gc2NyZWVuLCBidXQgdGhpcyBkb2Vzbid0IHdvcmsgd2l0aCB0ZXh0IGVsbGlwc2lzXG4gICAgJl9fbGluayB7XG5cbiAgICAgIC8vIEl0ZW0gY29udGFpbnMgYSBuZXN0ZWQgbGlzdFxuICAgICAgLm1kLW5hdl9faXRlbS0tbmVzdGVkID4gJjo6YWZ0ZXIge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDAuNDVlbSAwLjQ1ZW07XG4gICAgICAgIHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiAtMC4xMjVlbTtcblxuICAgICAgICAvLyBPbmx5IGFuaW1hdGUgaWNvbiB3aGVuIEphdmFTY3JpcHQgaXMgYXZhaWxhYmxlLCBhcyB0aGUgaGVpZ2h0IGNhblxuICAgICAgICAvLyBub3QgYmUgYW5pbWF0ZWQgYW55d2F5LCBhbmQgYmV0dGVyIG5vIGZ1biB0aGFuIGhhbGYgdGhlIGZ1blxuICAgICAgICAuanMgJiB7XG4gICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gUm90YXRlIGljb24gZm9yIGV4cGFuZGVkIGxpc3RzXG4gICAgICAubWQtbmF2X19pdGVtLS1uZXN0ZWQgLm1kLW5hdl9fdG9nZ2xlOmNoZWNrZWQgfiAmOjphZnRlciB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlWCgxODBkZWcpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFZhcmlhYmxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBBY3RpdmUgKHRvZ2dsZWQpIHNlYXJjaFxuJG1kLXRvZ2dsZV9fc2VhcmNoLS1jaGVja2VkOlxuICBcIltkYXRhLW1kLXRvZ2dsZT1cXFwic2VhcmNoXFxcIl06Y2hlY2tlZCB+IC5tZC1oZWFkZXJcIjtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU2VhcmNoIGNvbnRhaW5lclxuLm1kLXNlYXJjaCB7XG5cbiAgLy8gSGlkZSBzZWFyY2gsIGlmIEphdmFTY3JpcHQgaXMgbm90IGF2YWlsYWJsZS5cbiAgLm5vLWpzICYge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAvLyBbdGFibGV0IGxhbmRzY2FwZSArXTogSGVhZGVyLWVtYmVkZGVkIHNlYXJjaFxuICBAaW5jbHVkZSBicmVhay1mcm9tLWRldmljZSh0YWJsZXQgbGFuZHNjYXBlKSB7XG4gICAgcGFkZGluZzogcHgycmVtKDRweCk7XG4gIH1cblxuICAvLyBTZWFyY2ggbW9kYWwgb3ZlcmxheVxuICAmX19vdmVybGF5IHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHotaW5kZXg6IDE7XG5cbiAgICAvLyBbdGFibGV0IHBvcnRyYWl0IC1dOiBGdWxsLXNjcmVlbiBzZWFyY2ggYmFyXG4gICAgQGluY2x1ZGUgYnJlYWstdG8tZGV2aWNlKHRhYmxldCBwb3J0cmFpdCkge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiBweDJyZW0oNHB4KTtcbiAgICAgIGxlZnQ6IHB4MnJlbSg0cHgpO1xuICAgICAgd2lkdGg6IHB4MnJlbSgzNnB4KTtcbiAgICAgIGhlaWdodDogcHgycmVtKDM2cHgpO1xuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyO1xuICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgdHJhbnNmb3JtIDAuM3MgMC4xcyxcbiAgICAgICAgb3BhY2l0eSAgIDAuMnMgMC4ycztcbiAgICAgIGJvcmRlci1yYWRpdXM6IHB4MnJlbSgyMHB4KTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci13aGl0ZTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICByaWdodDogcHgycmVtKDRweCk7XG4gICAgICAgIGxlZnQ6IGluaXRpYWw7XG4gICAgICB9XG5cbiAgICAgIC8vIEV4cGFuZGVkIG92ZXJsYXlcbiAgICAgICN7JG1kLXRvZ2dsZV9fc2VhcmNoLS1jaGVja2VkfSAmIHtcbiAgICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgICB0cmFuc2Zvcm0gMC40cyxcbiAgICAgICAgICBvcGFjaXR5ICAgMC4xcztcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTZXQgc2NhbGUgZmFjdG9yc1xuICAgICN7JG1kLXRvZ2dsZV9fc2VhcmNoLS1jaGVja2VkfSAmIHtcblxuICAgICAgLy8gW21vYmlsZSBwb3J0cmFpdCAtXTogU2NhbGUgdXAgNDUgdGltZXNcbiAgICAgIEBpbmNsdWRlIGJyZWFrLXRvLWRldmljZShtb2JpbGUgcG9ydHJhaXQpIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSg0NSk7XG4gICAgICB9XG5cbiAgICAgIC8vIFttb2JpbGUgbGFuZHNjYXBlXTogU2NhbGUgdXAgNjAgdGltZXNcbiAgICAgIEBpbmNsdWRlIGJyZWFrLWF0LWRldmljZShtb2JpbGUgbGFuZHNjYXBlKSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoNjApO1xuICAgICAgfVxuXG4gICAgICAvLyBbdGFibGV0IHBvcnRyYWl0XTogU2NhbGUgdXAgNzUgdGltZXNcbiAgICAgIEBpbmNsdWRlIGJyZWFrLWF0LWRldmljZSh0YWJsZXQgcG9ydHJhaXQpIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSg3NSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gW3RhYmxldCBsYW5kc2NhcGUgK106IE92ZXJsYXkgZm9yIGJldHRlciBmb2N1cyBvbiBzZWFyY2hcbiAgICBAaW5jbHVkZSBicmVhay1mcm9tLWRldmljZSh0YWJsZXQgbGFuZHNjYXBlKSB7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDA7XG4gICAgICBoZWlnaHQ6IDA7XG4gICAgICB0cmFuc2l0aW9uOlxuICAgICAgICB3aWR0aCAgIDBzIDAuMjVzLFxuICAgICAgICBoZWlnaHQgIDBzIDAuMjVzLFxuICAgICAgICBvcGFjaXR5IDAuMjVzO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgbGVmdDogaW5pdGlhbDtcbiAgICAgIH1cblxuICAgICAgLy8gRXhwYW5kZWQgb3ZlcmxheVxuICAgICAgI3skbWQtdG9nZ2xlX19zZWFyY2gtLWNoZWNrZWR9ICYge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICB0cmFuc2l0aW9uOlxuICAgICAgICAgIHdpZHRoICAgMHMsXG4gICAgICAgICAgaGVpZ2h0ICAwcyxcbiAgICAgICAgICBvcGFjaXR5IDAuMjVzO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFNlYXJjaCBtb2RhbCB3cmFwcGVyXG4gICZfX2lubmVyIHtcblxuICAgIC8vIFt0YWJsZXQgcG9ydHJhaXQgLV06IFB1dCBzZWFyY2ggbW9kYWwgb2ZmLWNhbnZhcyBieSBkZWZhdWx0XG4gICAgQGluY2x1ZGUgYnJlYWstdG8tZGV2aWNlKHRhYmxldCBwb3J0cmFpdCkge1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMTAwJTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUlKTtcbiAgICAgIHRyYW5zaXRpb246XG4gICAgICAgIHJpZ2h0ICAgICAwcyAgICAwLjNzLFxuICAgICAgICBsZWZ0ICAgICAgMHMgICAgMC4zcyxcbiAgICAgICAgdHJhbnNmb3JtIDAuMTVzIDAuMTVzIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSksXG4gICAgICAgIG9wYWNpdHkgICAwLjE1cyAwLjE1cztcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB6LWluZGV4OiAyO1xuXG4gICAgICAvLyBBY3RpdmUgc2VhcmNoIG1vZGFsXG4gICAgICAjeyRtZC10b2dnbGVfX3NlYXJjaC0tY2hlY2tlZH0gJiB7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgICByaWdodCAgICAgMHMgICAgMHMsXG4gICAgICAgICAgbGVmdCAgICAgIDBzICAgIDBzLFxuICAgICAgICAgIHRyYW5zZm9ybSAwLjE1cyAwLjE1cyBjdWJpYy1iZXppZXIoMC4xLCAwLjcsIDAuMSwgMSksXG4gICAgICAgICAgb3BhY2l0eSAgIDAuMTVzIDAuMTVzO1xuICAgICAgICBvcGFjaXR5OiAxO1xuXG4gICAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgIGxlZnQ6IGluaXRpYWw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBodG1sIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgIHJpZ2h0OiAxMDAlO1xuICAgICAgICBsZWZ0OiBpbml0aWFsO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBbdGFibGV0IGxhbmRzY2FwZSArXTogSGVhZGVyLWVtYmVkZGVkIHNlYXJjaFxuICAgIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHRhYmxldCBsYW5kc2NhcGUpIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHdpZHRoOiBweDJyZW0oMjMwcHgpO1xuICAgICAgbWFyZ2luLXJpZ2h0OiBweDJyZW0oMTZweCk7XG4gICAgICBwYWRkaW5nOiBweDJyZW0oMnB4KSAwO1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgdHJhbnNpdGlvbjogd2lkdGggMC4yNXMgY3ViaWMtYmV6aWVyKDAuMSwgMC43LCAwLjEsIDEpO1xuXG4gICAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogaW5pdGlhbDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IHB4MnJlbSgxNnB4KTtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gW3NjcmVlbiArXTogSW5jcmVhc2Ugc3BhY2luZyBvZiBzZWFyY2ggYmFyXG4gICAgQGluY2x1ZGUgYnJlYWstZnJvbS1kZXZpY2Uoc2NyZWVuKSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IHB4MnJlbSgyNHB4KTtcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICBtYXJnaW4tbGVmdDogcHgycmVtKDI0cHgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFNldCBtYXhpbXVtIHdpZHRoXG4gICAgI3skbWQtdG9nZ2xlX19zZWFyY2gtLWNoZWNrZWR9ICYge1xuXG4gICAgICAvLyBbdGFibGV0IGxhbmRzY2FwZV06IERvIG5vdCBvdmVybGF5IHRpdGxlXG4gICAgICBAaW5jbHVkZSBicmVhay1hdC1kZXZpY2UodGFibGV0IGxhbmRzY2FwZSkge1xuICAgICAgICB3aWR0aDogcHgycmVtKDQ2OHB4KTtcbiAgICAgIH1cblxuICAgICAgLy8gW3NjcmVlbiArXTogTWF0Y2ggY29udGVudCB3aWR0aFxuICAgICAgQGluY2x1ZGUgYnJlYWstZnJvbS1kZXZpY2Uoc2NyZWVuKSB7XG4gICAgICAgIHdpZHRoOiBweDJyZW0oNjg4cHgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFNlYXJjaCBmb3JtXG4gICZfX2Zvcm0ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIC8vIFt0YWJsZXQgbGFuZHNjYXBlICtdOiBIZWFkZXItZW1iZWRkZWQgc2VhcmNoXG4gICAgQGluY2x1ZGUgYnJlYWstZnJvbS1kZXZpY2UodGFibGV0IGxhbmRzY2FwZSkge1xuICAgICAgYm9yZGVyLXJhZGl1czogcHgycmVtKDJweCk7XG4gICAgfVxuICB9XG5cbiAgLy8gU2VhcmNoIGlucHV0XG4gICZfX2lucHV0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogMCBweDJyZW0oNDRweCkgMCBweDJyZW0oNzJweCk7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgei1pbmRleDogMjtcblxuICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICBwYWRkaW5nOiAwIHB4MnJlbSg3MnB4KSAwIHB4MnJlbSg0NHB4KTtcbiAgICB9XG5cbiAgICAvLyBUcmFuc2l0aW9uIG9uIHBsYWNlaG9sZGVyXG4gICAgJjo6cGxhY2Vob2xkZXIge1xuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4yNXMgY3ViaWMtYmV6aWVyKDAuMSwgMC43LCAwLjEsIDEpO1xuICAgIH1cblxuICAgIC8vIFBsYWNlaG9sZGVyIGFuZCBpY29uIGNvbG9yIGluIGFjdGl2ZSBzdGF0ZVxuICAgIH4gLm1kLXNlYXJjaF9faWNvbixcbiAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICBjb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodDtcbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgdGhlIFwieFwiIHJlbmRlcmVkIGJ5IEludGVybmV0IEV4cGxvcmVyXG4gICAgJjo6LW1zLWNsZWFyIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgLy8gW3RhYmxldCBwb3J0cmFpdCAtXTogRnVsbC1zY3JlZW4gc2VhcmNoIGJhclxuICAgIEBpbmNsdWRlIGJyZWFrLXRvLWRldmljZSh0YWJsZXQgcG9ydHJhaXQpIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiBweDJyZW0oNDhweCk7XG4gICAgICBmb250LXNpemU6IHB4MnJlbSgxOHB4KTtcbiAgICB9XG5cbiAgICAvLyBbdGFibGV0IGxhbmRzY2FwZSArXTogSGVhZGVyLWVtYmVkZGVkIHNlYXJjaFxuICAgIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHRhYmxldCBsYW5kc2NhcGUpIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiBweDJyZW0oMzZweCk7XG4gICAgICBwYWRkaW5nLWxlZnQ6IHB4MnJlbSg0NHB4KTtcbiAgICAgIHRyYW5zaXRpb246XG4gICAgICAgIGJhY2tncm91bmQtY29sb3IgMC4yNXMgY3ViaWMtYmV6aWVyKDAuMSwgMC43LCAwLjEsIDEpLFxuICAgICAgICBjb2xvciAgICAgICAgICAgIDAuMjVzIGN1YmljLWJlemllcigwLjEsIDAuNywgMC4xLCAxKTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IHB4MnJlbSgycHgpO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodGVyO1xuICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICBmb250LXNpemU6IG1zKDApO1xuXG4gICAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IHB4MnJlbSg0NHB4KTtcbiAgICAgIH1cblxuICAgICAgLy8gSWNvbiBjb2xvclxuICAgICAgKyAubWQtc2VhcmNoX19pY29uIHtcbiAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICB9XG5cbiAgICAgIC8vIFBsYWNlaG9sZGVyIGNvbG9yXG4gICAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICAgIGNvbG9yOiAkbWQtY29sb3Itd2hpdGUtLWxpZ2h0O1xuICAgICAgfVxuXG4gICAgICAvLyBIb3ZlcmVkIHNlYXJjaCBmaWVsZFxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci13aGl0ZS0tbGlnaHRlc3Q7XG4gICAgICB9XG5cbiAgICAgIC8vIFNldCBsaWdodCBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBzZWFyY2ggZmllbGRcbiAgICAgICN7JG1kLXRvZ2dsZV9fc2VhcmNoLS1jaGVja2VkfSAmIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogcHgycmVtKDJweCkgcHgycmVtKDJweCkgMCAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQtY29sb3Itd2hpdGU7XG4gICAgICAgIGNvbG9yOiAkbWQtY29sb3ItYmxhY2s7XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGNsaXA7XG5cbiAgICAgICAgLy8gUGxhY2Vob2xkZXIgYW5kIGljb24gY29sb3IgaW4gYWN0aXZlIHN0YXRlXG4gICAgICAgICsgLm1kLXNlYXJjaF9faWNvbixcbiAgICAgICAgJjo6cGxhY2Vob2xkZXIge1xuICAgICAgICAgIGNvbG9yOiAkbWQtY29sb3ItYmxhY2stLWxpZ2h0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gSWNvbnNcbiAgJl9faWNvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zaXRpb246XG4gICAgICBjb2xvciAgIDAuMjVzIGN1YmljLWJlemllcigwLjEsIDAuNywgMC4xLCAxKSxcbiAgICAgIG9wYWNpdHkgMC4yNXM7XG4gICAgZm9udC1zaXplOiAkbWQtaWNvbi1zaXplO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB6LWluZGV4OiAyO1xuXG4gICAgLy8gSG92ZXJlZCBpY29uXG4gICAgJjpob3ZlciB7XG4gICAgICBvcGFjaXR5OiAwLjc7XG4gICAgfVxuXG4gICAgLy8gU2VhcmNoIGljb25cbiAgICAmW2Zvcj1cIl9fc2VhcmNoXCJdIHtcbiAgICAgIHRvcDogcHgycmVtKDZweCk7XG4gICAgICBsZWZ0OiBweDJyZW0oMTBweCk7XG5cbiAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgcmlnaHQ6IHB4MnJlbSgxMHB4KTtcbiAgICAgICAgbGVmdDogaW5pdGlhbDtcbiAgICAgIH1cblxuICAgICAgLy8gU2V0IHNlYXJjaCBpY29uIG9uIHBzZXVkbyBjbGFzcywgc28gaXQgY2FuIGJlIG92ZXJyaWRkZW4gZm9yIG1vYmlsZVxuICAgICAgLy8gYW5kIHRhYmxldCB3aGVuIHRoZSBzZWFyY2ggaXMgcmVuZGVyZWQgaW4gYW4gb3ZlcmxheVxuICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJcXEU4QjZcIjsgLy8gc2VhcmNoXG4gICAgICB9XG5cbiAgICAgIC8vIFt0YWJsZXQgcG9ydHJhaXQgLV06IEZ1bGwtc2NyZWVuIHNlYXJjaCBiYXJcbiAgICAgIEBpbmNsdWRlIGJyZWFrLXRvLWRldmljZSh0YWJsZXQgcG9ydHJhaXQpIHtcbiAgICAgICAgdG9wOiBweDJyZW0oMTJweCk7XG4gICAgICAgIGxlZnQ6IHB4MnJlbSgxNnB4KTtcblxuICAgICAgICAvLyBTaG93IGJhY2sgYXJyb3cgaW5zdGVhZCBvZiBzZWFyY2ggaWNvblxuICAgICAgICAmW2Zvcj1cIl9fc2VhcmNoXCJdOjpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXFxFNUM0XCI7IC8vIGFycm93X2JhY2tcblxuICAgICAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgICAgICBjb250ZW50OiBcIlxcRTVDOFwiOyAvLyBhcnJvd19mb3J3YXJkXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVzZXQgYnV0dG9uXG4gICAgJlt0eXBlPVwicmVzZXRcIl0ge1xuICAgICAgdG9wOiBweDJyZW0oNnB4KTtcbiAgICAgIHJpZ2h0OiBweDJyZW0oMTBweCk7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMTI1KTtcbiAgICAgIHRyYW5zaXRpb246XG4gICAgICAgIHRyYW5zZm9ybSAwLjE1cyBjdWJpYy1iZXppZXIoMC4xLCAwLjcsIDAuMSwgMSksXG4gICAgICAgIG9wYWNpdHkgICAwLjE1cztcbiAgICAgIG9wYWNpdHk6IDA7XG5cbiAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgcmlnaHQ6IGluaXRpYWw7XG4gICAgICAgIGxlZnQ6IHB4MnJlbSgxMHB4KTtcbiAgICAgIH1cblxuICAgICAgLy8gW3RhYmxldCBwb3J0cmFpdCAtXTogRnVsbC1zY3JlZW4gc2VhcmNoIGJhclxuICAgICAgQGluY2x1ZGUgYnJlYWstdG8tZGV2aWNlKHRhYmxldCBwb3J0cmFpdCkge1xuICAgICAgICB0b3A6IHB4MnJlbSgxMnB4KTtcbiAgICAgICAgcmlnaHQ6IHB4MnJlbSgxNnB4KTtcbiAgICAgIH1cblxuICAgICAgLy8gU2hvdyByZXNldCBidXR0b24gaWYgc2VhcmNoIGlzIGFjdGl2ZSBhbmQgaW5wdXQgbm9uLWVtcHR5XG4gICAgICAjeyRtZC10b2dnbGVfX3NlYXJjaC0tY2hlY2tlZH0gLm1kLXNlYXJjaF9faW5wdXQ6dmFsaWQgfiAmIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAgICAgb3BhY2l0eTogMTtcblxuICAgICAgICAvLyBIb3ZlcmVkIGljb25cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgb3BhY2l0eTogMC43O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gU2VhcmNoIG91dHB1dCBjb250YWluZXJcbiAgJl9fb3V0cHV0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLXJhZGl1czogMCAwIHB4MnJlbSgycHgpIHB4MnJlbSgycHgpO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgei1pbmRleDogMTtcblxuICAgIC8vIFt0YWJsZXQgcG9ydHJhaXQgLV06IEZ1bGwtc2NyZWVuIHNlYXJjaCBiYXJcbiAgICBAaW5jbHVkZSBicmVhay10by1kZXZpY2UodGFibGV0IHBvcnRyYWl0KSB7XG4gICAgICB0b3A6IHB4MnJlbSg0OHB4KTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICB9XG5cbiAgICAvLyBbdGFibGV0IGxhbmRzY2FwZSArXTogSGVhZGVyLWVtYmVkZGVkIHNlYXJjaFxuICAgIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHRhYmxldCBsYW5kc2NhcGUpIHtcbiAgICAgIHRvcDogcHgycmVtKDM4cHgpO1xuICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzO1xuICAgICAgb3BhY2l0eTogMDtcblxuICAgICAgLy8gU2hvdyBzZWFyY2ggb3V0cHV0IGluIGFjdGl2ZSBzdGF0ZVxuICAgICAgI3skbWQtdG9nZ2xlX19zZWFyY2gtLWNoZWNrZWR9ICYge1xuICAgICAgICBAaW5jbHVkZSB6LWRlcHRoKDYpO1xuXG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gV3JhcHBlciBmb3Igc2Nyb2xsaW5nIG9uIG92ZXJmbG93XG4gICZfX3Njcm9sbHdyYXAge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQtY29sb3Itd2hpdGU7XG4gICAgYm94LXNoYWRvdzogMCBweDJyZW0oMXB4KSAwICRtZC1jb2xvci1ibGFjay0tbGlnaHRlc3QgaW5zZXQ7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG5cbiAgICAvLyBbdGFibGV0IGxhbmRzY2FwZV06IFNldCBhYnNvbHV0ZSB3aWR0aCB0byBvbWl0IHVubmVjZXNzYXJ5IHJlZmxvd1xuICAgIEBpbmNsdWRlIGJyZWFrLWF0LWRldmljZSh0YWJsZXQgbGFuZHNjYXBlKSB7XG4gICAgICB3aWR0aDogcHgycmVtKDQ2OHB4KTtcbiAgICB9XG5cbiAgICAvLyBbc2NyZWVuICtdOiBTZXQgYWJzb2x1dGUgd2lkdGggdG8gb21pdCB1bm5lY2Vzc2FyeSByZWZsb3dcbiAgICBAaW5jbHVkZSBicmVhay1mcm9tLWRldmljZShzY3JlZW4pIHtcbiAgICAgIHdpZHRoOiBweDJyZW0oNjg4cHgpO1xuICAgIH1cblxuICAgIC8vIFt0YWJsZXQgbGFuZHNjYXBlICtdOiBMaW1pdCBoZWlnaHQgdG8gdmlld3BvcnRcbiAgICBAaW5jbHVkZSBicmVhay1mcm9tLWRldmljZSh0YWJsZXQgbGFuZHNjYXBlKSB7XG4gICAgICBtYXgtaGVpZ2h0OiAwO1xuXG4gICAgICAvLyBFeHBhbmQgaW4gYWN0aXZlIHN0YXRlXG4gICAgICAjeyRtZC10b2dnbGVfX3NlYXJjaC0tY2hlY2tlZH0gJiB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDc1dmg7XG4gICAgICB9XG5cbiAgICAgIC8vIE92ZXJyaWRlIG5hdGl2ZSBzY3JvbGxiYXIgc3R5bGVzXG4gICAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgICAgIHdpZHRoOiBweDJyZW0oNHB4KTtcbiAgICAgICAgaGVpZ2h0OiBweDJyZW0oNHB4KTtcbiAgICAgIH1cblxuICAgICAgLy8gU3R5bGUgc2Nyb2xsYmFyIHRodW1iXG4gICAgICAmOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHRlcjtcblxuICAgICAgICAvLyBIb3ZlcmVkIHNjcm9sbGJhciB0aHVtYlxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQtY29sb3ItYWNjZW50O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIFNlYXJjaCByZXN1bHRcbi5tZC1zZWFyY2gtcmVzdWx0IHtcbiAgY29sb3I6ICRtZC1jb2xvci1ibGFjaztcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcblxuICAvLyBTZWFyY2ggbWV0YWRhdGFcbiAgJl9fbWV0YSB7XG4gICAgcGFkZGluZzogMCBweDJyZW0oMTZweCk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodGVzdDtcbiAgICBjb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodDtcbiAgICBmb250LXNpemU6IG1zKC0xKTtcbiAgICBsaW5lLWhlaWdodDogcHgycmVtKDM2cHgpO1xuXG4gICAgLy8gW3RhYmxldCBsYW5kc2NhcGUgK106IEluY3JlYXNlIGxlZnQgaW5kZW50XG4gICAgQGluY2x1ZGUgYnJlYWstZnJvbS1kZXZpY2UodGFibGV0IGxhbmRzY2FwZSkge1xuICAgICAgcGFkZGluZy1sZWZ0OiBweDJyZW0oNDRweCk7XG5cbiAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogcHgycmVtKDQ0cHgpO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IGluaXRpYWw7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gTGlzdCBvZiBpdGVtc1xuICAmX19saXN0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXItdG9wOiBweDJyZW0oMXB4KSBzb2xpZCAkbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXN0O1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIH1cblxuICAvLyBMaXN0IGl0ZW1cbiAgJl9faXRlbSB7XG4gICAgYm94LXNoYWRvdzogMCBweDJyZW0oLTFweCkgMCAkbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXN0O1xuICB9XG5cbiAgLy8gTGluayBpbnNpZGUgaXRlbVxuICAmX19saW5rIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMjVzO1xuICAgIG91dGxpbmU6IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgIC8vIEFjdGl2ZSBvciBob3ZlcmVkIGxpbmtcbiAgICAmW2RhdGEtbWQtc3RhdGU9XCJhY3RpdmVcIl0sXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudGl6ZSgkbWQtY29sb3ItYWNjZW50LCAwLjkpO1xuXG4gICAgICAvLyBTbGlnaHRseSB0cmFuc3BhcmVudCBpY29uXG4gICAgICAubWQtc2VhcmNoLXJlc3VsdF9fYXJ0aWNsZTo6YmVmb3JlIHtcbiAgICAgICAgb3BhY2l0eTogMC43O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBhIGxpdHRsZSBzcGFjaW5nIG9uIHRoZSB0ZWFzZXIgb2YgdGhlIGxhc3QgbGlua1xuICAgICY6bGFzdC1jaGlsZCAubWQtc2VhcmNoLXJlc3VsdF9fdGVhc2VyIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IHB4MnJlbSgxMnB4KTtcbiAgICB9XG4gIH1cblxuICAvLyBBcnRpY2xlIC0gZG9jdW1lbnQgb3Igc2VjdGlvblxuICAmX19hcnRpY2xlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogMCBweDJyZW0oMTZweCk7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG5cbiAgICAvLyBbdGFibGV0IGxhbmRzY2FwZSArXTogSW5jcmVhc2UgbGVmdCBpbmRlbnRcbiAgICBAaW5jbHVkZSBicmVhay1mcm9tLWRldmljZSh0YWJsZXQgbGFuZHNjYXBlKSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IHB4MnJlbSg0NHB4KTtcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiBweDJyZW0oNDRweCk7XG4gICAgICAgIHBhZGRpbmctbGVmdDogcHgycmVtKDE2cHgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIERvY3VtZW50XG4gICAgJi0tZG9jdW1lbnQge1xuXG4gICAgICAvLyBJY29uXG4gICAgICAmOjpiZWZvcmUge1xuICAgICAgICBAZXh0ZW5kICVtZC1pY29uLCAlbWQtaWNvbl9fYnV0dG9uO1xuXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgbWFyZ2luOiBweDJyZW0oMnB4KTtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cztcbiAgICAgICAgY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHQ7XG4gICAgICAgIGNvbnRlbnQ6IFwiXFxFODgwXCI7IC8vIGZpbmRfaW5fcGFnZVxuXG4gICAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgIGxlZnQ6IGluaXRpYWw7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBbdGFibGV0IHBvcnRyYWl0IC1dOiBIaWRlIHBhZ2UgaWNvblxuICAgICAgICBAaW5jbHVkZSBicmVhay10by1kZXZpY2UodGFibGV0IHBvcnRyYWl0KSB7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUaXRsZVxuICAgICAgLm1kLXNlYXJjaC1yZXN1bHRfX3RpdGxlIHtcbiAgICAgICAgbWFyZ2luOiBweDJyZW0oMTFweCkgMDtcbiAgICAgICAgZm9udC1zaXplOiBtcygwKTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBUaXRsZVxuICAmX190aXRsZSB7XG4gICAgbWFyZ2luOiAwLjVlbSAwO1xuICAgIGZvbnQtc2l6ZTogbXMoLTEpO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgfVxuXG4gIC8vIHN0eWxlbGludC1kaXNhYmxlIHZhbHVlLW5vLXZlbmRvci1wcmVmaXgsIHByb3BlcnR5LW5vLXZlbmRvci1wcmVmaXhcblxuICAvLyBUZWFzZXJcbiAgJl9fdGVhc2VyIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBtYXgtaGVpZ2h0OiBweDJyZW0oMzNweCk7XG4gICAgbWFyZ2luOiAwLjVlbSAwO1xuICAgIGNvbG9yOiAkbWQtY29sb3ItYmxhY2stLWxpZ2h0O1xuICAgIGZvbnQtc2l6ZTogbXMoLTEpO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcblxuICAgIC8vIFttb2JpbGUgLV06IEluY3JlYXNlIG51bWJlciBvZiBsaW5lc1xuICAgIEBpbmNsdWRlIGJyZWFrLXRvLWRldmljZShtb2JpbGUpIHtcbiAgICAgIG1heC1oZWlnaHQ6IHB4MnJlbSg1MHB4KTtcbiAgICAgIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgICB9XG5cbiAgICAvLyBbdGFibGV0IGxhbmRzY2FwZV06IEluY3JlYXNlIG51bWJlciBvZiBsaW5lc1xuICAgIEBpbmNsdWRlIGJyZWFrLWF0LWRldmljZSh0YWJsZXQgbGFuZHNjYXBlKSB7XG4gICAgICBtYXgtaGVpZ2h0OiBweDJyZW0oNTBweCk7XG4gICAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDM7XG4gICAgfVxuICB9XG5cbiAgLy8gc3R5bGVsaW50LWVuYWJsZSB2YWx1ZS1uby12ZW5kb3ItcHJlZml4LCBwcm9wZXJ0eS1uby12ZW5kb3ItcHJlZml4XG5cbiAgLy8gU2VhcmNoIHRlcm0gaGlnaGxpZ2h0aW5nXG4gIGVtIHtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxufVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFZhcmlhYmxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBBY3RpdmUgKHRvZ2dsZWQpIGRyYXdlclxuJG1kLXRvZ2dsZV9fZHJhd2VyLS1jaGVja2VkOlxuICBcIltkYXRhLW1kLXRvZ2dsZT1cXFwiZHJhd2VyXFxcIl06Y2hlY2tlZCB+IC5tZC1jb250YWluZXJcIjtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU2lkZWJhciBjb250YWluZXJcbi5tZC1zaWRlYmFyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogcHgycmVtKDI0MnB4KTtcbiAgcGFkZGluZzogcHgycmVtKDI0cHgpIDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgLy8gSGlkZSBmb3IgcHJpbnRcbiAgQG1lZGlhIHByaW50IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLy8gTG9jayBzaWRlYmFyIHRvIGNvbnRhaW5lciBoZWlnaHQgKGFjY291bnQgZm9yIGZpeGVkIGhlYWRlcilcbiAgJltkYXRhLW1kLXN0YXRlPVwibG9ja1wiXSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogcHgycmVtKDQ4cHgpO1xuICB9XG5cbiAgLy8gW3RhYmxldCAtXTogQ29udmVydCBuYXZpZ2F0aW9uIHRvIGRyYXdlclxuICBAaW5jbHVkZSBicmVhay10by1kZXZpY2UodGFibGV0KSB7XG5cbiAgICAvLyBSZW5kZXIgcHJpbWFyeSBzaWRlYmFyIGFzIGEgc2xpZGVvdXQgY29udGFpbmVyXG4gICAgJi0tcHJpbWFyeSB7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiBweDJyZW0oLTI0MnB4KTtcbiAgICAgIHdpZHRoOiBweDJyZW0oMjQycHgpO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgdHJhbnNmb3JtICAwLjI1cyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLFxuICAgICAgICBib3gtc2hhZG93IDAuMjVzO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLXdoaXRlO1xuICAgICAgei1pbmRleDogMztcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICByaWdodDogcHgycmVtKC0yNDJweCk7XG4gICAgICAgIGxlZnQ6IGluaXRpYWw7XG4gICAgICB9XG5cbiAgICAgIC8vIEp1c3QgaGlkZSBkcmF3ZXIsIGlmIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IDNEIHRyYW5zZm9ybXNcbiAgICAgIC5uby1jc3N0cmFuc2Zvcm1zM2QgJiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG5cbiAgICAgIC8vIEV4cGFuZGVkIGRyYXdlclxuICAgICAgI3skbWQtdG9nZ2xlX19kcmF3ZXItLWNoZWNrZWR9ICYge1xuICAgICAgICBAaW5jbHVkZSB6LWRlcHRoKDgpO1xuXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWChweDJyZW0oMjQycHgpKTtcblxuICAgICAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgocHgycmVtKC0yNDJweCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSnVzdCBzaG93IGRyYXdlciwgaWYgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgM0QgdHJhbnNmb3Jtc1xuICAgICAgICAubm8tY3NzdHJhbnNmb3JtczNkICYge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIEhpZGUgb3ZlcmZsb3cgZm9yIG5lc3RlZCBuYXZpZ2F0aW9uXG4gICAgICAubWQtc2lkZWJhcl9fc2Nyb2xsd3JhcCB7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gU2Vjb25kYXJ5IHNpZGViYXIgd2l0aCB0YWJsZSBvZiBjb250ZW50c1xuICAmLS1zZWNvbmRhcnkge1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAvLyBbdGFibGV0IGxhbmRzY2FwZSArXTogU2hvdyB0YWJsZSBvZiBjb250ZW50cyBuZXh0IHRvIGJvZHkgY29weVxuICAgIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHRhYmxldCBsYW5kc2NhcGUpIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwMCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMTAwJSwgMCk7XG5cbiAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMDAlO1xuICAgICAgICBtYXJnaW4tbGVmdDogaW5pdGlhbDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTAwJSwgMCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gW3NjcmVlbiArXTogTGltaXQgdG8gZ3JpZFxuICAgIEBpbmNsdWRlIGJyZWFrLWZyb20tZGV2aWNlKHNjcmVlbikge1xuICAgICAgbWFyZ2luLWxlZnQ6IHB4MnJlbSgxMjIwcHgpO1xuXG4gICAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogcHgycmVtKDEyMjBweCk7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBpbml0aWFsO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFdyYXBwZXIgZm9yIHNjcm9sbGluZyBvbiBvdmVyZmxvd1xuICAmX19zY3JvbGx3cmFwIHtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgIG1hcmdpbjogMCBweDJyZW0oNHB4KTtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIC8vIEhhY2s6IHB1dHRpbmcgdGhlIHNjcm9sbCB3cmFwcGVyIG9uIHRoZSBHUFUgbWFzc2l2ZWx5IHJlZHVjZXMgaml0dGVyXG4gICAgLy8gd2hlbiBsb2NraW5nIHRoZSBzaWRlYmFycyBpbnRvIHBsYWNlXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXG4gICAgLy8gW3RhYmxldCAtXTogQWRqdXN0IG1hcmdpbnNcbiAgICBAaW5jbHVkZSBicmVhay10by1kZXZpY2UodGFibGV0KSB7XG5cbiAgICAgIC8vIFN0cmV0Y2ggc2Nyb2xsd3JhcCBmb3IgcHJpbWFyeSBzaWRlYmFyXG4gICAgICAubWQtc2lkZWJhci0tcHJpbWFyeSAmIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBPdmVycmlkZSBuYXRpdmUgc2Nyb2xsYmFyIHN0eWxlc1xuICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgIHdpZHRoOiBweDJyZW0oNHB4KTtcbiAgICAgIGhlaWdodDogcHgycmVtKDRweCk7XG4gICAgfVxuXG4gICAgLy8gU3R5bGUgc2Nyb2xsYmFyIHRodW1iXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodGVyO1xuXG4gICAgICAvLyBIb3ZlcmVkIHNjcm9sbGJhciB0aHVtYlxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci1hY2NlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvLy8vXG4vLy8gQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgTWFydGluIERvbmF0aCA8bWFydGluLmRvbmF0aEBzcXVpZGZ1bmsuY29tPlxuLy8vXG4vLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksXG4vLy8gdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8vIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLFxuLy8vIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZVxuLy8vIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vLy9cbi8vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy8vXG4vLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT04tSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTFxuLy8vIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkdcbi8vLyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSXG4vLy8gREVBTElOR1Ncbi8vLy9cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gS2V5ZnJhbWVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFNob3cgc291cmNlIGZhY3RzXG5Aa2V5ZnJhbWVzIG1kLXNvdXJjZV9fZmFjdHMtLWRvbmUge1xuICAwJSB7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgaGVpZ2h0OiBweDJyZW0oMTNweCk7XG4gIH1cbn1cblxuLy8gU2hvdyBzb3VyY2UgZmFjdFxuQGtleWZyYW1lcyBtZC1zb3VyY2VfX2ZhY3QtLWRvbmUge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cblxuICA1MCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cblxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCUpO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU291cmNlIGNvbnRhaW5lclxuLm1kLXNvdXJjZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLXJpZ2h0OiBweDJyZW0oMTJweCk7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXM7XG4gIGZvbnQtc2l6ZTogcHgycmVtKDEzcHgpO1xuICBsaW5lLWhlaWdodDogMS4yO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG4gIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICBbZGlyPVwicnRsXCJdICYge1xuICAgIHBhZGRpbmctcmlnaHQ6IGluaXRpYWw7XG4gICAgcGFkZGluZy1sZWZ0OiBweDJyZW0oMTJweCk7XG4gIH1cblxuICAvLyBIb3ZlcmVkIHNvdXJjZSBjb250YWluZXJcbiAgJjpob3ZlciB7XG4gICAgb3BhY2l0eTogMC43O1xuICB9XG5cbiAgLy8gTmVjZXNzYXJ5IGZvciB2ZXJ0aWNhbCBhbGlnbm1lbnRcbiAgJjo6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IHB4MnJlbSg0OHB4KTtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIH1cblxuICAvLyBSZXBvc2l0b3J5IHBsYXRmb3JtIGljb25cbiAgJl9faWNvbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiBweDJyZW0oNDhweCk7XG4gICAgaGVpZ2h0OiBweDJyZW0oNDhweCk7XG4gICAgY29udGVudDogXCJcIjtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXG4gICAgLy8gQWxpZ24gU1ZHLCBkbyBub3Qgc2NhbGUsIGFzIHRoaXMgd2lsbCBpbmN1ciBzdHJhbmdlIGZvcm1hdHRpbmcgYnVnc1xuICAgIC8vIGluIEludGVybmV0IEV4cGxvcmVyIGFuZCBFZGdlXG4gICAgc3ZnIHtcbiAgICAgIHdpZHRoOiBweDJyZW0oMjRweCk7XG4gICAgICBoZWlnaHQ6IHB4MnJlbSgyNHB4KTtcbiAgICAgIG1hcmdpbi10b3A6IHB4MnJlbSgxMnB4KTtcbiAgICAgIG1hcmdpbi1sZWZ0OiBweDJyZW0oMTJweCk7XG5cbiAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBweDJyZW0oMTJweCk7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBpbml0aWFsO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIENvcnJlY3QgYWxpZ25tZW50LCBpZiBpY29uIGlzIHByZXNlbnRcbiAgICArIC5tZC1zb3VyY2VfX3JlcG9zaXRvcnkge1xuICAgICAgbWFyZ2luLWxlZnQ6IHB4MnJlbSgtNDBweCk7XG4gICAgICBwYWRkaW5nLWxlZnQ6IHB4MnJlbSg0MHB4KTtcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IHB4MnJlbSgtNDBweCk7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBpbml0aWFsO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiBweDJyZW0oNDBweCk7XG4gICAgICAgIHBhZGRpbmctbGVmdDogaW5pdGlhbDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBSZXBvc2l0b3J5IG5hbWVcbiAgJl9fcmVwb3NpdG9yeSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tbGVmdDogcHgycmVtKDEycHgpO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB9XG5cbiAgLy8gU291cmNlIGZhY3RzIChzdGF0aXN0aWNzIGV0Yy4pXG4gICZfX2ZhY3RzIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBmb250LXNpemU6IHB4MnJlbSgxMXB4KTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBvcGFjaXR5OiAwLjc1O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAvLyBTaG93IGFmdGVyIHRoZSBkYXRhIHdhcyBsb2FkZWRcbiAgICBbZGF0YS1tZC1zdGF0ZT1cImRvbmVcIl0gJiB7XG4gICAgICBhbmltYXRpb246IG1kLXNvdXJjZV9fZmFjdHMtLWRvbmUgMC4yNXMgZWFzZS1pbjtcbiAgICB9XG4gIH1cblxuICAvLyBGYWN0XG4gICZfX2ZhY3Qge1xuICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICB9XG5cbiAgICAvLyBTaG93IGFmdGVyIHRoZSBkYXRhIHdhcyBsb2FkZWRcbiAgICBbZGF0YS1tZC1zdGF0ZT1cImRvbmVcIl0gJiB7XG4gICAgICBhbmltYXRpb246IG1kLXNvdXJjZV9fZmFjdC0tZG9uZSAwLjRzIGVhc2Utb3V0O1xuICAgIH1cblxuICAgIC8vIE1pZGRsZSBkb3QgYmVmb3JlIGZhY3RcbiAgICAmOjpiZWZvcmUge1xuICAgICAgbWFyZ2luOiAwIHB4MnJlbSgycHgpO1xuICAgICAgY29udGVudDogXCJcXDAwQjdcIjtcbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgbWlkZGxlIGRvdCBvbiBmaXJzdCBmYWN0XG4gICAgJjpmaXJzdC1jaGlsZDo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG5cbi8vIFNvdXJjZSBmaWxlXG4ubWQtc291cmNlLWZpbGUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbjogMWVtIDAuNWVtIDFlbSAwO1xuICBwYWRkaW5nLXJpZ2h0OiBweDJyZW0oNXB4KTtcbiAgYm9yZGVyLXJhZGl1czogcHgycmVtKDJweCk7XG4gIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHRlc3Q7XG4gIGZvbnQtc2l6ZTogbXMoLTEpO1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAvLyBJY29uXG4gICY6OmJlZm9yZSB7XG4gICAgQGV4dGVuZCAlbWQtaWNvbjtcblxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tcmlnaHQ6IHB4MnJlbSg1cHgpO1xuICAgIHBhZGRpbmc6IHB4MnJlbSg1cHgpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHRlcjtcbiAgICBjb2xvcjogJG1kLWNvbG9yLXdoaXRlO1xuICAgIGZvbnQtc2l6ZTogbXMoMCk7XG4gICAgY29udGVudDogXCJcXEU4NkZcIjsgLy8gY29kZVxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIH1cblxuICAvLyBTb21lIHByb3BlcnRpZXMgbmVlZCB0byBiZSBzZXQgd2l0aCBoaWdoZXIgc3BlY2lmaWNpdHkgZHVlIHRvIHRoZSBkZWZhdWx0XG4gIC8vIHN0eWxpbmcgb2YgdGV4dCBsaW5rcyBpbnNpZGUgdHlwZXNldHRlZCBjb250ZW50XG4gIGh0bWwgJiB7XG4gICAgdHJhbnNpdGlvbjpcbiAgICAgIGJhY2tncm91bmQgMC40cyxcbiAgICAgIGNvbG9yICAgICAgMC40cyxcbiAgICAgIGJveC1zaGFkb3cgMC40cyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO1xuXG4gICAgLy8gSWNvblxuICAgICY6OmJlZm9yZSB7XG4gICAgICB0cmFuc2l0aW9uOiBpbmhlcml0O1xuICAgIH1cbiAgfVxuXG4gIC8vIENvbG9yIG5lZWRzIGV2ZW4gaGlnaGVyIHNwZWNpZml0eSBiZWNhdXNlIGN1c3RvbSBjb2xvciBwYWxldHRlcyBhcmUgc2V0XG4gIC8vIHVzaW5nIHRoZSBib2R5IGFuZCBvdmVycmlkZSB0ZXh0IGxpbmtzIGluc2lkZSB0eXBlc2V0dGVkIGNvbnRlbnRcbiAgaHRtbCBib2R5IC5tZC10eXBlc2V0ICYge1xuICAgIGNvbG9yOiAkbWQtY29sb3ItYmxhY2stLWxpZ2h0O1xuICB9XG5cbiAgLy8gSG92ZXJlZCBzb3VyY2UgZmlsZVxuICAmOmhvdmVyIHtcbiAgICBAaW5jbHVkZSB6LWRlcHRoLWZvY3VzO1xuXG4gICAgLy8gSWNvblxuICAgICY6OmJlZm9yZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQtY29sb3ItYWNjZW50O1xuICAgIH1cbiAgfVxufVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFRhYnMgd2l0aCBvdXRsaW5lXG4ubWQtdGFicyB7XG4gIHdpZHRoOiAxMDAlO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMjVzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQtY29sb3ItcHJpbWFyeTtcbiAgY29sb3I6ICRtZC1jb2xvci13aGl0ZTtcbiAgb3ZlcmZsb3c6IGF1dG87XG5cbiAgLy8gW3RhYmxldCAtXTogSGlkZSB0YWJzIGZvciB0YWJsZXQgYW5kIGJlbG93LCBhcyB0aGV5IGRvbid0IG1ha2UgYW55IHNlbnNlXG4gIEBpbmNsdWRlIGJyZWFrLXRvLWRldmljZSh0YWJsZXQpIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLy8gSGlkZSBmb3IgcHJpbnRcbiAgQG1lZGlhIHByaW50IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLy8gTGlzdCBvZiBpdGVtc1xuICAmX19saXN0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWxlZnQ6IHB4MnJlbSg0cHgpO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB9XG5cbiAgLy8gTGlzdCBpdGVtXG4gICZfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IHB4MnJlbSg0OHB4KTtcbiAgICBwYWRkaW5nLXJpZ2h0OiBweDJyZW0oMTJweCk7XG4gICAgcGFkZGluZy1sZWZ0OiBweDJyZW0oMTJweCk7XG4gIH1cblxuICAvLyBMaW5rIGluc2lkZSBpdGVtIC0gY291bGQgYmUgZGVmaW5lZCBhcyBibG9jayBlbGVtZW50cyBhbmQgYWxpZ25lZCB2aWFcbiAgLy8gbGluZSBoZWlnaHQsIGJ1dCB0aGlzIHdvdWxkIGltcGx5IG1vcmUgcmVwYWludHMgd2hlbiBzY3JvbGxpbmdcbiAgJl9fbGluayB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLXRvcDogcHgycmVtKDE2cHgpO1xuICAgIHRyYW5zaXRpb246XG4gICAgICB0cmFuc2Zvcm0gMC40cyBjdWJpYy1iZXppZXIoMC4xLCAwLjcsIDAuMSwgMSksXG4gICAgICBvcGFjaXR5ICAgMC4yNXM7XG4gICAgZm9udC1zaXplOiBweDJyZW0oMTRweCk7XG4gICAgb3BhY2l0eTogMC43O1xuXG4gICAgLy8gQWN0aXZlIG9yIGhvdmVyZWQgbGlua1xuICAgICYtLWFjdGl2ZSxcbiAgICAmOmhvdmVyIHtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG5cbiAgICAvLyBEZWxheSB0cmFuc2l0aW9ucyBieSBhIHNtYWxsIGFtb3VudFxuICAgIEBmb3IgJGkgZnJvbSAyIHRocm91Z2ggMTYge1xuICAgICAgLm1kLXRhYnNfX2l0ZW06bnRoLWNoaWxkKCN7JGl9KSAmIHtcbiAgICAgICAgdHJhbnNpdGlvbi1kZWxheTogMC4wMnMgKiAoJGkgLSAxKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBGYWRlLW91dCB0YWJzIGJhY2tncm91bmQgdXBvbiBzY3JvbGxpbmdcbiAgJltkYXRhLW1kLXN0YXRlPVwiaGlkZGVuXCJdIHtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAgIC8vIEhpZGUgdGFicyB1cG9uIHNjcm9sbGluZyAtIGRpc2FibGUgdHJhbnNpdGlvbiB0byBtaW5pbWl6ZXMgcmVwYWludHMgd2hpbHRlXG4gICAgLy8gc2Nyb2xsaW5nIGRvd24sIHdoaWxlIHNjcm9sbGluZyB1cCBzZWVtcyB0byBiZSBva2F5XG4gICAgLm1kLXRhYnNfX2xpbmsge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDUwJSk7XG4gICAgICB0cmFuc2l0aW9uOlxuICAgICAgICBjb2xvciAgICAgMC4yNXMsXG4gICAgICAgIHRyYW5zZm9ybSAwcyAwLjRzLFxuICAgICAgICBvcGFjaXR5ICAgMC4xcztcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICB9XG5cbiAgLy8gW3NjcmVlbiArXTogQWRqdXN0IG1haW4gbmF2aWdhdGlvbiBzdHlsZXNcbiAgQGluY2x1ZGUgYnJlYWstZnJvbS1kZXZpY2Uoc2NyZWVuKSB7XG5cbiAgICAvLyBIaWRlIDFzdCBsZXZlbCBuZXN0ZWQgaXRlbXMsIGFzIHRoZXkgYXJlIGxpc3RlZCBpbiB0aGUgdGFicyBieSBzZXR0aW5nXG4gICAgLy8gZm9udC1zaXplIHRvIHplcm8sIGFzIHdlIG5lZWQgdG8gcHJlc2VydmUgYm90dG9tIHBhZGRpbmdcbiAgICB+IC5tZC1tYWluIC5tZC1uYXYtLXByaW1hcnkgPiAubWQtbmF2X19saXN0ID4gLm1kLW5hdl9faXRlbS0tbmVzdGVkIHtcbiAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICB9XG5cbiAgICAvLyBXZSdyZSBvbiB0aGUgMm5kKyBsZXZlbFxuICAgICYtLWFjdGl2ZSB+IC5tZC1tYWluIHtcblxuICAgICAgLy8gQWRqdXN0IDFzdCBsZXZlbCBzdHlsZXNcbiAgICAgIC5tZC1uYXYtLXByaW1hcnkge1xuXG4gICAgICAgIC8vIFNob3cgdGl0bGUgYW5kIHJlbW92ZSBzcGFjaW5nXG4gICAgICAgIC5tZC1uYXZfX3RpdGxlIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSGlkZSBzaXRlIHRpdGxlXG4gICAgICAgIC5tZC1uYXZfX3RpdGxlLS1zaXRlIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU2hvdyAxc3QgbGV2ZWwgbmF2aWdhdGlvbiBhbHdheXMgZXhwYW5kZWRcbiAgICAgICAgLm5vLWpzICYgLm1kLW5hdiB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBIaWRlIDFzdCBsZXZlbCBub3JtYWwgaXRlbXNcbiAgICAgICAgJiA+IC5tZC1uYXZfX2xpc3QgPiAubWQtbmF2X19pdGVtIHtcbiAgICAgICAgICBmb250LXNpemU6IDA7XG4gICAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuXG4gICAgICAgICAgLy8gUmVzZXQgZm9udC1zaXplIGZvciBuZXN0ZWQgaXRlbXMgYW5kIGluZHVjZSBtYXJnaW4gY29sbGFwc2VcbiAgICAgICAgICAmLS1uZXN0ZWQge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogcHgycmVtKDE0cHgpO1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuXG4gICAgICAgICAgICAvLyBIaWRlIG5lc3RlZCBsaW5rc1xuICAgICAgICAgICAgPiAubWQtbmF2X19saW5rIHtcbiAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBTaG93IDFzdCBsZXZlbCBhY3RpdmUgbmVzdGVkIGl0ZW1zXG4gICAgICAgICAgJi0tYWN0aXZlIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBBbHdheXMgZXhwYW5kIG5lc3RlZCBuYXZpZ2F0aW9uIG9uIDJuZCBsZXZlbFxuICAgICAgLm1kLW5hdltkYXRhLW1kLWxldmVsPVwiMVwiXSB7XG4gICAgICAgIG1heC1oZWlnaHQ6IGluaXRpYWw7XG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuXG4gICAgICAgIC8vIFJlbW92ZSBsZWZ0IHNwYWNpbmcgb24gMm5kIGxldmVsIGl0ZW1zXG4gICAgICAgID4gLm1kLW5hdl9fbGlzdCA+IC5tZC1uYXZfX2l0ZW0ge1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEhpZGUgdGl0bGVzIGZyb20gMm5kIGxldmVsIG9uXG4gICAgICAgIC5tZC1uYXYgLm1kLW5hdl9fdGl0bGUge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8vLy9cbi8vLyBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBNYXJ0aW4gRG9uYXRoIDxtYXJ0aW4uZG9uYXRoQHNxdWlkZnVuay5jb20+XG4vLy9cbi8vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSxcbi8vLyB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uXG4vLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsXG4vLy8gYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlXG4vLy8gU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vL1xuLy8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vLy9cbi8vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTi1JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMXG4vLy8gVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lOR1xuLy8vIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVJcbi8vLyBERUFMSU5HU1xuLy8vL1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSdWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBTY29wZWQgaW4gdHlwZXNldHRlZCBjb250ZW50IHRvIG1hdGNoIHNwZWNpZmljaXR5IG9mIHJlZ3VsYXIgY29udGVudFxuLm1kLXR5cGVzZXQge1xuXG4gIC8vIEFkbW9uaXRpb24gZXh0ZW5zaW9uXG4gIC5hZG1vbml0aW9uIHtcbiAgICBAaW5jbHVkZSB6LWRlcHRoKDIpO1xuXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbjogMS41NjI1ZW0gMDtcbiAgICBwYWRkaW5nOiAwIHB4MnJlbSgxMnB4KTtcbiAgICBib3JkZXItbGVmdDogcHgycmVtKDRweCkgc29saWQgJGNsci1ibHVlLWEyMDA7XG4gICAgYm9yZGVyLXJhZGl1czogcHgycmVtKDJweCk7XG4gICAgZm9udC1zaXplOiBtcygtMSk7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG5cbiAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgYm9yZGVyLXJpZ2h0OiBweDJyZW0oNHB4KSBzb2xpZCAkY2xyLWJsdWUtYTIwMDtcbiAgICAgIGJvcmRlci1sZWZ0OiBub25lO1xuICAgIH1cblxuICAgIC8vIEFkanVzdCBzcGFjaW5nIG9uIGxhc3QgZWxlbWVudFxuICAgIGh0bWwgJiA+IDpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IHB4MnJlbSgxMnB4KTtcbiAgICB9XG5cbiAgICAvLyBBZGp1c3QgbWFyZ2luIGZvciBuZXN0ZWQgYWRtb25pdGlvbiBibG9ja3NcbiAgICAuYWRtb25pdGlvbiB7XG4gICAgICBtYXJnaW46IDFlbSAwO1xuICAgIH1cblxuICAgIC8vIFRpdGxlXG4gICAgPiAuYWRtb25pdGlvbi10aXRsZSB7XG4gICAgICBtYXJnaW46IDAgcHgycmVtKC0xMnB4KTtcbiAgICAgIHBhZGRpbmc6IHB4MnJlbSg4cHgpIHB4MnJlbSgxMnB4KSBweDJyZW0oOHB4KSBweDJyZW0oNDBweCk7XG4gICAgICBib3JkZXItYm90dG9tOiBweDJyZW0oMXB4KSBzb2xpZCB0cmFuc3BhcmVudGl6ZSgkY2xyLWJsdWUtYTIwMCwgMC45KTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50aXplKCRjbHItYmx1ZS1hMjAwLCAwLjkpO1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICBwYWRkaW5nOiBweDJyZW0oOHB4KSBweDJyZW0oNDBweCkgcHgycmVtKDhweCkgcHgycmVtKDEycHgpO1xuICAgICAgfVxuXG4gICAgICAvLyBSZXNldCBzcGFjaW5nLCBpZiB0aXRsZSBpcyB0aGUgb25seSBlbGVtZW50XG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgfVxuXG4gICAgICAvLyBJY29uXG4gICAgICAmOjpiZWZvcmUge1xuICAgICAgICBAZXh0ZW5kICVtZC1pY29uO1xuXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogcHgycmVtKDEycHgpO1xuICAgICAgICBjb2xvcjogJGNsci1ibHVlLWEyMDA7XG4gICAgICAgIGZvbnQtc2l6ZTogcHgycmVtKDIwcHgpO1xuICAgICAgICBjb250ZW50OiBcIlxcRTNDOVwiOyAvLyBlZGl0XG5cbiAgICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgICAgcmlnaHQ6IHB4MnJlbSgxMnB4KTtcbiAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQnVpbGQgcmVwcmVzZW50YXRpb25hbCBjbGFzc2VzXG4gICAgQGVhY2ggJG5hbWVzLCAkYXBwZWFyYW5jZSBpbiAoXG4gICAgICBhYnN0cmFjdCBzdW1tYXJ5IHRsZHI6ICRjbHItbGlnaHQtYmx1ZS1hNDAwIFwiXFxFOEQyXCIsIC8vIHN1YmplY3RcbiAgICAgIGluZm8gdG9kbzogJGNsci1jeWFuLWE3MDAgXCJcXEU4OEVcIiwgLy8gaW5mb1xuICAgICAgdGlwIGhpbnQgaW1wb3J0YW50IDogJGNsci10ZWFsLWE3MDAgXCJcXEU4MEVcIiwgLy8gd2hhdHNob3RcbiAgICAgIHN1Y2Nlc3MgY2hlY2sgZG9uZTogJGNsci1ncmVlbi1hNzAwIFwiXFxFODc2XCIsIC8vIGRvbmVcbiAgICAgIHF1ZXN0aW9uIGhlbHAgZmFxOiAkY2xyLWxpZ2h0LWdyZWVuLWE3MDAgXCJcXEU4ODdcIiwgLy8gaGVscFxuICAgICAgd2FybmluZyBjYXV0aW9uIGF0dGVudGlvbjogJGNsci1vcmFuZ2UtYTQwMCBcIlxcRTAwMlwiLCAvLyB3YXJuaW5nXG4gICAgICBmYWlsdXJlIGZhaWwgbWlzc2luZzogJGNsci1yZWQtYTIwMCBcIlxcRTE0Q1wiLCAvLyBjbGVhclxuICAgICAgZGFuZ2VyIGVycm9yOiAkY2xyLXJlZC1hNDAwIFwiXFxFM0U3XCIsIC8vIGZsYXNoX29uXG4gICAgICBidWc6ICRjbHItcGluay1hNDAwIFwiXFxFODY4XCIsIC8vIGJ1Z19yZXBvcnRcbiAgICAgIGV4YW1wbGU6ICRjbHItZGVlcC1wdXJwbGUtYTQwMCBcIlxcRTI0MlwiLCAvLyBmb3JtYXRfbGlzdF9udW1iZXJlZFxuICAgICAgcXVvdGUgY2l0ZTogJGNsci1ncmV5IFwiXFxFMjQ0XCIgLy8gZm9ybWF0X3F1b3RlXG4gICAgKSB7XG4gICAgICAkdGludDogbnRoKCRhcHBlYXJhbmNlLCAxKTtcbiAgICAgICRpY29uOiBudGgoJGFwcGVhcmFuY2UsIDIpO1xuXG4gICAgICAvLyBEZWZpbmUgYmFzZSBjbGFzc1xuICAgICAgJiUje250aCgkbmFtZXMsIDEpfSxcbiAgICAgICYuI3tudGgoJG5hbWVzLCAxKX0ge1xuICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogJHRpbnQ7XG5cbiAgICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAkdGludDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRpdGxlXG4gICAgICAgID4gLmFkbW9uaXRpb24tdGl0bGUge1xuICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50aXplKCR0aW50LCAwLjkpO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50aXplKCR0aW50LCAwLjkpO1xuXG4gICAgICAgICAgLy8gSWNvblxuICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICBjb2xvcjogJHRpbnQ7XG4gICAgICAgICAgICBjb250ZW50OiAkaWNvbjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gRGVmaW5lIHN5bm9ueW1zIGZvciBiYXNlIGNsYXNzXG4gICAgICBAaWYgbGVuZ3RoKCRuYW1lcykgPiAxIHtcbiAgICAgICAgQGZvciAkbiBmcm9tIDIgdGhyb3VnaCBsZW5ndGgoJG5hbWVzKSB7XG4gICAgICAgICAgJi4je250aCgkbmFtZXMsICRuKX0ge1xuICAgICAgICAgICAgQGV4dGVuZCAuYWRtb25pdGlvbiUje250aCgkbmFtZXMsIDEpfTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8vLy9cbi8vLyBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBNYXJ0aW4gRG9uYXRoIDxtYXJ0aW4uZG9uYXRoQHNxdWlkZnVuay5jb20+XG4vLy9cbi8vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSxcbi8vLyB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uXG4vLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsXG4vLy8gYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlXG4vLy8gU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vL1xuLy8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vLy9cbi8vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTi1JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMXG4vLy8gVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lOR1xuLy8vIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVJcbi8vLyBERUFMSU5HU1xuLy8vL1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBWYXJpYWJsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gT3BlcmF0b3JzXG4kY29kZWhpbGl0ZS1vcGVyYXRvcjogaW5oZXJpdDtcbiRjb2RlaGlsaXRlLW9wZXJhdG9yLXdvcmQ6IGluaGVyaXQ7XG5cbi8vIEdlbmVyaWNzXG4kY29kZWhpbGl0ZS1nZW5lcmljLWVtcGg6ICMwMDAwMDA7XG4kY29kZWhpbGl0ZS1nZW5lcmljLWVycm9yOiAjQUEwMDAwO1xuJGNvZGVoaWxpdGUtZ2VuZXJpYy1oZWFkaW5nOiAjOTk5OTk5O1xuJGNvZGVoaWxpdGUtZ2VuZXJpYy1vdXRwdXQ6ICM4ODg4ODg7XG4kY29kZWhpbGl0ZS1nZW5lcmljLXByb21wdDogIzU1NTU1NTtcbiRjb2RlaGlsaXRlLWdlbmVyaWMtc3Ryb25nOiBpbmhlcml0O1xuJGNvZGVoaWxpdGUtZ2VuZXJpYy1zdWJoZWFkaW5nOiAjQUFBQUFBO1xuJGNvZGVoaWxpdGUtZ2VuZXJpYy10cmFjZWJhY2s6ICNBQTAwMDA7XG5cbi8vIERpZmZzXG4kY29kZWhpbGl0ZS1kaWZmLWRlbGV0ZWQ6ICNGRkREREQ7XG4kY29kZWhpbGl0ZS1kaWZmLWluc2VydGVkOiAjRERGRkREO1xuXG4vLyBLZXl3b3Jkc1xuJGNvZGVoaWxpdGUta2V5d29yZDogIzNCNzhFNztcbiRjb2RlaGlsaXRlLWtleXdvcmQtY29uc3RhbnQ6ICNBNzFENUQ7XG4kY29kZWhpbGl0ZS1rZXl3b3JkLWRlY2xhcmF0aW9uOiAjM0I3OEU3O1xuJGNvZGVoaWxpdGUta2V5d29yZC1uYW1lc3BhY2U6ICMzQjc4RTc7XG4kY29kZWhpbGl0ZS1rZXl3b3JkLXBzZXVkbzogI0E3MUQ1RDtcbiRjb2RlaGlsaXRlLWtleXdvcmQtcmVzZXJ2ZWQ6ICMzRTYxQTI7XG4kY29kZWhpbGl0ZS1rZXl3b3JkLXR5cGU6ICMzRTYxQTI7XG5cbi8vIENvbW1lbnRzXG4kY29kZWhpbGl0ZS1jb21tZW50OiAjOTk5OTk5O1xuJGNvZGVoaWxpdGUtY29tbWVudC1tdWx0aWxpbmU6ICM5OTk5OTk7XG4kY29kZWhpbGl0ZS1jb21tZW50LXByZXByb2M6ICM2NjY2NjY7XG4kY29kZWhpbGl0ZS1jb21tZW50LXNpbmdsZTogIzk5OTk5OTtcbiRjb2RlaGlsaXRlLWNvbW1lbnQtc2hlYmFuZzogIzk5OTk5OTtcbiRjb2RlaGlsaXRlLWNvbW1lbnQtc3BlY2lhbDogIzk5OTk5OTtcblxuLy8gTmFtZXNcbiRjb2RlaGlsaXRlLW5hbWUtYXR0cmlidXRlOiAjQzIxODVCO1xuJGNvZGVoaWxpdGUtbmFtZS1idWlsdGluOiAjQzIxODVCO1xuJGNvZGVoaWxpdGUtbmFtZS1idWlsdGluLXBzZXVkbzogIzNFNjFBMjtcbiRjb2RlaGlsaXRlLW5hbWUtY2xhc3M6ICNDMjE4NUI7XG4kY29kZWhpbGl0ZS1uYW1lLWNvbnN0YW50OiAjM0U2MUEyO1xuJGNvZGVoaWxpdGUtbmFtZS1kZWNvcmF0b3I6ICM2NjY2NjY7XG4kY29kZWhpbGl0ZS1uYW1lLWVudGl0eTogIzY2NjY2NjtcbiRjb2RlaGlsaXRlLW5hbWUtZXhjZXB0aW9uOiAjQzIxODVCO1xuJGNvZGVoaWxpdGUtbmFtZS1mdW5jdGlvbjogI0MyMTg1QjtcbiRjb2RlaGlsaXRlLW5hbWUtbGFiZWw6ICMzQjUxNzk7XG4kY29kZWhpbGl0ZS1uYW1lLW5hbWVzcGFjZTogI0VDNDA3QTtcbiRjb2RlaGlsaXRlLW5hbWUtdGFnOiAjM0I3OEU3O1xuJGNvZGVoaWxpdGUtbmFtZS12YXJpYWJsZTogIzNFNjFBMjtcbiRjb2RlaGlsaXRlLW5hbWUtdmFyaWFibGUtY2xhc3M6ICMzRTYxQTI7XG4kY29kZWhpbGl0ZS1uYW1lLXZhcmlhYmxlLWluc3RhbmNlOiAjM0U2MUEyO1xuJGNvZGVoaWxpdGUtbmFtZS12YXJpYWJsZS1nbG9iYWw6ICMzRTYxQTI7XG4kY29kZWhpbGl0ZS1uYW1lLWV4dGVuc2lvbjogI0VDNDA3QTtcblxuLy8gTnVtYmVyc1xuJGNvZGVoaWxpdGUtbGl0ZXJhbC1udW1iZXI6ICNFNzRDM0M7XG4kY29kZWhpbGl0ZS1saXRlcmFsLW51bWJlci1mbG9hdDogI0U3NEMzQztcbiRjb2RlaGlsaXRlLWxpdGVyYWwtbnVtYmVyLWhleDogI0U3NEMzQztcbiRjb2RlaGlsaXRlLWxpdGVyYWwtbnVtYmVyLWludGVnZXI6ICNFNzRDM0M7XG4kY29kZWhpbGl0ZS1saXRlcmFsLW51bWJlci1pbnRlZ2VyLWxvbmc6ICNFNzRDM0M7XG4kY29kZWhpbGl0ZS1saXRlcmFsLW51bWJlci1vY3Q6ICNFNzRDM0M7XG5cbi8vIFN0cmluZ3NcbiRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nOiAjMEQ5MDRGO1xuJGNvZGVoaWxpdGUtbGl0ZXJhbC1zdHJpbmctYmFja3RpY2tzOiAjMEQ5MDRGO1xuJGNvZGVoaWxpdGUtbGl0ZXJhbC1zdHJpbmctY2hhcjogIzBEOTA0RjtcbiRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nLWRvYzogIzk5OTk5OTtcbiRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nLWRvdWJsZTogIzBEOTA0RjtcbiRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nLWVzY2FwZTogIzE4MzY5MTtcbiRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nLWhlcmVkb2M6ICMxODM2OTE7XG4kY29kZWhpbGl0ZS1saXRlcmFsLXN0cmluZy1pbnRlcnBvbDogIzE4MzY5MTtcbiRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nLW90aGVyOiAjMTgzNjkxO1xuJGNvZGVoaWxpdGUtbGl0ZXJhbC1zdHJpbmctcmVnZXg6ICMwMDk5MjY7XG4kY29kZWhpbGl0ZS1saXRlcmFsLXN0cmluZy1zaW5nbGU6ICMwRDkwNEY7XG4kY29kZWhpbGl0ZS1saXRlcmFsLXN0cmluZy1zeW1ib2w6ICMwRDkwNEY7XG5cbi8vIE1pc2NlbGxhbmVvdXNcbiRjb2RlaGlsaXRlLWVycm9yOiAjQTYxNzE3O1xuJGNvZGVoaWxpdGUtd2hpdGVzcGFjZTogdHJhbnNwYXJlbnQ7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzOiBzeW50YXggaGlnaGxpZ2h0aW5nXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIENvZGVoaWxpdGUgZXh0ZW5zaW9uXG4uY29kZWhpbGl0ZSB7XG5cbiAgLy8gT3BlcmF0b3JzXG4gIC5vICB7IGNvbG9yOiAkY29kZWhpbGl0ZS1vcGVyYXRvcjsgfVxuICAub3cgeyBjb2xvcjogJGNvZGVoaWxpdGUtb3BlcmF0b3Itd29yZDsgfVxuXG4gIC8vIEdlbmVyaWNzXG4gIC5nZSB7IGNvbG9yOiAkY29kZWhpbGl0ZS1nZW5lcmljLWVtcGg7IH1cbiAgLmdyIHsgY29sb3I6ICRjb2RlaGlsaXRlLWdlbmVyaWMtZXJyb3I7IH1cbiAgLmdoIHsgY29sb3I6ICRjb2RlaGlsaXRlLWdlbmVyaWMtaGVhZGluZzsgfVxuICAuZ28geyBjb2xvcjogJGNvZGVoaWxpdGUtZ2VuZXJpYy1vdXRwdXQ7IH1cbiAgLmdwIHsgY29sb3I6ICRjb2RlaGlsaXRlLWdlbmVyaWMtcHJvbXB0OyB9XG4gIC5ncyB7IGNvbG9yOiAkY29kZWhpbGl0ZS1nZW5lcmljLXN0cm9uZzsgfVxuICAuZ3UgeyBjb2xvcjogJGNvZGVoaWxpdGUtZ2VuZXJpYy1zdWJoZWFkaW5nOyB9XG4gIC5ndCB7IGNvbG9yOiAkY29kZWhpbGl0ZS1nZW5lcmljLXRyYWNlYmFjazsgfVxuXG4gIC8vIERpZmZzXG4gIC5nZCB7IGJhY2tncm91bmQtY29sb3I6ICRjb2RlaGlsaXRlLWRpZmYtZGVsZXRlZDsgfVxuICAuZ2kgeyBiYWNrZ3JvdW5kLWNvbG9yOiAkY29kZWhpbGl0ZS1kaWZmLWluc2VydGVkOyB9XG5cbiAgLy8gS2V5d29yZHNcbiAgLmsgIHsgY29sb3I6ICRjb2RlaGlsaXRlLWtleXdvcmQ7IH1cbiAgLmtjIHsgY29sb3I6ICRjb2RlaGlsaXRlLWtleXdvcmQtY29uc3RhbnQ7IH1cbiAgLmtkIHsgY29sb3I6ICRjb2RlaGlsaXRlLWtleXdvcmQtZGVjbGFyYXRpb247IH1cbiAgLmtuIHsgY29sb3I6ICRjb2RlaGlsaXRlLWtleXdvcmQtbmFtZXNwYWNlOyB9XG4gIC5rcCB7IGNvbG9yOiAkY29kZWhpbGl0ZS1rZXl3b3JkLXBzZXVkbzsgfVxuICAua3IgeyBjb2xvcjogJGNvZGVoaWxpdGUta2V5d29yZC1yZXNlcnZlZDsgfVxuICAua3QgeyBjb2xvcjogJGNvZGVoaWxpdGUta2V5d29yZC10eXBlOyB9XG5cbiAgLy8gQ29tbWVudHNcbiAgLmMgIHsgY29sb3I6ICRjb2RlaGlsaXRlLWNvbW1lbnQ7IH1cbiAgLmNtIHsgY29sb3I6ICRjb2RlaGlsaXRlLWNvbW1lbnQtbXVsdGlsaW5lOyB9XG4gIC5jcCB7IGNvbG9yOiAkY29kZWhpbGl0ZS1jb21tZW50LXByZXByb2M7IH1cbiAgLmMxIHsgY29sb3I6ICRjb2RlaGlsaXRlLWNvbW1lbnQtc2luZ2xlOyB9XG4gIC5jaCB7IGNvbG9yOiAkY29kZWhpbGl0ZS1jb21tZW50LXNoZWJhbmc7IH1cbiAgLmNzIHsgY29sb3I6ICRjb2RlaGlsaXRlLWNvbW1lbnQtc3BlY2lhbDsgfVxuXG4gIC8vIE5hbWVzXG4gIC5uYSB7IGNvbG9yOiAkY29kZWhpbGl0ZS1uYW1lLWF0dHJpYnV0ZTsgfVxuICAubmIgeyBjb2xvcjogJGNvZGVoaWxpdGUtbmFtZS1idWlsdGluOyB9XG4gIC5icCB7IGNvbG9yOiAkY29kZWhpbGl0ZS1uYW1lLWJ1aWx0aW4tcHNldWRvOyB9XG4gIC5uYyB7IGNvbG9yOiAkY29kZWhpbGl0ZS1uYW1lLWNsYXNzOyB9XG4gIC5ubyB7IGNvbG9yOiAkY29kZWhpbGl0ZS1uYW1lLWNvbnN0YW50OyB9XG4gIC5uZCB7IGNvbG9yOiAkY29kZWhpbGl0ZS1uYW1lLWVudGl0eTsgfVxuICAubmkgeyBjb2xvcjogJGNvZGVoaWxpdGUtbmFtZS1lbnRpdHk7IH1cbiAgLm5lIHsgY29sb3I6ICRjb2RlaGlsaXRlLW5hbWUtZXhjZXB0aW9uOyB9XG4gIC5uZiB7IGNvbG9yOiAkY29kZWhpbGl0ZS1uYW1lLWZ1bmN0aW9uOyB9XG4gIC5ubCB7IGNvbG9yOiAkY29kZWhpbGl0ZS1uYW1lLWxhYmVsOyB9XG4gIC5ubiB7IGNvbG9yOiAkY29kZWhpbGl0ZS1uYW1lLW5hbWVzcGFjZTsgfVxuICAubnQgeyBjb2xvcjogJGNvZGVoaWxpdGUtbmFtZS10YWc7IH1cbiAgLm52IHsgY29sb3I6ICRjb2RlaGlsaXRlLW5hbWUtdmFyaWFibGU7IH1cbiAgLnZjIHsgY29sb3I6ICRjb2RlaGlsaXRlLW5hbWUtdmFyaWFibGUtY2xhc3M7IH1cbiAgLnZnIHsgY29sb3I6ICRjb2RlaGlsaXRlLW5hbWUtdmFyaWFibGUtZ2xvYmFsOyB9XG4gIC52aSB7IGNvbG9yOiAkY29kZWhpbGl0ZS1uYW1lLXZhcmlhYmxlLWluc3RhbmNlOyB9XG4gIC5ueCB7IGNvbG9yOiAkY29kZWhpbGl0ZS1uYW1lLWV4dGVuc2lvbjsgfVxuXG4gIC8vIE51bWJlcnNcbiAgLm0gIHsgY29sb3I6ICRjb2RlaGlsaXRlLWxpdGVyYWwtbnVtYmVyOyB9XG4gIC5tZiB7IGNvbG9yOiAkY29kZWhpbGl0ZS1saXRlcmFsLW51bWJlci1mbG9hdDsgfVxuICAubWggeyBjb2xvcjogJGNvZGVoaWxpdGUtbGl0ZXJhbC1udW1iZXItaGV4OyB9XG4gIC5taSB7IGNvbG9yOiAkY29kZWhpbGl0ZS1saXRlcmFsLW51bWJlci1pbnRlZ2VyOyB9XG4gIC5pbCB7IGNvbG9yOiAkY29kZWhpbGl0ZS1saXRlcmFsLW51bWJlci1pbnRlZ2VyLWxvbmc7IH1cbiAgLm1vIHsgY29sb3I6ICRjb2RlaGlsaXRlLWxpdGVyYWwtbnVtYmVyLW9jdDsgfVxuXG4gIC8vIFN0cmluZ3NcbiAgLnMgIHsgY29sb3I6ICRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nOyB9XG4gIC5zYiB7IGNvbG9yOiAkY29kZWhpbGl0ZS1saXRlcmFsLXN0cmluZy1iYWNrdGlja3M7IH1cbiAgLnNjIHsgY29sb3I6ICRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nLWNoYXI7IH1cbiAgLnNkIHsgY29sb3I6ICRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nLWRvYzsgfVxuICAuczIgeyBjb2xvcjogJGNvZGVoaWxpdGUtbGl0ZXJhbC1zdHJpbmctZG91YmxlOyB9XG4gIC5zZSB7IGNvbG9yOiAkY29kZWhpbGl0ZS1saXRlcmFsLXN0cmluZy1lc2NhcGU7IH1cbiAgLnNoIHsgY29sb3I6ICRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nLWhlcmVkb2M7IH1cbiAgLnNpIHsgY29sb3I6ICRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nLWludGVycG9sOyB9XG4gIC5zeCB7IGNvbG9yOiAkY29kZWhpbGl0ZS1saXRlcmFsLXN0cmluZy1vdGhlcjsgfVxuICAuc3IgeyBjb2xvcjogJGNvZGVoaWxpdGUtbGl0ZXJhbC1zdHJpbmctcmVnZXg7IH1cbiAgLnMxIHsgY29sb3I6ICRjb2RlaGlsaXRlLWxpdGVyYWwtc3RyaW5nLXNpbmdsZTsgfVxuICAuc3MgeyBjb2xvcjogJGNvZGVoaWxpdGUtbGl0ZXJhbC1zdHJpbmctc3ltYm9sOyB9XG5cbiAgLy8gTWlzY2VsbGFuZW91c1xuICAuZXJyIHsgY29sb3I6ICRjb2RlaGlsaXRlLWVycm9yOyB9XG4gIC53IHsgY29sb3I6ICRjb2RlaGlsaXRlLXdoaXRlc3BhY2U7IH1cblxuICAvLyBIaWdobGlnaHRlZCBsaW5lc1xuICAuaGxsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgcHgycmVtKC0xMnB4KTtcbiAgICBwYWRkaW5nOiAwIHB4MnJlbSgxMnB4KTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudGl6ZSgkY2xyLXllbGxvdy01MDAsIDAuNSk7XG5cbiAgICAvLyBbbW9iaWxlIC1dOiBTdHJldGNoIHRvIHdob2xlIHdpZHRoXG4gICAgQGluY2x1ZGUgYnJlYWstdG8tZGV2aWNlKG1vYmlsZSkge1xuICAgICAgbWFyZ2luOiAwIHB4MnJlbSgtMTZweCk7XG4gICAgICBwYWRkaW5nOiAwIHB4MnJlbSgxNnB4KTtcbiAgICB9XG4gIH1cbn1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZXM6IGxheW91dFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBTY29wZWQgaW4gdHlwZXNldHRlZCBjb250ZW50IHRvIG1hdGNoIHNwZWNpZmljaXR5IG9mIHJlZ3VsYXIgY29udGVudFxuLm1kLXR5cGVzZXQge1xuXG4gIC8vIElmIGNvZGUgYmxvY2tzIGFyZSB3cmFwcGVkIHdpdGggY29kZWhpbGl0ZSwgdGhlIHN0eWxlcyBtdXN0IGJlIGFkanVzdGVkXG4gIC8vIHNvIHRoZSBtYXJrZXIgc3RyZXRjaGVzIHRvIHRoZSB3aG9sZSB3aWR0aCBhbmQgdGhlIHBhZGRpbmcgaXMgcmVzcGVjdGVkXG4gIC5jb2RlaGlsaXRlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luOiAxZW0gMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IHB4MnJlbSgycHgpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2RlLWJhY2tncm91bmQ7XG4gICAgY29sb3I6ICRtZC1jb2RlLWNvbG9yO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuXG4gICAgLy8gQWN0dWFsIGNvbnRhaW5lciB3aXRoIGNvZGUsIG92ZXJmbG93aW5nXG4gICAgcHJlLFxuICAgIGNvZGUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBwYWRkaW5nOiBweDJyZW0oMTAuNXB4KSBweDJyZW0oMTJweCk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcblxuICAgICAgLy8gT3ZlcnJpZGUgbmF0aXZlIHNjcm9sbGJhciBzdHlsZXNcbiAgICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICAgd2lkdGg6IHB4MnJlbSg0cHgpO1xuICAgICAgICBoZWlnaHQ6IHB4MnJlbSg0cHgpO1xuICAgICAgfVxuXG4gICAgICAvLyBTdHlsZSBzY3JvbGxiYXIgdGh1bWJcbiAgICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodGVyO1xuXG4gICAgICAgIC8vIEhvdmVyZWQgc2Nyb2xsYmFyIHRodW1iXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtZC1jb2xvci1hY2NlbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBJZiBub3QgdXNpbmcgUHlnbWVudHMsIGNvZGUgd2lsbCBiZSB1bmRlciBwcmUgPiBjb2RlXG4gIHByZS5jb2RlaGlsaXRlIHtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcblxuICAgIC8vIEFjdHVhbCBjb250YWluZXIgd2l0aCBjb2RlLCBvdmVyZmxvd2luZ1xuICAgIGNvZGUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nOiBweDJyZW0oMTAuNXB4KSBweDJyZW0oMTJweCk7XG4gICAgICBvdmVyZmxvdzogYXV0bztcbiAgICB9XG4gIH1cblxuICAvLyBCbG9jayB3aXRoIGxpbmUgbnVtYmVyc1xuICAuY29kZWhpbGl0ZXRhYmxlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDFlbSAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMmVtO1xuICAgIGZvbnQtc2l6ZTogbXMoMCk7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgIC8vIFNldCB0YWJsZSBlbGVtZW50cyB0byBibG9jayBsYXlvdXQsIGJlY2F1c2Ugb3RoZXJ3aXNlIHRoZSB3aG9sZSBmbGV4Ym94XG4gICAgLy8gaGFja2luZyB3b24ndCB3b3JrIGNvcnJlY3RseVxuICAgIHRib2R5LFxuICAgIHRkIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcGFkZGluZzogMDtcbiAgICB9XG5cbiAgICAvLyBXZSBuZWVkIHRvIHVzZSBmbGV4Ym94IGxheW91dCwgYmVjYXVzZSBvdGhlcndpc2UgaXQncyBub3QgcG9zc2libGUgdG9cbiAgICAvLyBtYWtlIHRoZSBjb2RlIGNvbnRhaW5lciBzY3JvbGwgd2hpbGUga2VlcGluZyB0aGUgbGluZSBudW1iZXJzIHN0YXRpY1xuICAgIHRyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuXG4gICAgLy8gVGhlIHByZSB0YWdzIGFyZSBuZXN0ZWQgaW5zaWRlIGEgdGFibGUsIHNvIHdlIG5lZWQgdG8gcmVtb3ZlIHRoZVxuICAgIC8vIG1hcmdpbiBiZWNhdXNlIGl0IGNvbGxhcHNlcyBiZWxvdyBhbGwgdGhlIG92ZXJmbG93c1xuICAgIC5jb2RlaGlsaXRlLFxuICAgIC5saW5lbm9kaXYge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICB9XG5cbiAgICAvLyBBZGQgc3BhY2luZyB0byBsaW5lIG51bWJlciBjb250YWluZXJcbiAgICAubGluZW5vZGl2IHtcbiAgICAgIHBhZGRpbmc6IHB4MnJlbSgxMC41cHgpIHB4MnJlbSgxMnB4KTtcbiAgICB9XG5cbiAgICAvLyBEaXNhYmxlIHVzZXIgc2VsZWN0aW9uLCBzbyBjb2RlIGNhbiBiZSBlYXNpbHkgY29waWVkIHdpdGhvdXRcbiAgICAvLyBhY2NpZGVudGFsbHkgYWxzbyBjb3B5aW5nIHRoZSBsaW5lIG51bWJlcnNcbiAgICAubGluZW5vcyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXN0O1xuICAgICAgY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHRlcjtcbiAgICAgIHVzZXItc2VsZWN0OiBub25lO1xuXG4gICAgICAvLyBSZXNldCBzcGFjaW5nc1xuICAgICAgcHJlIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFRoZSB0YWJsZSBjZWxsIGNvbnRhaW5pbmcgdGhlIGNvZGUgY29udGFpbmVyIHdyYXBwZXIgYW5kIGNvZGUgc2hvdWxkXG4gICAgLy8gc3RyZXRjaCBob3Jpem9udGFsbHkgdG8gdGhlIHJlbWFpbmluZyBzcGFjZVxuICAgIC5jb2RlIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgfVxuXG4gIC8vIEZ1bGwtd2lkdGggY29udGFpbmVyXG4gID4gLmNvZGVoaWxpdGUge1xuXG4gICAgLy8gW21vYmlsZSAtXTogU3RyZXRjaCB0byB3aG9sZSB3aWR0aFxuICAgIEBpbmNsdWRlIGJyZWFrLXRvLWRldmljZShtb2JpbGUpIHtcbiAgICAgIG1hcmdpbjogMWVtIHB4MnJlbSgtMTZweCk7XG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuXG4gICAgICAvLyBBY3R1YWwgY29udGFpbmVyIHdpdGggY29kZSwgb3ZlcmZsb3dpbmdcbiAgICAgIHByZSxcbiAgICAgIGNvZGUge1xuICAgICAgICBwYWRkaW5nOiBweDJyZW0oMTAuNXB4KSBweDJyZW0oMTZweCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gRnVsbC13aWR0aCBjb250YWluZXIgb24gdG9wLWxldmVsXG4gID4gLmNvZGVoaWxpdGV0YWJsZSB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcblxuICAgIC8vIFttb2JpbGUgLV06IFN0cmV0Y2ggdG8gd2hvbGUgd2lkdGhcbiAgICBAaW5jbHVkZSBicmVhay10by1kZXZpY2UobW9iaWxlKSB7XG4gICAgICBtYXJnaW46IDFlbSBweDJyZW0oLTE2cHgpO1xuICAgICAgYm9yZGVyLXJhZGl1czogMDtcblxuICAgICAgLy8gSW5jcmVhc2Ugc3BhY2luZ1xuICAgICAgLmNvZGVoaWxpdGUgPiBwcmUsXG4gICAgICAuY29kZWhpbGl0ZSA+IGNvZGUsXG4gICAgICAubGluZW5vZGl2IHtcbiAgICAgICAgcGFkZGluZzogcHgycmVtKDEwcHgpIHB4MnJlbSgxNnB4KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBXaGVuIHB5bWRvd254LnN1cGVyZmVuY2VzIGlzIGVuYWJsZWQgYnV0IGNvZGVoaWxpdGUgaXMgZGlzYWJsZWQsXG4gIC8vIHB5bWRvd254LmhpZ2hsaWdodCB3aWxsIGJlIHVzZWQuIFdoZW4gdGhpcyBoYXBwZW5zLCB0aGUgb3V0ZXJcbiAgLy8gY29udGFpbmVyIGFuZCB0YWJsZXMgZ2V0IHRoaXMgY2xhc3MgbmFtZXMgYnkgZGVmYXVsdC5cbiAgLmhpZ2hsaWdodCB7XG4gICAgQGV4dGVuZCAuY29kZWhpbGl0ZTtcbiAgfVxuXG4gIC8vIFNhbWUgYXMgYWJvdmUsIGJ1dCBmb3IgY29kZSBibG9ja3Mgd2l0aCBsaW5lIG51bWJlcnMgZW5hYmxlZFxuICAuaGlnaGxpZ2h0dGFibGUge1xuICAgIEBleHRlbmQgLmNvZGVoaWxpdGV0YWJsZTtcbiAgfVxufVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFNjb3BlZCBpbiB0eXBlc2V0dGVkIGNvbnRlbnQgdG8gbWF0Y2ggc3BlY2lmaWNpdHkgb2YgcmVndWxhciBjb250ZW50XG4ubWQtdHlwZXNldCB7XG5cbiAgLy8gQWxsIGZvb3Rub3RlIHJlZmVyZW5jZXNcbiAgW2lkXj1cImZucmVmOlwiXSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXG4gICAgLy8gVGFyZ2V0ZWQgYW5jaG9yXG4gICAgJjp0YXJnZXQge1xuICAgICAgbWFyZ2luLXRvcDogLTEgKiBweDJyZW0oNDhweCArIDEycHggKyAxNnB4KTtcbiAgICAgIHBhZGRpbmctdG9wOiBweDJyZW0oNDhweCArIDEycHggKyAxNnB4KTtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIH1cbiAgfVxuXG4gIC8vIEFsbCBmb290bm90ZSBiYWNrIHJlZmVyZW5jZXNcbiAgW2lkXj1cImZuOlwiXSB7XG5cbiAgICAvLyBBZGQgc3BhY2luZyB0byBhbmNob3IgZm9yIG9mZnNldFxuICAgICY6OmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgaGVpZ2h0OiAwO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICB9XG5cbiAgICAvLyBUYXJnZXRlZCBhbmNob3JcbiAgICAmOnRhcmdldDo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luLXRvcDogLTEgKiBweDJyZW0oNDhweCArIDEycHggKyAxMHB4KTtcbiAgICAgIHBhZGRpbmctdG9wOiBweDJyZW0oNDhweCArIDEycHggKyAxMHB4KTtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIH1cbiAgfVxuXG4gIC8vIEZvb3Rub3RlcyBleHRlbnNpb25cbiAgLmZvb3Rub3RlIHtcbiAgICBjb2xvcjogJG1kLWNvbG9yLWJsYWNrLS1saWdodDtcbiAgICBmb250LXNpemU6IG1zKC0xKTtcblxuICAgIC8vIFJlbW92ZSBhZGRpdGlvbmFsIHNwYWNpbmcgb24gZm9vdG5vdGVzXG4gICAgb2wge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgfVxuXG4gICAgLy8gRm9vdG5vdGVcbiAgICBsaSB7XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjI1cztcblxuICAgICAgLy8gRGFya2VuIGNvbG9yIGZvciB0YXJnZXRlZCBmb290bm90ZVxuICAgICAgJjp0YXJnZXQge1xuICAgICAgICBjb2xvcjogJG1kLWNvbG9yLWJsYWNrO1xuICAgICAgfVxuXG4gICAgICAvLyBSZW1vdmUgc3BhY2luZyBvbiBmaXJzdCBlbGVtZW50XG4gICAgICA6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgfVxuXG4gICAgICAvLyBNYWtlIGJhY2sgcmVmZXJlbmNlcyB2aXNpYmxlIG9uIGhvdmVyXG4gICAgICAmOmhvdmVyICAuZm9vdG5vdGUtYmFja3JlZixcbiAgICAgICY6dGFyZ2V0IC5mb290bm90ZS1iYWNrcmVmIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgfVxuXG4gICAgICAvLyBBY3RpdmUgb3IgdGFyZ2V0ZWQgYmFjayByZWZlcmVuY2VcbiAgICAgICY6aG92ZXIgIC5mb290bm90ZS1iYWNrcmVmOmhvdmVyLFxuICAgICAgJjp0YXJnZXQgLmZvb3Rub3RlLWJhY2tyZWYge1xuICAgICAgICBjb2xvcjogJG1kLWNvbG9yLWFjY2VudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBGb290bm90ZSByZWZlcmVuY2VcbiAgLmZvb3Rub3RlLXJlZiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvaW50ZXItZXZlbnRzOiBpbml0aWFsO1xuXG4gICAgLy8gUmVuZGVyIGEgdGhpbiBsaW5lIGJlZm9yZSBmb290bm90ZVxuICAgICY6OmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICBtYXJnaW46IDAgMC4yZW07XG4gICAgICBib3JkZXItbGVmdDogcHgycmVtKDFweCkgc29saWQgJG1kLWNvbG9yLWJsYWNrLS1saWdodGVyO1xuICAgICAgZm9udC1zaXplOiAxLjI1ZW07XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgdmVydGljYWwtYWxpZ246IHB4MnJlbSgtNXB4KTtcbiAgICB9XG4gIH1cblxuICAvLyBGb290bm90ZSBiYWNrIHJlZmVyZW5jZVxuICAuZm9vdG5vdGUtYmFja3JlZiB7XG4gICAgQGV4dGVuZCAlbWQtaWNvbjtcblxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgocHgycmVtKDVweCkpO1xuICAgIHRyYW5zaXRpb246XG4gICAgICB0cmFuc2Zvcm0gMC4yNXMgIDAuMTI1cyxcbiAgICAgIGNvbG9yICAgICAwLjI1cyxcbiAgICAgIG9wYWNpdHkgICAwLjEyNXMgMC4xMjVzO1xuICAgIGNvbG9yOiAkbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXI7XG4gICAgLy8gSGFjazogcmVtb3ZlIFVuaWNvZGUgYXJyb3cgZm9yIGljb25cbiAgICBmb250LXNpemU6IDA7XG4gICAgb3BhY2l0eTogMDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG5cbiAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKHB4MnJlbSgtNXB4KSk7XG4gICAgfVxuXG4gICAgLy8gQmFjayByZWZlcmVuY2UgaWNvblxuICAgICY6OmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBmb250LXNpemU6IHB4MnJlbSgxNnB4KTtcbiAgICAgIGNvbnRlbnQ6IFwiXFxFMzFCXCI7IC8vIGtleWJvYXJkX3JldHVyblxuXG4gICAgICAvLyBBZGp1c3QgZm9yIFJUTCBsYW5ndWFnZXNcbiAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKC0xKVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFNjb3BlZCBpbiB0eXBlc2V0dGVkIGNvbnRlbnQgdG8gbWF0Y2ggc3BlY2lmaWNpdHkgb2YgcmVndWxhciBjb250ZW50XG4ubWQtdHlwZXNldCB7XG5cbiAgLy8gUGVybWFsaW5rcyBleHRlbnNpb25cbiAgLmhlYWRlcmxpbmsge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tbGVmdDogcHgycmVtKDEwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIHB4MnJlbSg1cHgpKTtcbiAgICB0cmFuc2l0aW9uOlxuICAgICAgdHJhbnNmb3JtIDAuMjVzICAwLjI1cyxcbiAgICAgIGNvbG9yICAgICAwLjI1cyxcbiAgICAgIG9wYWNpdHkgICAwLjEyNXMgMC4yNXM7XG4gICAgb3BhY2l0eTogMDtcblxuICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IHB4MnJlbSgxMHB4KTtcbiAgICAgIG1hcmdpbi1sZWZ0OiBpbml0aWFsO1xuICAgIH1cblxuICAgIC8vIEhpZ2hlciBzcGVjaWZpY2l0eSBmb3IgY29sb3IgZHVlIHRvIHBhbGV0dGVzIGludGVncmF0aW9uXG4gICAgaHRtbCBib2R5ICYge1xuICAgICAgY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHRlcjtcbiAgICB9XG5cbiAgICAvLyBIaWRlIGZvciBwcmludFxuICAgIEBtZWRpYSBwcmludCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIC8vIENvcnJlY3QgYW5jaG9yIG9mZnNldCBmb3IgbGluayBibHVycmluZ1xuICBAZWFjaCAkbGV2ZWwsICRkZWx0YSBpbiAoXG4gICAgaDE6IDlweCxcbiAgICBoMjogOHB4LFxuICAgIGgzOiA5cHgsXG4gICAgaDQ6IDlweCxcbiAgICBoNTogMTFweCxcbiAgICBoNjogMTFweFxuICApIHtcbiAgICAjeyRsZXZlbH1baWRdIHtcblxuICAgICAgLy8gVW4tdGFyZ2V0ZWQgYW5jaG9yXG4gICAgICAmOjpiZWZvcmUge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luLXRvcDogLSRkZWx0YTtcbiAgICAgICAgcGFkZGluZy10b3A6ICRkZWx0YTtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIH1cblxuICAgICAgLy8gVGFyZ2V0ZWQgYW5jaG9yICg0OHB4IGZyb20gaGVhZGVyLCAxMnB4IGZyb20gc2lkZWJhciBvZmZzZXQpXG4gICAgICAmOnRhcmdldDo6YmVmb3JlIHtcbiAgICAgICAgbWFyZ2luLXRvcDogLTEgKiBweDJyZW0oNDhweCArIDEycHggKyAkZGVsdGEpO1xuICAgICAgICBwYWRkaW5nLXRvcDogcHgycmVtKDQ4cHggKyAxMnB4ICsgJGRlbHRhKTtcbiAgICAgIH1cblxuICAgICAgLy8gTWFrZSBwZXJtYWxpbmsgdmlzaWJsZSBvbiBob3ZlclxuICAgICAgJjpob3ZlciAgLmhlYWRlcmxpbmssXG4gICAgICAmOnRhcmdldCAuaGVhZGVybGluayxcbiAgICAgICYgLmhlYWRlcmxpbms6Zm9jdXMge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cblxuICAgICAgLy8gQWN0aXZlIG9yIHRhcmdldGVkIHBlcm1hbGlua1xuICAgICAgJjpob3ZlciAgLmhlYWRlcmxpbms6aG92ZXIsXG4gICAgICAmOnRhcmdldCAuaGVhZGVybGluayxcbiAgICAgICYgLmhlYWRlcmxpbms6Zm9jdXMge1xuICAgICAgICBjb2xvcjogJG1kLWNvbG9yLWFjY2VudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8vLy9cbi8vLyBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBNYXJ0aW4gRG9uYXRoIDxtYXJ0aW4uZG9uYXRoQHNxdWlkZnVuay5jb20+XG4vLy9cbi8vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSxcbi8vLyB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uXG4vLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsXG4vLy8gYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlXG4vLy8gU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vL1xuLy8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vLy9cbi8vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTi1JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMXG4vLy8gVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lOR1xuLy8vIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVJcbi8vLyBERUFMSU5HU1xuLy8vL1xuXG4vLyBzdHlsZWxpbnQtZGlzYWJsZSBzZWxlY3Rvci1jbGFzcy1wYXR0ZXJuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFNjb3BlZCBpbiB0eXBlc2V0dGVkIGNvbnRlbnQgdG8gbWF0Y2ggc3BlY2lmaWNpdHkgb2YgcmVndWxhciBjb250ZW50XG4ubWQtdHlwZXNldCB7XG5cbiAgLy8gTWF0aEpheCBpbnRlZ3JhdGlvbiAtIGFkZCBwYWRkaW5nIHRvIG9taXQgdmVydGljYWwgc2Nyb2xsYmFyXG4gIC5NSlhjLWRpc3BsYXkge1xuICAgIG1hcmdpbjogMC43NWVtIDA7XG4gICAgcGFkZGluZzogMC43NWVtIDA7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICB9XG5cbiAgLy8gU3RyZXRjaCB0b3AtbGV2ZWwgY29udGFpbmVyc1xuICA+IHAgPiAuTUpYYy1kaXNwbGF5IHtcblxuICAgIC8vIFttb2JpbGUgLV06IFN0cmV0Y2ggdG8gd2hvbGUgd2lkdGhcbiAgICBAaW5jbHVkZSBicmVhay10by1kZXZpY2UobW9iaWxlKSB7XG4gICAgICBtYXJnaW46IDAuNzVlbSBweDJyZW0oLTE2cHgpO1xuICAgICAgcGFkZGluZzogMC4yNWVtIHB4MnJlbSgxNnB4KTtcbiAgICB9XG4gIH1cblxuICAvLyBSZW1vdmUgb3V0bGluZSBvbiB0YWIgaW5kZXhcbiAgLk1hdGhKYXhfQ0hUTUwge1xuICAgIG91dGxpbmU6IDA7XG4gIH1cbn1cbiIsIi8vLy9cbi8vLyBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBNYXJ0aW4gRG9uYXRoIDxtYXJ0aW4uZG9uYXRoQHNxdWlkZnVuay5jb20+XG4vLy9cbi8vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSxcbi8vLyB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uXG4vLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsXG4vLy8gYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlXG4vLy8gU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vL1xuLy8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vLy9cbi8vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTi1JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMXG4vLy8gVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lOR1xuLy8vIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVJcbi8vLyBERUFMSU5HU1xuLy8vL1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSdWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBTY29wZWQgaW4gdHlwZXNldHRlZCBjb250ZW50IHRvIG1hdGNoIHNwZWNpZmljaXR5IG9mIHJlZ3VsYXIgY29udGVudFxuLm1kLXR5cGVzZXQge1xuXG4gIC8vIERlbGV0aW9ucywgYWRkaXRpb25zIGFuZCBjb21tZW50c1xuICBkZWwuY3JpdGljLFxuICBpbnMuY3JpdGljLFxuICAuY3JpdGljLmNvbW1lbnQge1xuICAgIG1hcmdpbjogMCAwLjI1ZW07XG4gICAgcGFkZGluZzogMC4wNjI1ZW0gMDtcbiAgICBib3JkZXItcmFkaXVzOiBweDJyZW0oMnB4KTtcbiAgICBib3gtZGVjb3JhdGlvbi1icmVhazogY2xvbmU7XG4gIH1cblxuICAvLyBEZWxldGlvblxuICBkZWwuY3JpdGljIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29kZWhpbGl0ZS1kaWZmLWRlbGV0ZWQ7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVE9ETzogZGVwZW5kZW50IG9uIG9yZGVyIG9mIGluY2x1c2lvblxuICAgIGJveC1zaGFkb3c6XG4gICAgICArMC4yNWVtIDAgMCAkY29kZWhpbGl0ZS1kaWZmLWRlbGV0ZWQsXG4gICAgICAtMC4yNWVtIDAgMCAkY29kZWhpbGl0ZS1kaWZmLWRlbGV0ZWQ7XG4gIH1cblxuICAvLyBBZGRpdGlvblxuICBpbnMuY3JpdGljIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29kZWhpbGl0ZS1kaWZmLWluc2VydGVkOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVE9ETzogZGVwZW5kZW50IG9uIG9yZGVyIG9mIGluY2x1c2lvblxuICAgIGJveC1zaGFkb3c6XG4gICAgICArMC4yNWVtIDAgMCAkY29kZWhpbGl0ZS1kaWZmLWluc2VydGVkLFxuICAgICAgLTAuMjVlbSAwIDAgJGNvZGVoaWxpdGUtZGlmZi1pbnNlcnRlZDtcbiAgfVxuXG4gIC8vIENvbW1lbnRcbiAgLmNyaXRpYy5jb21tZW50IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWQtY29kZS1iYWNrZ3JvdW5kOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVE9ETzogcmVuYW1lLCBjZW50cmFsaXplIHNvbWVob3dcbiAgICBjb2xvcjogJG1kLWNvZGUtY29sb3I7XG4gICAgYm94LXNoYWRvdzpcbiAgICAgICswLjI1ZW0gMCAwICRtZC1jb2RlLWJhY2tncm91bmQsXG4gICAgICAtMC4yNWVtIDAgMCAkbWQtY29kZS1iYWNrZ3JvdW5kO1xuXG4gICAgLy8gSWNvblxuICAgICY6OmJlZm9yZSB7XG4gICAgICBAZXh0ZW5kICVtZC1pY29uO1xuXG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwLjEyNWVtO1xuICAgICAgY29sb3I6ICRtZC1jb2xvci1ibGFjay0tbGlnaHRlcjtcbiAgICAgIGNvbnRlbnQ6IFwiXFxFMEI3XCI7IC8vIGNoYXRcbiAgICAgIHZlcnRpY2FsLWFsaWduOiAtMC4xMjVlbTtcbiAgICB9XG4gIH1cblxuICAvLyBCbG9ja1xuICAuY3JpdGljLmJsb2NrIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDFlbSAwO1xuICAgIHBhZGRpbmctcmlnaHQ6IHB4MnJlbSgxNnB4KTtcbiAgICBwYWRkaW5nLWxlZnQ6IHB4MnJlbSgxNnB4KTtcbiAgICBib3gtc2hhZG93OiBub25lO1xuXG4gICAgLy8gRGVjcmVhc2Ugc3BhY2luZyBvbiBmaXJzdCBlbGVtZW50XG4gICAgOmZpcnN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi10b3A6IDAuNWVtO1xuICAgIH1cblxuICAgIC8vIERlY3JlYXNlIHNwYWNpbmcgb24gbGFzdCBlbGVtZW50XG4gICAgOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgfVxuICB9XG59XG4iLCIvLy8vXG4vLy8gQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgTWFydGluIERvbmF0aCA8bWFydGluLmRvbmF0aEBzcXVpZGZ1bmsuY29tPlxuLy8vXG4vLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksXG4vLy8gdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8vIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLFxuLy8vIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZVxuLy8vIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vLy9cbi8vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy8vXG4vLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT04tSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTFxuLy8vIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkdcbi8vLyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSXG4vLy8gREVBTElOR1Ncbi8vLy9cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU2NvcGVkIGluIHR5cGVzZXR0ZWQgY29udGVudCB0byBtYXRjaCBzcGVjaWZpY2l0eSBvZiByZWd1bGFyIGNvbnRlbnRcbi5tZC10eXBlc2V0IHtcblxuICAvLyBEZXRhaWxzIGV4dGVuc2lvblxuICBkZXRhaWxzIHtcbiAgICBAZXh0ZW5kIC5hZG1vbml0aW9uO1xuXG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy10b3A6IDA7XG5cbiAgICAvLyBSb3RhdGUgdGl0bGUgaWNvblxuICAgICZbb3Blbl0gPiBzdW1tYXJ5OjphZnRlciB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgIH1cblxuICAgIC8vIFJlbW92ZSBib3R0b20gc3BhY2luZ1xuICAgICY6bm90KFtvcGVuXSkge1xuICAgICAgcGFkZGluZy1ib3R0b206IDA7XG5cbiAgICAgIC8vIFJlbW92ZSBib3R0b20gYm9yZGVyIGlmIGJsb2NrIGlzIGNsb3NlZFxuICAgICAgPiBzdW1tYXJ5IHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBJbmNyZWFzZSBzcGFjaW5nIHRvIHRoZSByaWdodCAtIHNjb3BlZCBoZXJlIGZvciBoaWdoZXIgc3BlY2lmaWNpdHlcbiAgICBzdW1tYXJ5IHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IHB4MnJlbSg0MHB4KTtcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IHB4MnJlbSg0MHB4KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBNYW51YWxseSBoaWRlIGFuZCBzaG93LCBpZiBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBkZXRhaWxzXG4gICAgLm5vLWRldGFpbHMgJjpub3QoW29wZW5dKSB7XG5cbiAgICAgIC8vIEhpZGUgYWxsIG5lc3RlZCB0YWdzIC4uLlxuICAgICAgPiAqIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cblxuICAgICAgLy8gLi4uIGJ1dCBzaG93IHRpdGxlXG4gICAgICBzdW1tYXJ5IHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gVGl0bGVcbiAgc3VtbWFyeSB7XG4gICAgQGV4dGVuZCAuYWRtb25pdGlvbi10aXRsZTtcblxuICAgIC8vIEhhY2s6IHNldCB0byBibG9jaywgc28gRmlyZWZveCBkb2Vzbid0IHJlbmRlciBtYXJrZXJcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIC8vIFJlbW92ZSBkZWZhdWx0IGRldGFpbHMgbWFya2VyXG4gICAgJjo6LXdlYmtpdC1kZXRhaWxzLW1hcmtlciB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIC8vIEljb25cbiAgICAmOjphZnRlciB7XG4gICAgICBAZXh0ZW5kICVtZC1pY29uO1xuXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IHB4MnJlbSg4cHgpO1xuICAgICAgcmlnaHQ6IHB4MnJlbSgxMnB4KTtcbiAgICAgIGNvbG9yOiAkbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXI7XG4gICAgICBmb250LXNpemU6IHB4MnJlbSgyMHB4KTtcbiAgICAgIGNvbnRlbnQ6IFwiXFxFMzEzXCI7IC8vIGtleWJvYXJkX2Fycm93X2Rvd25cblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICByaWdodDogaW5pdGlhbDtcbiAgICAgICAgbGVmdDogcHgycmVtKDEycHgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFNjb3BlZCBpbiB0eXBlc2V0dGVkIGNvbnRlbnQgdG8gbWF0Y2ggc3BlY2lmaWNpdHkgb2YgcmVndWxhciBjb250ZW50XG4ubWQtdHlwZXNldCB7XG5cbiAgLy8gQ29ycmVjdCBhbGlnbm1lbnQgb2YgZW1vamlzXG4gIC5lbW9qaW9uZSB7XG4gICAgd2lkdGg6IHB4MnJlbSgyMHB4KTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7XG4gIH1cbn1cbiIsIi8vLy9cbi8vLyBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBNYXJ0aW4gRG9uYXRoIDxtYXJ0aW4uZG9uYXRoQHNxdWlkZnVuay5jb20+XG4vLy9cbi8vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSxcbi8vLyB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uXG4vLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsXG4vLy8gYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlXG4vLy8gU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vL1xuLy8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vLy9cbi8vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTi1JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMXG4vLy8gVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lOR1xuLy8vIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVJcbi8vLyBERUFMSU5HU1xuLy8vL1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSdWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBTY29wZWQgaW4gdHlwZXNldHRlZCBjb250ZW50IHRvIG1hdGNoIHNwZWNpZmljaXR5IG9mIHJlZ3VsYXIgY29udGVudFxuLm1kLXR5cGVzZXQge1xuXG4gIC8vIFF1YWxpZmllZCBjbGFzcyBzZWxlY3RvciB0byBkaXN0aW5ndWlzaCBpbmxpbmUgY29kZSBmcm9tIGNvZGUgYmxvY2tzXG4gIGNvZGUuY29kZWhpbGl0ZSB7XG4gICAgJGNvcnJlY3Q6IDEgLyAwLjg1O1xuXG4gICAgbWFyZ2luOiAwIDAuMjVlbSAqICRjb3JyZWN0O1xuICAgIHBhZGRpbmc6IDAuMDYyNWVtICogJGNvcnJlY3QgMDtcbiAgfVxufVxuIiwiLy8vL1xuLy8vIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IE1hcnRpbiBEb25hdGggPG1hcnRpbi5kb25hdGhAc3F1aWRmdW5rLmNvbT5cbi8vL1xuLy8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuLy8vIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb25cbi8vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSxcbi8vLyBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbi8vLyBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy8vXG4vLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vL1xuLy8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTExcbi8vLyBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HXG4vLy8gRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUlxuLy8vIERFQUxJTkdTXG4vLy8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFNjb3BlZCBpbiB0eXBlc2V0dGVkIGNvbnRlbnQgdG8gbWF0Y2ggc3BlY2lmaWNpdHkgb2YgcmVndWxhciBjb250ZW50XG4ubWQtdHlwZXNldCB7XG5cbiAgLy8gVGFiYmVkIGNvZGUgYmxvY2sgY29udGVudFxuICAuc3VwZXJmZW5jZXMtY29udGVudCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBvcmRlcjogOTk7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG1kLWNvbG9yLXdoaXRlO1xuXG4gICAgLy8gQWN0dWFsIGNvbnRlbnRcbiAgICA+ICoge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgYm9yZGVyLXJhZGl1czogMFxuICAgIH1cbiAgfVxuXG4gIC8vIFRhYmJlZCBjb2RlIGJsb2NrIGNvbnRhaW5lclxuICAuc3VwZXJmZW5jZXMtdGFicyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIG1hcmdpbjogMWVtIDA7XG4gICAgYm9yZGVyOiBweDJyZW0oMXB4KSBzb2xpZCAkbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXN0O1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMmVtO1xuXG4gICAgLy8gSGlkZSByYWRpbyBidXR0b25zXG4gICAgPiBpbnB1dCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgICAvLyBBY3RpdmUgdGFiIGxhYmVsXG4gICAgICAmOmNoZWNrZWQgKyBsYWJlbCB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG5cbiAgICAgICAgLy8gU2hvdyBjb2RlIHRhYiBjb250ZW50XG4gICAgICAgICYgKyAuc3VwZXJmZW5jZXMtY29udGVudCB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBUYWIgbGFiZWxcbiAgICA+IGxhYmVsIHtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgcGFkZGluZzogcHgycmVtKDEycHgpO1xuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4xMjVzO1xuICAgICAgZm9udC1zaXplOiBtcygtMSk7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgIC8vIEhvdmVyZWQgdGFiIGxhYmVsXG4gICAgICBodG1sICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogJG1kLWNvbG9yLWFjY2VudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBGdWxsLXdpZHRoIGNvbnRhaW5lciBvbiB0b3AtbGV2ZWxcbiAgPiAuc3VwZXJmZW5jZXMtdGFicyB7XG5cbiAgICAvLyBbbW9iaWxlIC1dOiBTdHJldGNoIHRvIHdob2xlIHdpZHRoXG4gICAgQGluY2x1ZGUgYnJlYWstdG8tZGV2aWNlKG1vYmlsZSkge1xuICAgICAgbWFyZ2luOiAxZW0gcHgycmVtKC0xNnB4KTtcbiAgICAgIGJvcmRlcjogMDtcbiAgICAgIGJvcmRlci10b3A6IHB4MnJlbSgxcHgpIHNvbGlkICRtZC1jb2xvci1ibGFjay0tbGlnaHRlc3Q7XG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuXG4gICAgICAvLyBBY3R1YWwgY29udGFpbmVyIHdpdGggY29kZSwgb3ZlcmZsb3dpbmdcbiAgICAgIHByZSxcbiAgICAgIGNvZGUge1xuICAgICAgICBwYWRkaW5nOiBweDJyZW0oMTAuNXB4KSBweDJyZW0oMTZweCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvLy8vXG4vLy8gQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgTWFydGluIERvbmF0aCA8bWFydGluLmRvbmF0aEBzcXVpZGZ1bmsuY29tPlxuLy8vXG4vLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksXG4vLy8gdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuLy8vIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLFxuLy8vIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZVxuLy8vIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vLy9cbi8vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy8vXG4vLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT04tSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTFxuLy8vIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkdcbi8vLyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSXG4vLy8gREVBTElOR1Ncbi8vLy9cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU2NvcGVkIGluIHR5cGVzZXR0ZWQgY29udGVudCB0byBtYXRjaCBzcGVjaWZpY2l0eSBvZiByZWd1bGFyIGNvbnRlbnRcbi5tZC10eXBlc2V0IHtcblxuICAvLyBSZW1vdmUgbGlzdCBpY29uIG9uIHRhc2sgaXRlbXNcbiAgLnRhc2stbGlzdC1pdGVtIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuXG4gICAgLy8gTWFrZSBjaGVja2JveCBpdGVtcyBhbGlnbiB3aXRoIG5vcm1hbCBsaXN0IGl0ZW1zLCBidXQgcG9zaXRpb25cbiAgICAvLyBldmVyeXRoaW5nIGluIGVtcyBmb3IgY29ycmVjdCBsYXlvdXQgYXQgc21hbGxlciBmb250IHNpemVzXG4gICAgW3R5cGU9XCJjaGVja2JveFwiXSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDAuNDVlbTtcbiAgICAgIGxlZnQ6IC0yZW07XG5cbiAgICAgIC8vIEFkanVzdCBmb3IgUlRMIGxhbmd1YWdlc1xuICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgcmlnaHQ6IC0yZW07XG4gICAgICAgIGxlZnQ6IGluaXRpYWw7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gV3JhcHBlciBmb3IgbGlzdCBjb250cm9scywgaW4gY2FzZSBjdXN0b20gY2hlY2tib3hlcyBhcmUgZW5hYmxlZFxuICAudGFzay1saXN0LWNvbnRyb2wge1xuXG4gICAgLy8gQ2hlY2tib3ggaWNvbiBpbiB1bmNoZWNrZWQgc3RhdGVcbiAgICAudGFzay1saXN0LWluZGljYXRvcjo6YmVmb3JlIHtcbiAgICAgIEBleHRlbmQgJW1kLWljb247XG5cbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMC4xNWVtO1xuICAgICAgbGVmdDogLTEuMjVlbTtcbiAgICAgIGNvbG9yOiAkbWQtY29sb3ItYmxhY2stLWxpZ2h0ZXI7XG4gICAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICAgIGNvbnRlbnQ6IFwiXFxFODM1XCI7IC8vIGNoZWNrX2JveF9vdXRsaW5lX2JsYW5rXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogLTAuMjVlbTtcblxuICAgICAgLy8gQWRqdXN0IGZvciBSVEwgbGFuZ3VhZ2VzXG4gICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICByaWdodDogLTEuMjVlbTtcbiAgICAgICAgbGVmdDogaW5pdGlhbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBDaGVja2JveCBpY29uIGluIGNoZWNrZWQgc3RhdGVcbiAgICBbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyAudGFzay1saXN0LWluZGljYXRvcjo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXFxFODM0XCI7IC8vIGNoZWNrX2JveFxuICAgIH1cblxuICAgIC8vIEhpZGUgb3JpZ2luYWwgY2hlY2tib3ggYmVoaW5kIGljb25cbiAgICBbdHlwZT1cImNoZWNrYm94XCJdIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICB9XG4gIH1cbn1cbiIsIi8vLy9cbi8vLyBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBNYXJ0aW4gRG9uYXRoIDxtYXJ0aW4uZG9uYXRoQHNxdWlkZnVuay5jb20+XG4vLy9cbi8vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSxcbi8vLyB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uXG4vLy8gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsXG4vLy8gYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlXG4vLy8gU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vL1xuLy8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vLy9cbi8vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTi1JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMXG4vLy8gVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lOR1xuLy8vIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVJcbi8vLyBERUFMSU5HU1xuLy8vL1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBWYXJpYWJsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8vXG4vLy8gRGV2aWNlLXNwZWNpZmljIGJyZWFrcG9pbnRzXG4vLy9cbi8vLyBAZXhhbXBsZVxuLy8vICAgJGJyZWFrLWRldmljZXM6IChcbi8vLyAgICAgbW9iaWxlOiAoXG4vLy8gICAgICAgcG9ydHJhaXQ6ICAyMjBweCAgNDc5cHgsXG4vLy8gICAgICAgbGFuZHNjYXBlOiA0ODBweCAgNzE5cHhcbi8vLyAgICAgKSxcbi8vLyAgICAgdGFibGV0OiAoXG4vLy8gICAgICAgcG9ydHJhaXQ6ICA3MjBweCAgOTU5cHgsXG4vLy8gICAgICAgbGFuZHNjYXBlOiA5NjBweCAgMTIxOXB4XG4vLy8gICAgICksXG4vLy8gICAgIHNjcmVlbjogKFxuLy8vICAgICAgIHNtYWxsOiAgICAgMTIyMHB4IDE1OTlweCxcbi8vLyAgICAgICBtZWRpdW06ICAgIDE2MDBweCAxOTk5cHgsXG4vLy8gICAgICAgbGFyZ2U6ICAgICAyMDAwcHhcbi8vLyAgICAgKVxuLy8vICAgKTtcbi8vL1xuLy8vIEBncm91cCAgaGVscGVyc1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEB0eXBlICAgTWFwXG4vLy9cbiRicmVhay1kZXZpY2VzOiAoKSAhZGVmYXVsdDtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gSGVscGVyc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLy9cbi8vLyBDaG9vc2UgbWluaW11bSBhbmQgbWF4aW11bSBkZXZpY2Ugd2lkdGhzXG4vLy9cbi8vLyBAZ3JvdXAgIGhlbHBlcnNcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0gIHtNYXB9ICAkZGV2aWNlcyBNYXAgb2YgZGV2aWNlc1xuLy8vIEByZXR1cm4ge0xpc3R9ICAgICAgICAgIE1pbmltdW0gYW5kIG1heGltdW0gd2lkdGhcbi8vL1xuQGZ1bmN0aW9uIGJyZWFrLXNlbGVjdC1taW4tbWF4KCRkZXZpY2VzKSB7XG4gICRtaW46IDEwMDAwMDA7XG4gICRtYXg6IDA7XG4gIEBlYWNoICRrZXksICR2YWx1ZSBpbiAkZGV2aWNlcyB7XG4gICAgQHdoaWxlIHR5cGUtb2YoJHZhbHVlKSA9PSBtYXAge1xuICAgICAgJHZhbHVlOiBicmVhay1zZWxlY3QtbWluLW1heCgkdmFsdWUpO1xuICAgIH1cbiAgICBAaWYgdHlwZS1vZigkdmFsdWUpID09IGxpc3Qge1xuICAgICAgQGVhY2ggJG51bWJlciBpbiAkdmFsdWUge1xuICAgICAgICBAaWYgdHlwZS1vZigkbnVtYmVyKSA9PSBudW1iZXIge1xuICAgICAgICAgICRtaW46IG1pbigkbnVtYmVyLCAkbWluKTtcbiAgICAgICAgICBAaWYgJG1heCAhPSBudWxsIHtcbiAgICAgICAgICAgICRtYXg6IG1heCgkbnVtYmVyLCAkbWF4KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgIEBlcnJvciBcIkludmFsaWQgbnVtYmVyOiAjeyRudW1iZXJ9XCI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IEBlbHNlaWYgdHlwZS1vZigkdmFsdWUpID09IG51bWJlciB7XG4gICAgICAkbWluOiBtaW4oJHZhbHVlLCAkbWluKTtcbiAgICAgICRtYXg6IG51bGw7XG4gICAgfSBAZWxzZSB7XG4gICAgICBAZXJyb3IgXCJJbnZhbGlkIHZhbHVlOiAjeyR2YWx1ZX1cIjtcbiAgICB9XG4gIH1cbiAgQHJldHVybiAkbWluLCAkbWF4O1xufVxuXG4vLy9cbi8vLyBTZWxlY3QgbWluaW11bSBhbmQgbWF4aW11bSB3aWR0aHMgZm9yIGEgZGV2aWNlIGJyZWFrcG9pbnRcbi8vL1xuLy8vIEBncm91cCAgaGVscGVyc1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSAge1N0cmluZ30gJGRldmljZSBEZXZpY2Vcbi8vLyBAcmV0dXJuIHtMaXN0fSAgICAgICAgICAgTWluaW11bSBhbmQgbWF4aW11bSB3aWR0aFxuLy8vXG5AZnVuY3Rpb24gYnJlYWstc2VsZWN0LWRldmljZSgkZGV2aWNlKSB7XG4gICRjdXJyZW50OiAkYnJlYWstZGV2aWNlcztcbiAgQGZvciAkbiBmcm9tIDEgdGhyb3VnaCBsZW5ndGgoJGRldmljZSkge1xuICAgIEBpZiB0eXBlLW9mKCRjdXJyZW50KSA9PSBtYXAge1xuICAgICAgJGN1cnJlbnQ6IG1hcC1nZXQoJGN1cnJlbnQsIG50aCgkZGV2aWNlLCAkbikpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgQGVycm9yIFwiSW52YWxpZCBkZXZpY2UgbWFwOiAjeyRkZXZpY2VzfVwiO1xuICAgIH1cbiAgfVxuICBAaWYgdHlwZS1vZigkY3VycmVudCkgPT0gbGlzdCBvciB0eXBlLW9mKCRjdXJyZW50KSA9PSBudW1iZXIge1xuICAgICRjdXJyZW50OiAoZGVmYXVsdDogJGN1cnJlbnQpO1xuICB9XG4gIEByZXR1cm4gYnJlYWstc2VsZWN0LW1pbi1tYXgoJGN1cnJlbnQpO1xufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBNaXhpbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8vXG4vLy8gQSBtaW5pbXVtLW1heGltdW0gbWVkaWEgcXVlcnkgYnJlYWtwb2ludFxuLy8vXG4vLy8gQGdyb3VwICBoZWxwZXJzXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0gIHtOdW1iZXJ8TGlzdH0gJGJyZWFrcG9pbnQgTnVtYmVyIG9yIG51bWJlciBwYWlyXG4vLy9cbkBtaXhpbiBicmVhay1hdCgkYnJlYWtwb2ludCkge1xuICBAaWYgdHlwZS1vZigkYnJlYWtwb2ludCkgPT0gbnVtYmVyIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2VpZiB0eXBlLW9mKCRicmVha3BvaW50KSA9PSBsaXN0IHtcbiAgICAkbWluOiBudGgoJGJyZWFrcG9pbnQsIDEpO1xuICAgICRtYXg6IG50aCgkYnJlYWtwb2ludCwgMik7XG4gICAgQGlmIHR5cGUtb2YoJG1pbikgPT0gbnVtYmVyIGFuZCB0eXBlLW9mKCRtYXgpID09IG51bWJlciB7XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRtaW4pIGFuZCAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH0gQGVsc2Uge1xuICAgICAgQGVycm9yIFwiSW52YWxpZCBicmVha3BvaW50OiAjeyRicmVha3BvaW50fVwiO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGVycm9yIFwiSW52YWxpZCBicmVha3BvaW50OiAjeyRicmVha3BvaW50fVwiO1xuICB9XG59XG5cbi8vL1xuLy8vIEFuIG9yaWVudGF0aW9uIG1lZGlhIHF1ZXJ5IGJyZWFrcG9pbnRcbi8vL1xuLy8vIEBncm91cCAgaGVscGVyc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtICB7U3RyaW5nfSAkYnJlYWtwb2ludCBPcmllbnRhdGlvblxuLy8vXG5AbWl4aW4gYnJlYWstYXQtb3JpZW50YXRpb24oJGJyZWFrcG9pbnQpIHtcbiAgQGlmIHR5cGUtb2YoJGJyZWFrcG9pbnQpID09IHN0cmluZyB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAob3JpZW50YXRpb246ICRicmVha3BvaW50KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBlcnJvciBcIkludmFsaWQgYnJlYWtwb2ludDogI3skYnJlYWtwb2ludH1cIjtcbiAgfVxufVxuXG4vLy9cbi8vLyBBIG1heGltdW0tYXNwZWN0LXJhdGlvIG1lZGlhIHF1ZXJ5IGJyZWFrcG9pbnRcbi8vL1xuLy8vIEBncm91cCAgaGVscGVyc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtICB7TnVtYmVyfSAkYnJlYWtwb2ludCBSYXRpb1xuLy8vXG5AbWl4aW4gYnJlYWstYXQtcmF0aW8oJGJyZWFrcG9pbnQpIHtcbiAgQGlmIHR5cGUtb2YoJGJyZWFrcG9pbnQpID09IG51bWJlciB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LWFzcGVjdC1yYXRpbzogJGJyZWFrcG9pbnQpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGVycm9yIFwiSW52YWxpZCBicmVha3BvaW50OiAjeyRicmVha3BvaW50fVwiO1xuICB9XG59XG5cbi8vL1xuLy8vIEEgbWluaW11bS1tYXhpbXVtIG1lZGlhIHF1ZXJ5IGRldmljZSBicmVha3BvaW50XG4vLy9cbi8vLyBAZ3JvdXAgIGhlbHBlcnNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSAge1N0cmluZ3xMaXN0fSAkYnJlYWtwb2ludCBEZXZpY2Vcbi8vL1xuQG1peGluIGJyZWFrLWF0LWRldmljZSgkZGV2aWNlKSB7XG4gIEBpZiB0eXBlLW9mKCRkZXZpY2UpID09IHN0cmluZyB7XG4gICAgJGRldmljZTogJGRldmljZSw7XG4gIH1cbiAgQGlmIHR5cGUtb2YoJGRldmljZSkgPT0gbGlzdCB7XG4gICAgJGJyZWFrcG9pbnQ6IGJyZWFrLXNlbGVjdC1kZXZpY2UoJGRldmljZSk7XG4gICAgQGlmIG50aCgkYnJlYWtwb2ludCwgMikgIT0gbnVsbCB7XG4gICAgICAkbWluOiBudGgoJGJyZWFrcG9pbnQsIDEpO1xuICAgICAgJG1heDogbnRoKCRicmVha3BvaW50LCAyKTtcbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJG1pbikgYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSBAZWxzZSB7XG4gICAgICBAZXJyb3IgXCJJbnZhbGlkIGRldmljZTogI3skZGV2aWNlfVwiO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGVycm9yIFwiSW52YWxpZCBkZXZpY2U6ICN7JGRldmljZX1cIjtcbiAgfVxufVxuXG4vLy9cbi8vLyBBIG1pbmltdW0gbWVkaWEgcXVlcnkgZGV2aWNlIGJyZWFrcG9pbnRcbi8vL1xuLy8vIEBncm91cCAgaGVscGVyc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8gQHBhcmFtICB7U3RyaW5nfExpc3R9ICRicmVha3BvaW50IERldmljZVxuLy8vXG5AbWl4aW4gYnJlYWstZnJvbS1kZXZpY2UoJGRldmljZSkge1xuICBAaWYgdHlwZS1vZigkZGV2aWNlKSA9PSBzdHJpbmcge1xuICAgICRkZXZpY2U6ICRkZXZpY2UsO1xuICB9XG4gIEBpZiB0eXBlLW9mKCRkZXZpY2UpID09IGxpc3Qge1xuICAgICRicmVha3BvaW50OiBicmVhay1zZWxlY3QtZGV2aWNlKCRkZXZpY2UpO1xuICAgICRtaW46IG50aCgkYnJlYWtwb2ludCwgMSk7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbWluKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBlcnJvciBcIkludmFsaWQgZGV2aWNlOiAjeyRkZXZpY2V9XCI7XG4gIH1cbn1cblxuLy8vXG4vLy8gQSBtYXhpbXVtIG1lZGlhIHF1ZXJ5IGRldmljZSBicmVha3BvaW50XG4vLy9cbi8vLyBAZ3JvdXAgIGhlbHBlcnNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSAge1N0cmluZ3xMaXN0fSAkYnJlYWtwb2ludCBEZXZpY2Vcbi8vL1xuQG1peGluIGJyZWFrLXRvLWRldmljZSgkZGV2aWNlKSB7XG4gIEBpZiB0eXBlLW9mKCRkZXZpY2UpID09IHN0cmluZyB7XG4gICAgJGRldmljZTogJGRldmljZSw7XG4gIH1cbiAgQGlmIHR5cGUtb2YoJGRldmljZSkgPT0gbGlzdCB7XG4gICAgJGJyZWFrcG9pbnQ6IGJyZWFrLXNlbGVjdC1kZXZpY2UoJGRldmljZSk7XG4gICAgJG1heDogbnRoKCRicmVha3BvaW50LCAyKTtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGVycm9yIFwiSW52YWxpZCBkZXZpY2U6ICN7JGRldmljZX1cIjtcbiAgfVxufVxuIl19 */